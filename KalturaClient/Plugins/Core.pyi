# ===================================================================================================
#                           _  __     _ _
#                          | |/ /__ _| | |_ _  _ _ _ __ _
#                          | ' </ _` | |  _| || | '_/ _` |
#                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
#
# This file is part of the Kaltura Collaborative Media Suite which allows users
# to do with audio, video, and animation what Wiki platforms allow them to do with
# text.
#
# Copyright (C) 2006-2023  Kaltura Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.
#
# @ignore
# ===================================================================================================
from typing import List, IO, Any
from KalturaClient.Base import KalturaObjectBase, KalturaServiceBase

class KalturaAdsPolicy(object):
    NO_ADS = "NO_ADS"
    KEEP_ADS = "KEEP_ADS"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAggregationCountOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAggregationType(object):
    COUNT = "Count"
    SUM = "Sum"
    AVG = "Avg"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAnnouncementOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAnnouncementRecipientsType(object):
    ALL = "All"
    LOGGEDIN = "LoggedIn"
    GUESTS = "Guests"
    OTHER = "Other"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAnnouncementStatus(object):
    NOTSENT = "NotSent"
    SENDING = "Sending"
    SENT = "Sent"
    ABORTED = "Aborted"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaApiAction(object):
    ADD = "ADD"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaApiParameterPermissionItemAction(object):
    READ = "READ"
    INSERT = "INSERT"
    UPDATE = "UPDATE"
    WRITE = "WRITE"
    ALL = "ALL"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaApiService(object):
    HOUSEHOLD_DEVICE = "HOUSEHOLD_DEVICE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAppTokenHashType(object):
    SHA1 = "SHA1"
    SHA256 = "SHA256"
    SHA512 = "SHA512"
    MD5 = "MD5"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetCommentOrderBy(object):
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetEnrichCaptionType(object):
    SRT = "SRT"
    WEBTTV = "WebTTV"
    TEXT_ONLY = "Text_Only"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetFilePpvOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetHistoryOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetImagePerRatioOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetIndexStatus(object):
    OK = "Ok"
    DELETED = "Deleted"
    NOTUPDATED = "NotUpdated"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetInheritancePolicy(object):
    ENABLE = "Enable"
    DISABLE = "Disable"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetLifeCycleRuleActionType(object):
    ADD = "ADD"
    REMOVE = "REMOVE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetLifeCycleRuleTransitionType(object):
    TAG = "TAG"
    BUSINESS_MODEL = "BUSINESS_MODEL"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetOrderBy(object):
    RELEVANCY_DESC = "RELEVANCY_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    VIEWS_DESC = "VIEWS_DESC"
    RATINGS_DESC = "RATINGS_DESC"
    VOTES_DESC = "VOTES_DESC"
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    LIKES_DESC = "LIKES_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetOrderByStatistics(object):
    VIEWS_DESC = "VIEWS_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetOrderByType(object):
    RELEVANCY_DESC = "RELEVANCY_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    RATINGS_DESC = "RATINGS_DESC"
    VOTES_DESC = "VOTES_DESC"
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    LIKES_DESC = "LIKES_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetPersonalMarkupSearchOrderBy(object):
    NONE = "NONE"
    REQUEST_ORDER = "REQUEST_ORDER"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetReferenceType(object):
    MEDIA = "media"
    EPG_INTERNAL = "epg_internal"
    EPG_EXTERNAL = "epg_external"
    NPVR = "npvr"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetReminderOrderBy(object):
    RELEVANCY_DESC = "RELEVANCY_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    VIEWS_DESC = "VIEWS_DESC"
    RATINGS_DESC = "RATINGS_DESC"
    VOTES_DESC = "VOTES_DESC"
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    LIKES_DESC = "LIKES_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetRuleOrderBy(object):
    NONE = "NONE"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetRuleStatus(object):
    READY = "READY"
    IN_PROGRESS = "IN_PROGRESS"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetStructMetaOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetStructOrderBy(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    SYSTEM_NAME_ASC = "SYSTEM_NAME_ASC"
    SYSTEM_NAME_DESC = "SYSTEM_NAME_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetType(object):
    MEDIA = "media"
    RECORDING = "recording"
    EPG = "epg"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetUserRuleOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBillingAction(object):
    UNKNOWN = "unknown"
    PURCHASE = "purchase"
    RENEW_PAYMENT = "renew_payment"
    RENEW_CANCELED_SUBSCRIPTION = "renew_canceled_subscription"
    CANCEL_SUBSCRIPTION_ORDER = "cancel_subscription_order"
    SUBSCRIPTION_DATE_CHANGED = "subscription_date_changed"
    PENDING = "pending"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBillingItemsType(object):
    UNKNOWN = "unknown"
    PPV = "ppv"
    SUBSCRIPTION = "subscription"
    PRE_PAID = "pre_paid"
    PRE_PAID_EXPIRED = "pre_paid_expired"
    COLLECTION = "collection"
    PROGRAM_ASSET_GROUP_OFFER = "program_asset_group_offer"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBillingPriceType(object):
    FULLPERIOD = "FullPeriod"
    PARTIALPERIOD = "PartialPeriod"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBookmarkActionType(object):
    HIT = "HIT"
    PLAY = "PLAY"
    STOP = "STOP"
    PAUSE = "PAUSE"
    FIRST_PLAY = "FIRST_PLAY"
    SWOOSH = "SWOOSH"
    FULL_SCREEN = "FULL_SCREEN"
    SEND_TO_FRIEND = "SEND_TO_FRIEND"
    LOAD = "LOAD"
    FULL_SCREEN_EXIT = "FULL_SCREEN_EXIT"
    FINISH = "FINISH"
    ERROR = "ERROR"
    BITRATE_CHANGE = "BITRATE_CHANGE"
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBookmarkOrderBy(object):
    POSITION_ASC = "POSITION_ASC"
    POSITION_DESC = "POSITION_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBooleanOperator(object):
    AND = "And"
    OR = "Or"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadJobAction(object):
    UPSERT = "Upsert"
    DELETE = "Delete"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadJobStatus(object):
    PENDING = "Pending"
    UPLOADED = "Uploaded"
    QUEUED = "Queued"
    PARSING = "Parsing"
    PROCESSING = "Processing"
    PROCESSED = "Processed"
    SUCCESS = "Success"
    PARTIAL = "Partial"
    FAILED = "Failed"
    FATAL = "Fatal"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadOrderBy(object):
    NONE = "NONE"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadResultStatus(object):
    ERROR = "Error"
    OK = "Ok"
    INPROGRESS = "InProgress"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBundleType(object):
    SUBSCRIPTION = "subscription"
    COLLECTION = "collection"
    PAGO = "pago"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCampaignOrderBy(object):
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    END_DATE_DESC = "END_DATE_DESC"
    END_DATE_ASC = "END_DATE_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCaptionUploadStatus(object):
    PENDING = "Pending"
    UPLOADED = "Uploaded"
    PROCESSING = "Processing"
    SUCCESS = "Success"
    FAILED = "Failed"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCategoryItemOrderBy(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"
    NONE = "NONE"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCategoryVersionOrderBy(object):
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCategoryVersionState(object):
    DRAFT = "DRAFT"
    DEFAULT = "DEFAULT"
    RELEASED = "RELEASED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaChannelEnrichment(object):
    CLIENTLOCATION = "ClientLocation"
    USERID = "UserId"
    HOUSEHOLDID = "HouseholdId"
    DEVICEID = "DeviceId"
    DEVICETYPE = "DeviceType"
    UTCOFFSET = "UTCOffset"
    LANGUAGE = "Language"
    DTTREGION = "DTTRegion"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaChannelFieldOrderByType(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"
    RELEVANCY_DESC = "RELEVANCY_DESC"
    ORDER_NUM = "ORDER_NUM"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaChannelOrderBy(object):
    ORDER_NUM = "ORDER_NUM"
    RELEVANCY_DESC = "RELEVANCY_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    VIEWS_DESC = "VIEWS_DESC"
    RATINGS_DESC = "RATINGS_DESC"
    VOTES_DESC = "VOTES_DESC"
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    LIKES_DESC = "LIKES_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaChannelSlidingWindowOrderByType(object):
    LIKES_DESC = "LIKES_DESC"
    RATINGS_DESC = "RATINGS_DESC"
    VOTES_DESC = "VOTES_DESC"
    VIEWS_DESC = "VIEWS_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaChannelsOrderBy(object):
    NONE = "NONE"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaChannelStruct(object):
    MANUAL = "Manual"
    DYNAMIC = "Dynamic"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaChannelType(object):
    INTERNAL = "Internal"
    EXTERNAL = "External"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaChronologicalRecordStartTime(object):
    NONE = "NONE"
    NOW = "NOW"
    EPG_START_TIME = "EPG_START_TIME"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCollectionOrderBy(object):
    NONE = "NONE"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCompensationType(object):
    PERCENTAGE = "PERCENTAGE"
    FIXED_AMOUNT = "FIXED_AMOUNT"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConcurrencyLimitationType(object):
    SINGLE = "Single"
    GROUP = "Group"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConfigurationGroupDeviceOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConfigurationGroupTagOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConfigurationsOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaContentAction(object):
    WATCH_LINEAR = "watch_linear"
    WATCH_VOD = "watch_vod"
    CATCHUP = "catchup"
    NPVR = "npvr"
    FAVORITE = "favorite"
    RECORDING = "recording"
    SOCIAL_ACTION = "social_action"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaContentActionConditionLengthType(object):
    MINUTES = "minutes"
    PERCENTAGE = "percentage"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaContextType(object):
    NONE = "none"
    RECORDING = "recording"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCountryOrderBy(object):
    NAME_ASC = "NAME_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCouponGroupType(object):
    COUPON = "COUPON"
    GIFT_CARD = "GIFT_CARD"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCouponStatus(object):
    VALID = "VALID"
    NOT_EXISTS = "NOT_EXISTS"
    ALREADY_USED = "ALREADY_USED"
    EXPIRED = "EXPIRED"
    INACTIVE = "INACTIVE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCurrencyOrderBy(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    CODE_ASC = "CODE_ASC"
    CODE_DESC = "CODE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeleteMediaPolicy(object):
    DISABLE = "Disable"
    DELETE = "Delete"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeviceBrandOrderBy(object):
    ID_ASC = "ID_ASC"
    ID_DESC = "ID_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeviceBrandType(object):
    SYSTEM = "System"
    CUSTOM = "Custom"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeviceFamilyOrderBy(object):
    ID_ASC = "ID_ASC"
    ID_DESC = "ID_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeviceFamilyType(object):
    SYSTEM = "System"
    CUSTOM = "Custom"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeviceReferenceDataOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeviceStatus(object):
    PENDING = "PENDING"
    ACTIVATED = "ACTIVATED"
    NOT_ACTIVATED = "NOT_ACTIVATED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDowngradePolicy(object):
    LIFO = "LIFO"
    FIFO = "FIFO"
    ACTIVE_DATE = "ACTIVE_DATE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDrmSchemeName(object):
    PLAYREADY_CENC = "PLAYREADY_CENC"
    WIDEVINE_CENC = "WIDEVINE_CENC"
    FAIRPLAY = "FAIRPLAY"
    WIDEVINE = "WIDEVINE"
    PLAYREADY = "PLAYREADY"
    CUSTOM_DRM = "CUSTOM_DRM"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDurationUnit(object):
    MINUTES = "Minutes"
    HOURS = "Hours"
    DAYS = "Days"
    MONTHS = "Months"
    YEARS = "Years"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDynamicListOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEncryptionType(object):
    AES256 = "AES256"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEngagementOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEngagementType(object):
    CHURN = "Churn"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntitlementOrderBy(object):
    PURCHASE_DATE_ASC = "PURCHASE_DATE_ASC"
    PURCHASE_DATE_DESC = "PURCHASE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntityAttribute(object):
    MEDIA_FILE_LABELS = "MEDIA_FILE_LABELS"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntityReferenceBy(object):
    USER = "user"
    HOUSEHOLD = "household"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEpgOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEventNotificationOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEventNotificationStatus(object):
    SENT = "SENT"
    FAILED = "FAILED"
    SUCCESS = "SUCCESS"
    FAILED_TO_SEND = "FAILED_TO_SEND"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEvictionPolicyType(object):
    FIFO = "FIFO"
    LIFO = "LIFO"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaExportDataType(object):
    VOD = "vod"
    EPG = "epg"
    USERS = "users"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaExportTaskOrderBy(object):
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaExportType(object):
    FULL = "full"
    INCREMENTAL = "incremental"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaExternalChannelProfileOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaExternalRecordingResponseProfileOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFavoriteOrderBy(object):
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFollowTvSeriesOrderBy(object):
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGroupByField(object):
    MEDIA_TYPE_ID = "media_type_id"
    SUPPRESSED = "suppressed"
    CRID = "crid"
    LINEAR_MEDIA_ID = "linear_media_id"
    NAME = "name"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGroupByOrder(object):
    DEFAULTORDER = "defaultOrder"
    COUNT_ASC = "count_asc"
    COUNT_DESC = "count_desc"
    VALUE_ASC = "value_asc"
    VALUE_DESC = "value_desc"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGroupingOption(object):
    OMIT = "Omit"
    INCLUDE = "Include"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdCouponOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdDeviceOrderBy(object):
    NONE = "NONE"
    CREATED_DATE_ASC = "CREATED_DATE_ASC"
    CREATED_DATE_DESC = "CREATED_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdFrequencyType(object):
    DEVICES = "devices"
    USERS = "users"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdOrderBy(object):
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdPaymentGatewaySelectedBy(object):
    NONE = "none"
    ACCOUNT = "account"
    HOUSEHOLD = "household"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdRestriction(object):
    NOT_RESTRICTED = "not_restricted"
    USER_MASTER_RESTRICTED = "user_master_restricted"
    DEVICE_MASTER_RESTRICTED = "device_master_restricted"
    DEVICE_USER_MASTER_RESTRICTED = "device_user_master_restricted"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdSegmentOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdState(object):
    OK = "ok"
    CREATED_WITHOUT_NPVR_ACCOUNT = "created_without_npvr_account"
    SUSPENDED = "suspended"
    NO_USERS_IN_HOUSEHOLD = "no_users_in_household"
    PENDING = "pending"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdSuspensionState(object):
    NOT_SUSPENDED = "NOT_SUSPENDED"
    SUSPENDED = "SUSPENDED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdUserOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaHouseholdUserStatus(object):
    OK = "OK"
    PENDING = "PENDING"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaImageObjectType(object):
    MEDIA_ASSET = "MEDIA_ASSET"
    PROGRAM_ASSET = "PROGRAM_ASSET"
    CHANNEL = "CHANNEL"
    CATEGORY = "CATEGORY"
    PARTNER = "PARTNER"
    IMAGE_TYPE = "IMAGE_TYPE"
    PROGRAM_GROUP = "PROGRAM_GROUP"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaImageOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaImageStatus(object):
    PENDING = "PENDING"
    READY = "READY"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaImageTypeOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaInboxMessageOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaInboxMessageStatus(object):
    UNREAD = "Unread"
    READ = "Read"
    DELETED = "Deleted"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaInboxMessageType(object):
    SYSTEMANNOUNCEMENT = "SystemAnnouncement"
    FOLLOWED = "Followed"
    ENGAGEMENT = "Engagement"
    INTEREST = "Interest"
    CAMPAIGN = "Campaign"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaIngestEpgProgramResultOrderBy(object):
    NONE = "NONE"
    EXTERNAL_PROGRAM_ID_DESC = "EXTERNAL_PROGRAM_ID_DESC"
    EXTERNAL_PROGRAM_ID_ASC = "EXTERNAL_PROGRAM_ID_ASC"
    LINEAR_CHANNEL_ID_DESC = "LINEAR_CHANNEL_ID_DESC"
    LINEAR_CHANNEL_ID_ASC = "LINEAR_CHANNEL_ID_ASC"
    INDEX_IN_FILE_DESC = "INDEX_IN_FILE_DESC"
    INDEX_IN_FILE_ASC = "INDEX_IN_FILE_ASC"
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    SEVERITY_DESC = "SEVERITY_DESC"
    SEVERITY_ASC = "SEVERITY_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaIngestEpgProgramStatus(object):
    FAILURE = "FAILURE"
    WARNING = "WARNING"
    SUCCESS = "SUCCESS"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaIngestProfileAutofillPolicy(object):
    REJECT = "REJECT"
    AUTOFILL = "AUTOFILL"
    KEEP_HOLES = "KEEP_HOLES"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaIngestProfileOverlapPolicy(object):
    REJECT = "REJECT"
    CUT_SOURCE = "CUT_SOURCE"
    CUT_TARGET = "CUT_TARGET"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaIngestStatus(object):
    TOTAL_FAILURE = "TOTAL_FAILURE"
    PARTIAL_FAILURE = "PARTIAL_FAILURE"
    WARNING = "WARNING"
    IN_PROGRESS = "IN_PROGRESS"
    SUCCESS = "SUCCESS"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaIotOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaIotProfileOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLabelOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLanguageOrderBy(object):
    SYSTEM_NAME_ASC = "SYSTEM_NAME_ASC"
    SYSTEM_NAME_DESC = "SYSTEM_NAME_DESC"
    CODE_ASC = "CODE_ASC"
    CODE_DESC = "CODE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLinearChannelType(object):
    UNKNOWN = "UNKNOWN"
    DTT = "DTT"
    OTT = "OTT"
    DTT_AND_OTT = "DTT_AND_OTT"
    VRM_EXPORT = "VRM_EXPORT"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLineupRegionalChannelOrderBy(object):
    LCN_ASC = "LCN_ASC"
    LCN_DESC = "LCN_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaListGroupsRepresentativesOrderBy(object):
    NONE = "None"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaManualCollectionAssetType(object):
    MEDIA = "media"
    EPG = "epg"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMathemticalOperatorType(object):
    COUNT = "count"
    SUM = "sum"
    AVG = "avg"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaFileDynamicDataOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaFileOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaFileStreamerType(object):
    APPLE_HTTP = "APPLE_HTTP"
    MPEG_DASH = "MPEG_DASH"
    URL = "URL"
    SMOOTH_STREAMING = "SMOOTH_STREAMING"
    MULTICAST = "MULTICAST"
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaFileTypeQuality(object):
    ADAPTIVE = "ADAPTIVE"
    SD = "SD"
    HD_720 = "HD_720"
    HD_1080 = "HD_1080"
    UHD_4K = "UHD_4K"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMessageTemplateType(object):
    SERIES = "Series"
    REMINDER = "Reminder"
    CHURN = "Churn"
    SERIESREMINDER = "SeriesReminder"
    INTERESTVOD = "InterestVod"
    INTERESTEPG = "InterestEPG"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMetaDataType(object):
    STRING = "STRING"
    MULTILINGUAL_STRING = "MULTILINGUAL_STRING"
    NUMBER = "NUMBER"
    BOOLEAN = "BOOLEAN"
    DATE = "DATE"
    RELEATED_ENTITY = "RELEATED_ENTITY"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMetaOrderBy(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    SYSTEM_NAME_ASC = "SYSTEM_NAME_ASC"
    SYSTEM_NAME_DESC = "SYSTEM_NAME_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMetaTagOrderBy(object):
    META_ASC = "META_ASC"
    META_DESC = "META_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMonetizationType(object):
    PPV = "ppv"
    SUBSCRIPTION = "subscription"
    BOXSET = "boxset"
    ANY = "any"
    PPV_LIVE = "ppv_live"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaNotificationType(object):
    ANNOUNCEMENT = "announcement"
    SYSTEM = "system"
    REMINDER = "Reminder"
    SERIES_REMINDER = "series_reminder"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaNotWatchedReturnStrategy(object):
    RETURN_NO_NEXT_EPISODE = "RETURN_NO_NEXT_EPISODE"
    RETURN_FIRST_EPISODE = "RETURN_FIRST_EPISODE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaObjectState(object):
    INACTIVE = "INACTIVE"
    ACTIVE = "ACTIVE"
    ARCHIVE = "ARCHIVE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaObjectVirtualAssetInfoType(object):
    SUBSCRIPTION = "Subscription"
    SEGMENT = "Segment"
    CATEGORY = "Category"
    TVOD = "Tvod"
    BOXSET = "Boxset"
    PAGO = "PAGO"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaOTTUserOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaParentalRuleOrderBy(object):
    PARTNER_SORT_VALUE = "PARTNER_SORT_VALUE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaParentalRuleType(object):
    ALL = "ALL"
    MOVIES = "MOVIES"
    TV_SERIES = "TV_SERIES"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPartnerConfigurationOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPartnerConfigurationType(object):
    DEFAULTPAYMENTGATEWAY = "DefaultPaymentGateway"
    ENABLEPAYMENTGATEWAYSELECTION = "EnablePaymentGatewaySelection"
    OSSADAPTER = "OSSAdapter"
    CONCURRENCY = "Concurrency"
    GENERAL = "General"
    OBJECTVIRTUALASSET = "ObjectVirtualAsset"
    COMMERCE = "Commerce"
    PLAYBACK = "Playback"
    PAYMENT = "Payment"
    CATALOG = "Catalog"
    SECURITY = "Security"
    OPC = "Opc"
    BASE = "Base"
    CUSTOMFIELDS = "CustomFields"
    DEFAULTPARENTALSETTINGS = "DefaultParentalSettings"
    CLOUDUPLOADSETTINGS = "CloudUploadSettings"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPasswordPolicyOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPaymentMethodProfileOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPaymentMethodType(object):
    UNKNOWN = "unknown"
    CREDIT_CARD = "credit_card"
    SMS = "sms"
    PAY_PAL = "pay_pal"
    DEBIT_CARD = "debit_card"
    IDEAL = "ideal"
    INCASO = "incaso"
    GIFT = "gift"
    VISA = "visa"
    MASTER_CARD = "master_card"
    IN_APP = "in_app"
    M1 = "m1"
    CHANGE_SUBSCRIPTION = "change_subscription"
    OFFLINE = "offline"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPermissionItemOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPermissionOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPermissionType(object):
    NORMAL = "NORMAL"
    GROUP = "GROUP"
    SPECIAL_FEATURE = "SPECIAL_FEATURE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPersonalAssetSelectionOrderBy(object):
    ASSET_SELECTION_DATE_DESC = "ASSET_SELECTION_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPersonalFeedOrderBy(object):
    RELEVANCY_DESC = "RELEVANCY_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    VIEWS_DESC = "VIEWS_DESC"
    RATINGS_DESC = "RATINGS_DESC"
    VOTES_DESC = "VOTES_DESC"
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPersonalListOrderBy(object):
    CREATE_DATE_DESC = "CREATE_DATE_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPinType(object):
    PURCHASE = "purchase"
    PARENTAL = "parental"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlatform(object):
    ANDROID = "Android"
    IOS = "iOS"
    WINDOWSPHONE = "WindowsPhone"
    BLACKBERRY = "Blackberry"
    STB = "STB"
    CTV = "CTV"
    OTHER = "Other"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlaybackContextType(object):
    TRAILER = "TRAILER"
    CATCHUP = "CATCHUP"
    START_OVER = "START_OVER"
    PLAYBACK = "PLAYBACK"
    DOWNLOAD = "DOWNLOAD"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlaybackProfileOrderBy(object):
    NAME_ASC = "NAME_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPositionOwner(object):
    HOUSEHOLD = "household"
    USER = "user"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPpvOrderBy(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPreviewModuleOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPriceDetailsOrderBy(object):
    NAME_ASC = "NAME_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPricePlanOrderBy(object):
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaProductPriceOrderBy(object):
    PRODUCT_ID_ASC = "PRODUCT_ID_ASC"
    PRODUCT_ID_DESC = "PRODUCT_ID_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaProgramAssetGroupOfferOrderBy(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaProtectionPolicy(object):
    EXTENDINGRECORDINGLIFETIME = "ExtendingRecordingLifetime"
    LIMITEDBYRECORDINGLIFETIME = "LimitedByRecordingLifetime"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPurchaseSettingsType(object):
    BLOCK = "block"
    ASK = "ask"
    ALLOW = "allow"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPurchaseStatus(object):
    PPV_PURCHASED = "ppv_purchased"
    FREE = "free"
    FOR_PURCHASE_SUBSCRIPTION_ONLY = "for_purchase_subscription_only"
    SUBSCRIPTION_PURCHASED = "subscription_purchased"
    FOR_PURCHASE = "for_purchase"
    SUBSCRIPTION_PURCHASED_WRONG_CURRENCY = "subscription_purchased_wrong_currency"
    PRE_PAID_PURCHASED = "pre_paid_purchased"
    GEO_COMMERCE_BLOCKED = "geo_commerce_blocked"
    ENTITLED_TO_PREVIEW_MODULE = "entitled_to_preview_module"
    FIRST_DEVICE_LIMITATION = "first_device_limitation"
    COLLECTION_PURCHASED = "collection_purchased"
    USER_SUSPENDED = "user_suspended"
    NOT_FOR_PURCHASE = "not_for_purchase"
    INVALID_CURRENCY = "invalid_currency"
    CURRENCY_NOT_DEFINED_ON_PRICE_CODE = "currency_not_defined_on_price_code"
    PENDING_ENTITLEMENT = "pending_entitlement"
    PROGRAM_ASSET_GROUP_OFFER_PURCHASED = "program_asset_group_offer_purchased"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaQuotaOveragePolicy(object):
    STOPATQUOTA = "StopAtQuota"
    FIFOAUTODELETE = "FIFOAutoDelete"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRecordingContextOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRecordingOrderBy(object):
    TITLE_ASC = "TITLE_ASC"
    TITLE_DESC = "TITLE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    START_DATE_DESC = "START_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRecordingStatus(object):
    SCHEDULED = "SCHEDULED"
    RECORDING = "RECORDING"
    RECORDED = "RECORDED"
    CANCELED = "CANCELED"
    FAILED = "FAILED"
    DELETED = "DELETED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRecordingType(object):
    SINGLE = "SINGLE"
    SEASON = "SEASON"
    SERIES = "SERIES"
    ORIGINALBROADCAST = "OriginalBroadcast"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRegionOrderBy(object):
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRelatedEntityType(object):
    CHANNEL = "CHANNEL"
    EXTERNAL_CHANNEL = "EXTERNAL_CHANNEL"
    MEDIA = "MEDIA"
    PROGRAM = "PROGRAM"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaReminderType(object):
    ASSET = "ASSET"
    SERIES = "SERIES"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaReportOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaResponseType(object):
    JSON = 1
    XML = 2
    JSONP = 9
    ASSET_XML = 30
    EXCEL = 31

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaRollingDevicePolicy(object):
    NONE = "NONE"
    LIFO = "LIFO"
    FIFO = "FIFO"
    ACTIVE_DEVICE_ASCENDING = "ACTIVE_DEVICE_ASCENDING"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRuleActionType(object):
    BLOCK = "BLOCK"
    START_DATE_OFFSET = "START_DATE_OFFSET"
    END_DATE_OFFSET = "END_DATE_OFFSET"
    USER_BLOCK = "USER_BLOCK"
    ALLOW_PLAYBACK = "ALLOW_PLAYBACK"
    BLOCK_PLAYBACK = "BLOCK_PLAYBACK"
    APPLY_DISCOUNT_MODULE = "APPLY_DISCOUNT_MODULE"
    APPLY_PLAYBACK_ADAPTER = "APPLY_PLAYBACK_ADAPTER"
    FILTER = "FILTER"
    ASSET_LIFE_CYCLE_TRANSITION = "ASSET_LIFE_CYCLE_TRANSITION"
    APPLY_FREE_PLAYBACK = "APPLY_FREE_PLAYBACK"
    FILTERASSETBYKSQL = "FilterAssetByKsql"
    FILTERFILEBYQUALITYINDISCOVERY = "FilterFileByQualityInDiscovery"
    FILTERFILEBYQUALITYINPLAYBACK = "FilterFileByQualityInPlayback"
    FILTERFILEBYFILETYPEIDFORASSETTYPEINDISCOVERY = "FilterFileByFileTypeIdForAssetTypeInDiscovery"
    FILTERFILEBYFILETYPEIDFORASSETTYPEINPLAYBACK = "FilterFileByFileTypeIdForAssetTypeInPlayback"
    FILTERFILEBYFILETYPEIDINDISCOVERY = "FilterFileByFileTypeIdInDiscovery"
    FILTERFILEBYFILETYPEIDINPLAYBACK = "FilterFileByFileTypeIdInPlayback"
    FILTERFILEBYAUDIOCODECINDISCOVERY = "FilterFileByAudioCodecInDiscovery"
    FILTERFILEBYAUDIOCODECINPLAYBACK = "FilterFileByAudioCodecInPlayback"
    FILTERFILEBYVIDEOCODECINDISCOVERY = "FilterFileByVideoCodecInDiscovery"
    FILTERFILEBYVIDEOCODECINPLAYBACK = "FilterFileByVideoCodecInPlayback"
    FILTERFILEBYSTREAMERTYPEINDISCOVERY = "FilterFileByStreamerTypeInDiscovery"
    FILTERFILEBYSTREAMERTYPEINPLAYBACK = "FilterFileByStreamerTypeInPlayback"
    FILTERFILEBYLABELINDISCOVERY = "FilterFileByLabelInDiscovery"
    FILTERFILEBYLABELINPLAYBACK = "FilterFileByLabelInPlayback"
    FILTERFILEBYDYNAMICDATAINDISCOVERY = "FilterFileByDynamicDataInDiscovery"
    FILTERFILEBYDYNAMICDATAINPLAYBACK = "FilterFileByDynamicDataInPlayback"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRuleConditionType(object):
    ASSET = "ASSET"
    COUNTRY = "COUNTRY"
    CONCURRENCY = "CONCURRENCY"
    IP_RANGE = "IP_RANGE"
    BUSINESS_MODULE = "BUSINESS_MODULE"
    SEGMENTS = "SEGMENTS"
    DATE = "DATE"
    OR = "OR"
    HEADER = "HEADER"
    USER_SUBSCRIPTION = "USER_SUBSCRIPTION"
    ASSET_SUBSCRIPTION = "ASSET_SUBSCRIPTION"
    USER_ROLE = "USER_ROLE"
    DEVICE_BRAND = "DEVICE_BRAND"
    DEVICE_FAMILY = "DEVICE_FAMILY"
    DEVICE_MANUFACTURER = "DEVICE_MANUFACTURER"
    DEVICE_MODEL = "DEVICE_MODEL"
    DEVICE_UDID_DYNAMIC_LIST = "DEVICE_UDID_DYNAMIC_LIST"
    DYNAMIC_KEYS = "DYNAMIC_KEYS"
    USER_SESSION_PROFILE = "USER_SESSION_PROFILE"
    DEVICE_DYNAMIC_DATA = "DEVICE_DYNAMIC_DATA"
    IP_V6_RANGE = "IP_V6_RANGE"
    ASSET_SHOP = "ASSET_SHOP"
    CHANNEL = "CHANNEL"
    FILE_TYPE = "FILE_TYPE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRuleLevel(object):
    INVALID = "invalid"
    USER = "user"
    HOUSEHOLD = "household"
    ACCOUNT = "account"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRuleType(object):
    PARENTAL = "parental"
    GEO = "geo"
    USER_TYPE = "user_type"
    DEVICE = "device"
    ASSETUSER = "assetUser"
    NETWORK = "network"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaScheduledRecordingAssetType(object):
    SINGLE = "single"
    SERIES = "series"
    ALL = "all"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSearchHistoryOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSearchPriorityCriteriaType(object):
    KSQL = "KSql"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSearchPriorityGroupOrderBy(object):
    PRIORITY_DESC = "PRIORITY_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSegmentationTypeOrderBy(object):
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    EXECUTE_DATE_DESC = "EXECUTE_DATE_DESC"
    EXECUTE_DATE_ASC = "EXECUTE_DATE_ASC"
    AFFECTED_USERS_DESC = "AFFECTED_USERS_DESC"
    AFFECTED_USERS_ASC = "AFFECTED_USERS_ASC"
    AFFECTED_HOUSEHOLDS_DESC = "AFFECTED_HOUSEHOLDS_DESC"
    AFFECTED_HOUSEHOLDS_ASC = "AFFECTED_HOUSEHOLDS_ASC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSeriesRecordingOrderBy(object):
    START_DATE_ASC = "START_DATE_ASC"
    START_DATE_DESC = "START_DATE_DESC"
    ID_ASC = "ID_ASC"
    ID_DESC = "ID_DESC"
    SERIES_ID_ASC = "SERIES_ID_ASC"
    SERIES_ID_DESC = "SERIES_ID_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSeriesReminderOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSkipOperators(object):
    EQUAL = "Equal"
    UNEQUAL = "UnEqual"
    LESSTHAN = "LessThan"
    GREATERTHAN = "GreaterThan"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSkipOptions(object):
    NO = "No"
    PREVIOUS = "Previous"
    ANY = "Any"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSmsAdapterProfileOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialActionOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialActionPrivacy(object):
    ALLOW = "ALLOW"
    DONT_ALLOW = "DONT_ALLOW"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialActionType(object):
    LIKE = "LIKE"
    WATCH = "WATCH"
    RATE = "RATE"
    SHARE = "SHARE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialCommentOrderBy(object):
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialFriendActivityOrderBy(object):
    NONE = "NONE"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialNetwork(object):
    FACEBOOK = "facebook"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialPlatform(object):
    IN_APP = "IN_APP"
    FACEBOOK = "FACEBOOK"
    TWITTER = "TWITTER"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialPrivacy(object):
    UNKNOWN = "UNKNOWN"
    EVERYONE = "EVERYONE"
    ALL_FRIENDS = "ALL_FRIENDS"
    FRIENDS_OF_FRIENDS = "FRIENDS_OF_FRIENDS"
    SELF = "SELF"
    CUSTOM = "CUSTOM"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSocialStatus(object):
    ERROR = "error"
    OK = "ok"
    USER_DOES_NOT_EXIST = "user_does_not_exist"
    NO_USER_SOCIAL_SETTINGS_FOUND = "no_user_social_settings_found"
    ASSET_ALREADY_LIKED = "asset_already_liked"
    NOT_ALLOWED = "not_allowed"
    INVALID_PARAMETERS = "invalid_parameters"
    NO_FACEBOOK_ACTION = "no_facebook_action"
    ASSET_ALREADY_RATED = "asset_already_rated"
    ASSET_DOSE_NOT_EXISTS = "asset_dose_not_exists"
    INVALID_PLATFORM_REQUEST = "invalid_platform_request"
    INVALID_ACCESS_TOKEN = "invalid_access_token"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaStreamingDeviceOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaStreamType(object):
    CATCHUP = "catchup"
    START_OVER = "start_over"
    TRICK_PLAY = "trick_play"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSubscriptionDependencyType(object):
    NOTAPPLICABLE = "NOTAPPLICABLE"
    BASE = "BASE"
    ADDON = "ADDON"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSubscriptionOrderBy(object):
    START_DATE_ASC = "START_DATE_ASC"
    START_DATE_DESC = "START_DATE_DESC"
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"
    UPDATE_DATE_ASC = "UPDATE_DATE_ASC"
    UPDATE_DATE_DESC = "UPDATE_DATE_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSubscriptionSetOrderBy(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSubscriptionSetType(object):
    SWITCH = "SWITCH"
    DEPENDENCY = "DEPENDENCY"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSubscriptionTriggerType(object):
    START_DATE = "START_DATE"
    END_DATE = "END_DATE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSuspensionProfileInheritanceType(object):
    ALWAYS = "ALWAYS"
    NEVER = "NEVER"
    DEFAULT = "DEFAULT"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTagOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTimeShiftedTvState(object):
    INHERITED = "INHERITED"
    ENABLED = "ENABLED"
    DISABLED = "DISABLED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTokenDeliveryMethod(object):
    EMAIL = "Email"
    SSO = "Sso"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTopicAutomaticIssueNotification(object):
    INHERIT = "Inherit"
    YES = "Yes"
    NO = "No"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTopicNotificationMessageOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTopicNotificationOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTopicOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTransactionAdapterStatus(object):
    OK = "OK"
    PENDING = "PENDING"
    FAILED = "FAILED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTransactionHistoryOrderBy(object):
    CREATE_DATE_ASC = "CREATE_DATE_ASC"
    CREATE_DATE_DESC = "CREATE_DATE_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTransactionType(object):
    PPV = "ppv"
    SUBSCRIPTION = "subscription"
    COLLECTION = "collection"
    PROGRAMASSETGROUPOFFER = "programAssetGroupOffer"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTvmRuleOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTvmRuleType(object):
    GEO = "Geo"
    DEVICE = "Device"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUnmatchedItemsPolicy(object):
    OMIT = "OMIT"
    GROUP = "GROUP"
    INCLUDE_AND_MERGE = "INCLUDE_AND_MERGE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUploadTokenStatus(object):
    PENDING = "PENDING"
    FULL_UPLOAD = "FULL_UPLOAD"
    CLOSED = "CLOSED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUrlType(object):
    PLAYMANIFEST = "PLAYMANIFEST"
    DIRECT = "DIRECT"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserAssetRuleOrderBy(object):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserAssetsListItemType(object):
    ALL = "all"
    MEDIA = "media"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserAssetsListType(object):
    ALL = "all"
    WATCH = "watch"
    PURCHASE = "purchase"
    LIBRARY = "library"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserRoleOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserRoleProfile(object):
    USER = "USER"
    PARTNER = "PARTNER"
    PROFILE = "PROFILE"
    SYSTEM = "SYSTEM"
    PERMISSION_EMBEDDED = "PERMISSION_EMBEDDED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserRoleType(object):
    SYSTEM = "SYSTEM"
    CUSTOM = "CUSTOM"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserState(object):
    OK = "ok"
    USER_WITH_NO_HOUSEHOLD = "user_with_no_household"
    USER_CREATED_WITH_NO_ROLE = "user_created_with_no_role"
    USER_NOT_ACTIVATED = "user_not_activated"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaVodIngestAssetResultOrderBy(object):
    FILE_NAME_ASC = "FILE_NAME_ASC"
    FILE_NAME_DESC = "FILE_NAME_DESC"
    ASSET_NAME_ASC = "ASSET_NAME_ASC"
    ASSET_NAME_DESC = "ASSET_NAME_DESC"
    INGEST_DATE_ASC = "INGEST_DATE_ASC"
    INGEST_DATE_DESC = "INGEST_DATE_DESC"
    STATUS_ASC = "STATUS_ASC"
    STATUS_DESC = "STATUS_DESC"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaVodIngestAssetResultStatus(object):
    FAILURE = "FAILURE"
    EXTERNAL_FAILURE = "EXTERNAL_FAILURE"
    SUCCESS_WARNING = "SUCCESS_WARNING"
    SUCCESS = "SUCCESS"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaWatchBasedRecommendationsProfileOrderBy(object):
    NONE = "NONE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaWatchedAllReturnStrategy(object):
    RETURN_NO_NEXT_EPISODE = "RETURN_NO_NEXT_EPISODE"
    RETURN_FIRST_EPISODE = "RETURN_FIRST_EPISODE"
    RETURN_LAST_EPISODE = "RETURN_LAST_EPISODE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaWatchStatus(object):
    PROGRESS = "progress"
    DONE = "done"
    ALL = "all"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaApiExceptionArg(KalturaObjectBase):
    name: str
    value: str
    def __init__(self,
            name: str = NotImplemented,
            value: str = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaClientConfiguration(KalturaObjectBase):
    clientTag: str
    apiVersion: str
    def __init__(self,
            clientTag: str = NotImplemented,
            apiVersion: str = NotImplemented): ...

    def getClientTag(self) -> str: ...
    def setClientTag(self, newClientTag: str) -> None: ...
    def getApiVersion(self) -> str: ...
    def setApiVersion(self, newApiVersion: str) -> None: ...

class KalturaBaseResponseProfile(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaSkipCondition(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaRequestConfiguration(KalturaObjectBase):
    partnerId: int
    userId: int
    language: str
    currency: str
    ks: str
    responseProfile: KalturaBaseResponseProfile
    abortOnError: bool
    abortAllOnError: bool
    skipCondition: KalturaSkipCondition
    def __init__(self,
            partnerId: int = NotImplemented,
            userId: int = NotImplemented,
            language: str = NotImplemented,
            currency: str = NotImplemented,
            ks: str = NotImplemented,
            responseProfile: KalturaBaseResponseProfile = NotImplemented,
            abortOnError: bool = NotImplemented,
            abortAllOnError: bool = NotImplemented,
            skipCondition: KalturaSkipCondition = NotImplemented): ...

    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getUserId(self) -> int: ...
    def setUserId(self, newUserId: int) -> None: ...
    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getCurrency(self) -> str: ...
    def setCurrency(self, newCurrency: str) -> None: ...
    def getKs(self) -> str: ...
    def setKs(self, newKs: str) -> None: ...
    def getResponseProfile(self) -> KalturaBaseResponseProfile: ...
    def setResponseProfile(self, newResponseProfile: KalturaBaseResponseProfile) -> None: ...
    def getAbortOnError(self) -> bool: ...
    def setAbortOnError(self, newAbortOnError: bool) -> None: ...
    def getAbortAllOnError(self) -> bool: ...
    def setAbortAllOnError(self, newAbortAllOnError: bool) -> None: ...
    def getSkipCondition(self) -> KalturaSkipCondition: ...
    def setSkipCondition(self, newSkipCondition: KalturaSkipCondition) -> None: ...

class KalturaFilter(KalturaObjectBase):
    orderBy: str
    def __init__(self,
            orderBy: str = NotImplemented): ...

    def getOrderBy(self) -> str: ...
    def setOrderBy(self, newOrderBy: str) -> None: ...

class KalturaDetachedResponseProfile(KalturaBaseResponseProfile):
    name: str
    filter: KalturaRelatedObjectFilter
    relatedProfiles: List[KalturaDetachedResponseProfile]
    def __init__(self,
            name: str = NotImplemented,
            filter: KalturaRelatedObjectFilter = NotImplemented,
            relatedProfiles: List[KalturaDetachedResponseProfile] = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getFilter(self) -> KalturaRelatedObjectFilter: ...
    def setFilter(self, newFilter: KalturaRelatedObjectFilter) -> None: ...
    def getRelatedProfiles(self) -> List[KalturaDetachedResponseProfile]: ...
    def setRelatedProfiles(self, newRelatedProfiles: List[KalturaDetachedResponseProfile]) -> None: ...

class KalturaOnDemandResponseProfile(KalturaDetachedResponseProfile):
    retrievedProperties: str
    def __init__(self,
            name: str = NotImplemented,
            filter: KalturaRelatedObjectFilter = NotImplemented,
            relatedProfiles: List[KalturaDetachedResponseProfile] = NotImplemented,
            retrievedProperties: str = NotImplemented): ...

    def getRetrievedProperties(self) -> str: ...
    def setRetrievedProperties(self, newRetrievedProperties: str) -> None: ...

class KalturaRelatedObjectFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaDeviceReferenceDataFilter(KalturaFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaDeviceManufacturersReferenceDataFilter(KalturaDeviceReferenceDataFilter):
    nameEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            nameEqual: str = NotImplemented): ...

    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...

class KalturaValue(KalturaObjectBase):
    description: str
    def __init__(self,
            description: str = NotImplemented): ...

    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaIntegerValue(KalturaValue):
    value: int
    def __init__(self,
            description: str = NotImplemented,
            value: int = NotImplemented): ...

    def getValue(self) -> int: ...
    def setValue(self, newValue: int) -> None: ...

class KalturaFavoriteFilter(KalturaFilter):
    mediaTypeEqual: int
    mediaIdIn: str
    udidEqualCurrent: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            mediaTypeEqual: int = NotImplemented,
            mediaIdIn: str = NotImplemented,
            udidEqualCurrent: bool = NotImplemented): ...

    def getMediaTypeEqual(self) -> int: ...
    def setMediaTypeEqual(self, newMediaTypeEqual: int) -> None: ...
    def getMediaIdIn(self) -> str: ...
    def setMediaIdIn(self, newMediaIdIn: str) -> None: ...
    def getUdidEqualCurrent(self) -> bool: ...
    def setUdidEqualCurrent(self, newUdidEqualCurrent: bool) -> None: ...

class KalturaBooleanValue(KalturaValue):
    value: bool
    def __init__(self,
            description: str = NotImplemented,
            value: bool = NotImplemented): ...

    def getValue(self) -> bool: ...
    def setValue(self, newValue: bool) -> None: ...

class KalturaDoubleValue(KalturaValue):
    value: float
    def __init__(self,
            description: str = NotImplemented,
            value: float = NotImplemented): ...

    def getValue(self) -> float: ...
    def setValue(self, newValue: float) -> None: ...

class KalturaLongValue(KalturaValue):
    value: int
    def __init__(self,
            description: str = NotImplemented,
            value: int = NotImplemented): ...

    def getValue(self) -> int: ...
    def setValue(self, newValue: int) -> None: ...

class KalturaTranslationToken(KalturaObjectBase):
    language: str
    value: str
    def __init__(self,
            language: str = NotImplemented,
            value: str = NotImplemented): ...

    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaMultilingualStringValue(KalturaValue):
    value: str
    multilingualValue: List[KalturaTranslationToken]
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented,
            multilingualValue: List[KalturaTranslationToken] = NotImplemented): ...

    def getValue(self) -> str: ...
    def getMultilingualValue(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualValue(self, newMultilingualValue: List[KalturaTranslationToken]) -> None: ...

class KalturaStringValue(KalturaValue):
    value: str
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaOTTUserFilter(KalturaFilter):
    usernameEqual: str
    externalIdEqual: str
    idIn: str
    roleIdsIn: str
    emailEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            usernameEqual: str = NotImplemented,
            externalIdEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            roleIdsIn: str = NotImplemented,
            emailEqual: str = NotImplemented): ...

    def getUsernameEqual(self) -> str: ...
    def setUsernameEqual(self, newUsernameEqual: str) -> None: ...
    def getExternalIdEqual(self) -> str: ...
    def setExternalIdEqual(self, newExternalIdEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getRoleIdsIn(self) -> str: ...
    def setRoleIdsIn(self, newRoleIdsIn: str) -> None: ...
    def getEmailEqual(self) -> str: ...
    def setEmailEqual(self, newEmailEqual: str) -> None: ...

class KalturaPartnerFilter(KalturaFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaPasswordPolicyFilter(KalturaFilter):
    userRoleIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            userRoleIdIn: str = NotImplemented): ...

    def getUserRoleIdIn(self) -> str: ...
    def setUserRoleIdIn(self, newUserRoleIdIn: str) -> None: ...

class KalturaUserSessionProfileFilter(KalturaFilter):
    idEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            idEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...

class KalturaBulkUploadFilter(KalturaFilter):
    bulkObjectTypeEqual: str
    createDateGreaterThanOrEqual: int
    uploadedByUserIdEqualCurrent: bool
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            bulkObjectTypeEqual: str = NotImplemented,
            createDateGreaterThanOrEqual: int = NotImplemented,
            uploadedByUserIdEqualCurrent: bool = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getBulkObjectTypeEqual(self) -> str: ...
    def setBulkObjectTypeEqual(self, newBulkObjectTypeEqual: str) -> None: ...
    def getCreateDateGreaterThanOrEqual(self) -> int: ...
    def setCreateDateGreaterThanOrEqual(self, newCreateDateGreaterThanOrEqual: int) -> None: ...
    def getUploadedByUserIdEqualCurrent(self) -> bool: ...
    def setUploadedByUserIdEqualCurrent(self, newUploadedByUserIdEqualCurrent: bool) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaSocialActionFilter(KalturaFilter):
    assetIdIn: str
    assetTypeEqual: KalturaAssetType
    actionTypeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdIn: str = NotImplemented,
            assetTypeEqual: KalturaAssetType = NotImplemented,
            actionTypeIn: str = NotImplemented): ...

    def getAssetIdIn(self) -> str: ...
    def setAssetIdIn(self, newAssetIdIn: str) -> None: ...
    def getAssetTypeEqual(self) -> KalturaAssetType: ...
    def setAssetTypeEqual(self, newAssetTypeEqual: KalturaAssetType) -> None: ...
    def getActionTypeIn(self) -> str: ...
    def setActionTypeIn(self, newActionTypeIn: str) -> None: ...

class KalturaSocialCommentFilter(KalturaFilter):
    assetIdEqual: int
    assetTypeEqual: KalturaAssetType
    socialPlatformEqual: KalturaSocialPlatform
    createDateGreaterThan: int
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdEqual: int = NotImplemented,
            assetTypeEqual: KalturaAssetType = NotImplemented,
            socialPlatformEqual: KalturaSocialPlatform = NotImplemented,
            createDateGreaterThan: int = NotImplemented): ...

    def getAssetIdEqual(self) -> int: ...
    def setAssetIdEqual(self, newAssetIdEqual: int) -> None: ...
    def getAssetTypeEqual(self) -> KalturaAssetType: ...
    def setAssetTypeEqual(self, newAssetTypeEqual: KalturaAssetType) -> None: ...
    def getSocialPlatformEqual(self) -> KalturaSocialPlatform: ...
    def setSocialPlatformEqual(self, newSocialPlatformEqual: KalturaSocialPlatform) -> None: ...
    def getCreateDateGreaterThan(self) -> int: ...
    def setCreateDateGreaterThan(self, newCreateDateGreaterThan: int) -> None: ...

class KalturaSocialFriendActivityFilter(KalturaFilter):
    assetIdEqual: int
    assetTypeEqual: KalturaAssetType
    actionTypeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdEqual: int = NotImplemented,
            assetTypeEqual: KalturaAssetType = NotImplemented,
            actionTypeIn: str = NotImplemented): ...

    def getAssetIdEqual(self) -> int: ...
    def setAssetIdEqual(self, newAssetIdEqual: int) -> None: ...
    def getAssetTypeEqual(self) -> KalturaAssetType: ...
    def setAssetTypeEqual(self, newAssetTypeEqual: KalturaAssetType) -> None: ...
    def getActionTypeIn(self) -> str: ...
    def setActionTypeIn(self, newActionTypeIn: str) -> None: ...

class KalturaBaseSegmentationTypeFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaSegmentationTypeFilter(KalturaBaseSegmentationTypeFilter):
    idIn: str
    kSql: str
    nameContain: str
    assetUserRuleIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            kSql: str = NotImplemented,
            nameContain: str = NotImplemented,
            assetUserRuleIdIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...
    def getNameContain(self) -> str: ...
    def setNameContain(self, newNameContain: str) -> None: ...
    def getAssetUserRuleIdIn(self) -> str: ...
    def setAssetUserRuleIdIn(self, newAssetUserRuleIdIn: str) -> None: ...

class KalturaSegmentValueFilter(KalturaBaseSegmentationTypeFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaHouseholdSegmentFilter(KalturaFilter):
    kSql: str
    def __init__(self,
            orderBy: str = NotImplemented,
            kSql: str = NotImplemented): ...

    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...

class KalturaUserSegmentFilter(KalturaFilter):
    userIdEqual: str
    kSql: str
    def __init__(self,
            orderBy: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            kSql: str = NotImplemented): ...

    def getUserIdEqual(self) -> str: ...
    def setUserIdEqual(self, newUserIdEqual: str) -> None: ...
    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...

class KalturaWatchBasedRecommendationsProfileFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaWatchBasedRecommendationsProfileByIdsFilter(KalturaWatchBasedRecommendationsProfileFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaWatchBasedRecommendationsProfileByNameFilter(KalturaWatchBasedRecommendationsProfileFilter):
    nameContains: str
    def __init__(self,
            orderBy: str = NotImplemented,
            nameContains: str = NotImplemented): ...

    def getNameContains(self) -> str: ...
    def setNameContains(self, newNameContains: str) -> None: ...

class KalturaAssetFilePpvFilter(KalturaFilter):
    assetIdEqual: int
    assetFileIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdEqual: int = NotImplemented,
            assetFileIdEqual: int = NotImplemented): ...

    def getAssetIdEqual(self) -> int: ...
    def setAssetIdEqual(self, newAssetIdEqual: int) -> None: ...
    def getAssetFileIdEqual(self) -> int: ...
    def setAssetFileIdEqual(self, newAssetFileIdEqual: int) -> None: ...

class KalturaCollectionFilter(KalturaFilter):
    collectionIdIn: str
    mediaFileIdEqual: int
    couponGroupIdEqual: int
    alsoInactive: bool
    assetUserRuleIdIn: str
    nameContains: str
    def __init__(self,
            orderBy: str = NotImplemented,
            collectionIdIn: str = NotImplemented,
            mediaFileIdEqual: int = NotImplemented,
            couponGroupIdEqual: int = NotImplemented,
            alsoInactive: bool = NotImplemented,
            assetUserRuleIdIn: str = NotImplemented,
            nameContains: str = NotImplemented): ...

    def getCollectionIdIn(self) -> str: ...
    def setCollectionIdIn(self, newCollectionIdIn: str) -> None: ...
    def getMediaFileIdEqual(self) -> int: ...
    def setMediaFileIdEqual(self, newMediaFileIdEqual: int) -> None: ...
    def getCouponGroupIdEqual(self) -> int: ...
    def setCouponGroupIdEqual(self, newCouponGroupIdEqual: int) -> None: ...
    def getAlsoInactive(self) -> bool: ...
    def setAlsoInactive(self, newAlsoInactive: bool) -> None: ...
    def getAssetUserRuleIdIn(self) -> str: ...
    def setAssetUserRuleIdIn(self, newAssetUserRuleIdIn: str) -> None: ...
    def getNameContains(self) -> str: ...
    def setNameContains(self, newNameContains: str) -> None: ...

class KalturaAssociatedShopEntities(KalturaObjectBase):
    assetUserRuleIdIn: str
    includeNullAssetUserRuleId: bool
    def __init__(self,
            assetUserRuleIdIn: str = NotImplemented,
            includeNullAssetUserRuleId: bool = NotImplemented): ...

    def getAssetUserRuleIdIn(self) -> str: ...
    def setAssetUserRuleIdIn(self, newAssetUserRuleIdIn: str) -> None: ...
    def getIncludeNullAssetUserRuleId(self) -> bool: ...
    def setIncludeNullAssetUserRuleId(self, newIncludeNullAssetUserRuleId: bool) -> None: ...

class KalturaDiscountDetailsFilter(KalturaFilter):
    idIn: str
    associatedShopEntities: KalturaAssociatedShopEntities
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            associatedShopEntities: KalturaAssociatedShopEntities = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getAssociatedShopEntities(self) -> KalturaAssociatedShopEntities: ...
    def setAssociatedShopEntities(self, newAssociatedShopEntities: KalturaAssociatedShopEntities) -> None: ...

class KalturaPpvFilter(KalturaFilter):
    idIn: str
    couponGroupIdEqual: int
    alsoInactive: bool
    nameContains: str
    assetUserRuleIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            couponGroupIdEqual: int = NotImplemented,
            alsoInactive: bool = NotImplemented,
            nameContains: str = NotImplemented,
            assetUserRuleIdIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCouponGroupIdEqual(self) -> int: ...
    def setCouponGroupIdEqual(self, newCouponGroupIdEqual: int) -> None: ...
    def getAlsoInactive(self) -> bool: ...
    def setAlsoInactive(self, newAlsoInactive: bool) -> None: ...
    def getNameContains(self) -> str: ...
    def setNameContains(self, newNameContains: str) -> None: ...
    def getAssetUserRuleIdIn(self) -> str: ...
    def setAssetUserRuleIdIn(self, newAssetUserRuleIdIn: str) -> None: ...

class KalturaPreviewModuleFilter(KalturaFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaPriceDetailsFilter(KalturaFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaPricePlanFilter(KalturaFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaProgramAssetGroupOfferFilter(KalturaFilter):
    alsoInactive: bool
    nameContains: str
    def __init__(self,
            orderBy: str = NotImplemented,
            alsoInactive: bool = NotImplemented,
            nameContains: str = NotImplemented): ...

    def getAlsoInactive(self) -> bool: ...
    def setAlsoInactive(self, newAlsoInactive: bool) -> None: ...
    def getNameContains(self) -> str: ...
    def setNameContains(self, newNameContains: str) -> None: ...

class KalturaProgramAssetGroupOfferIdInFilter(KalturaProgramAssetGroupOfferFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            alsoInactive: bool = NotImplemented,
            nameContains: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaSubscriptionSetFilter(KalturaFilter):
    idIn: str
    subscriptionIdContains: str
    typeEqual: KalturaSubscriptionSetType
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            subscriptionIdContains: str = NotImplemented,
            typeEqual: KalturaSubscriptionSetType = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getSubscriptionIdContains(self) -> str: ...
    def setSubscriptionIdContains(self, newSubscriptionIdContains: str) -> None: ...
    def getTypeEqual(self) -> KalturaSubscriptionSetType: ...
    def setTypeEqual(self, newTypeEqual: KalturaSubscriptionSetType) -> None: ...

class KalturaSubscriptionDependencySetFilter(KalturaSubscriptionSetFilter):
    baseSubscriptionIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            subscriptionIdContains: str = NotImplemented,
            typeEqual: KalturaSubscriptionSetType = NotImplemented,
            baseSubscriptionIdIn: str = NotImplemented): ...

    def getBaseSubscriptionIdIn(self) -> str: ...
    def setBaseSubscriptionIdIn(self, newBaseSubscriptionIdIn: str) -> None: ...

class KalturaSubscriptionFilter(KalturaFilter):
    subscriptionIdIn: str
    mediaFileIdEqual: int
    externalIdIn: str
    couponGroupIdEqual: int
    previewModuleIdEqual: int
    pricePlanIdEqual: int
    channelIdEqual: int
    kSql: str
    alsoInactive: bool
    dependencyTypeIn: str
    nameContains: str
    def __init__(self,
            orderBy: str = NotImplemented,
            subscriptionIdIn: str = NotImplemented,
            mediaFileIdEqual: int = NotImplemented,
            externalIdIn: str = NotImplemented,
            couponGroupIdEqual: int = NotImplemented,
            previewModuleIdEqual: int = NotImplemented,
            pricePlanIdEqual: int = NotImplemented,
            channelIdEqual: int = NotImplemented,
            kSql: str = NotImplemented,
            alsoInactive: bool = NotImplemented,
            dependencyTypeIn: str = NotImplemented,
            nameContains: str = NotImplemented): ...

    def getSubscriptionIdIn(self) -> str: ...
    def setSubscriptionIdIn(self, newSubscriptionIdIn: str) -> None: ...
    def getMediaFileIdEqual(self) -> int: ...
    def setMediaFileIdEqual(self, newMediaFileIdEqual: int) -> None: ...
    def getExternalIdIn(self) -> str: ...
    def setExternalIdIn(self, newExternalIdIn: str) -> None: ...
    def getCouponGroupIdEqual(self) -> int: ...
    def setCouponGroupIdEqual(self, newCouponGroupIdEqual: int) -> None: ...
    def getPreviewModuleIdEqual(self) -> int: ...
    def setPreviewModuleIdEqual(self, newPreviewModuleIdEqual: int) -> None: ...
    def getPricePlanIdEqual(self) -> int: ...
    def setPricePlanIdEqual(self, newPricePlanIdEqual: int) -> None: ...
    def getChannelIdEqual(self) -> int: ...
    def setChannelIdEqual(self, newChannelIdEqual: int) -> None: ...
    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...
    def getAlsoInactive(self) -> bool: ...
    def setAlsoInactive(self, newAlsoInactive: bool) -> None: ...
    def getDependencyTypeIn(self) -> str: ...
    def setDependencyTypeIn(self, newDependencyTypeIn: str) -> None: ...
    def getNameContains(self) -> str: ...
    def setNameContains(self, newNameContains: str) -> None: ...

class KalturaUsageModuleFilter(KalturaFilter):
    idEqual: int
    associatedShopEntities: KalturaAssociatedShopEntities
    def __init__(self,
            orderBy: str = NotImplemented,
            idEqual: int = NotImplemented,
            associatedShopEntities: KalturaAssociatedShopEntities = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getAssociatedShopEntities(self) -> KalturaAssociatedShopEntities: ...
    def setAssociatedShopEntities(self, newAssociatedShopEntities: KalturaAssociatedShopEntities) -> None: ...

class KalturaPartnerConfigurationFilter(KalturaFilter):
    partnerConfigurationTypeEqual: KalturaPartnerConfigurationType
    def __init__(self,
            orderBy: str = NotImplemented,
            partnerConfigurationTypeEqual: KalturaPartnerConfigurationType = NotImplemented): ...

    def getPartnerConfigurationTypeEqual(self) -> KalturaPartnerConfigurationType: ...
    def setPartnerConfigurationTypeEqual(self, newPartnerConfigurationTypeEqual: KalturaPartnerConfigurationType) -> None: ...

class KalturaPersonalListFilter(KalturaFilter):
    partnerListTypeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            partnerListTypeIn: str = NotImplemented): ...

    def getPartnerListTypeIn(self) -> str: ...
    def setPartnerListTypeIn(self, newPartnerListTypeIn: str) -> None: ...

class KalturaAnnouncementFilter(KalturaFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaReminderFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaAssetReminderFilter(KalturaReminderFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaSeasonsReminderFilter(KalturaReminderFilter):
    seriesIdEqual: str
    seasonNumberIn: str
    epgChannelIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            seriesIdEqual: str = NotImplemented,
            seasonNumberIn: str = NotImplemented,
            epgChannelIdEqual: int = NotImplemented): ...

    def getSeriesIdEqual(self) -> str: ...
    def setSeriesIdEqual(self, newSeriesIdEqual: str) -> None: ...
    def getSeasonNumberIn(self) -> str: ...
    def setSeasonNumberIn(self, newSeasonNumberIn: str) -> None: ...
    def getEpgChannelIdEqual(self) -> int: ...
    def setEpgChannelIdEqual(self, newEpgChannelIdEqual: int) -> None: ...

class KalturaSeriesReminderFilter(KalturaReminderFilter):
    seriesIdIn: str
    epgChannelIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            seriesIdIn: str = NotImplemented,
            epgChannelIdEqual: int = NotImplemented): ...

    def getSeriesIdIn(self) -> str: ...
    def setSeriesIdIn(self, newSeriesIdIn: str) -> None: ...
    def getEpgChannelIdEqual(self) -> int: ...
    def setEpgChannelIdEqual(self, newEpgChannelIdEqual: int) -> None: ...

class KalturaEngagementFilter(KalturaFilter):
    typeIn: str
    sendTimeGreaterThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            typeIn: str = NotImplemented,
            sendTimeGreaterThanOrEqual: int = NotImplemented): ...

    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getSendTimeGreaterThanOrEqual(self) -> int: ...
    def setSendTimeGreaterThanOrEqual(self, newSendTimeGreaterThanOrEqual: int) -> None: ...

class KalturaFollowTvSeriesFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaInboxMessageFilter(KalturaFilter):
    typeIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented): ...

    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...

class KalturaPersonalFeedFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaSmsAdapterProfileFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaTopicFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaSubscribeReference(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaTopicNotificationFilter(KalturaFilter):
    subscribeReference: KalturaSubscribeReference
    def __init__(self,
            orderBy: str = NotImplemented,
            subscribeReference: KalturaSubscribeReference = NotImplemented): ...

    def getSubscribeReference(self) -> KalturaSubscribeReference: ...
    def setSubscribeReference(self, newSubscribeReference: KalturaSubscribeReference) -> None: ...

class KalturaSubscriptionSubscribeReference(KalturaSubscribeReference):
    subscriptionId: int
    def __init__(self,
            subscriptionId: int = NotImplemented): ...

    def getSubscriptionId(self) -> int: ...
    def setSubscriptionId(self, newSubscriptionId: int) -> None: ...

class KalturaTopicNotificationMessageFilter(KalturaFilter):
    topicNotificationIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            topicNotificationIdEqual: int = NotImplemented): ...

    def getTopicNotificationIdEqual(self) -> int: ...
    def setTopicNotificationIdEqual(self, newTopicNotificationIdEqual: int) -> None: ...

class KalturaIngestByCompoundFilter(KalturaFilter):
    ingestNameContains: str
    ingestedByUserIdIn: str
    ingestStatusIn: str
    createdDateGreaterThan: int
    createdDateSmallerThan: int
    def __init__(self,
            orderBy: str = NotImplemented,
            ingestNameContains: str = NotImplemented,
            ingestedByUserIdIn: str = NotImplemented,
            ingestStatusIn: str = NotImplemented,
            createdDateGreaterThan: int = NotImplemented,
            createdDateSmallerThan: int = NotImplemented): ...

    def getIngestNameContains(self) -> str: ...
    def setIngestNameContains(self, newIngestNameContains: str) -> None: ...
    def getIngestedByUserIdIn(self) -> str: ...
    def setIngestedByUserIdIn(self, newIngestedByUserIdIn: str) -> None: ...
    def getIngestStatusIn(self) -> str: ...
    def setIngestStatusIn(self, newIngestStatusIn: str) -> None: ...
    def getCreatedDateGreaterThan(self) -> int: ...
    def setCreatedDateGreaterThan(self, newCreatedDateGreaterThan: int) -> None: ...
    def getCreatedDateSmallerThan(self) -> int: ...
    def setCreatedDateSmallerThan(self, newCreatedDateSmallerThan: int) -> None: ...

class KalturaIngestByIdsFilter(KalturaFilter):
    ingestIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            ingestIdIn: str = NotImplemented): ...

    def getIngestIdIn(self) -> str: ...
    def setIngestIdIn(self, newIngestIdIn: str) -> None: ...

class KalturaIngestEpgProgramResultFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaIngestProgramResultsByRefineFilter(KalturaIngestEpgProgramResultFilter):
    ingestStatusIn: str
    startDateGreaterThan: int
    startDateSmallerThan: int
    def __init__(self,
            orderBy: str = NotImplemented,
            ingestStatusIn: str = NotImplemented,
            startDateGreaterThan: int = NotImplemented,
            startDateSmallerThan: int = NotImplemented): ...

    def getIngestStatusIn(self) -> str: ...
    def setIngestStatusIn(self, newIngestStatusIn: str) -> None: ...
    def getStartDateGreaterThan(self) -> int: ...
    def setStartDateGreaterThan(self, newStartDateGreaterThan: int) -> None: ...
    def getStartDateSmallerThan(self) -> int: ...
    def setStartDateSmallerThan(self, newStartDateSmallerThan: int) -> None: ...

class KalturaIngestProgramResultsByCombinedFieldsFilter(KalturaIngestProgramResultsByRefineFilter):
    combinedFieldsValue: str
    def __init__(self,
            orderBy: str = NotImplemented,
            ingestStatusIn: str = NotImplemented,
            startDateGreaterThan: int = NotImplemented,
            startDateSmallerThan: int = NotImplemented,
            combinedFieldsValue: str = NotImplemented): ...

    def getCombinedFieldsValue(self) -> str: ...
    def setCombinedFieldsValue(self, newCombinedFieldsValue: str) -> None: ...

class KalturaIngestProgramResultsByCompoundFilter(KalturaIngestProgramResultsByRefineFilter):
    linearChannelIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            ingestStatusIn: str = NotImplemented,
            startDateGreaterThan: int = NotImplemented,
            startDateSmallerThan: int = NotImplemented,
            linearChannelIdIn: str = NotImplemented): ...

    def getLinearChannelIdIn(self) -> str: ...
    def setLinearChannelIdIn(self, newLinearChannelIdIn: str) -> None: ...

class KalturaIngestProgramResultsByExternalIdsFilter(KalturaIngestEpgProgramResultFilter):
    externalProgramIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            externalProgramIdIn: str = NotImplemented): ...

    def getExternalProgramIdIn(self) -> str: ...
    def setExternalProgramIdIn(self, newExternalProgramIdIn: str) -> None: ...

class KalturaIngestProgramResultsByProgramIdsFilter(KalturaIngestEpgProgramResultFilter):
    programIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            programIdIn: str = NotImplemented): ...

    def getProgramIdIn(self) -> str: ...
    def setProgramIdIn(self, newProgramIdIn: str) -> None: ...

class KalturaVodIngestAssetResultFilter(KalturaFilter):
    fileNameContains: str
    assetNameContains: str
    ingestStatusIn: str
    ingestDateGreaterThan: int
    ingestDateSmallerThan: int
    vodTypeSystemNameIn: str
    shopAssetUserRuleIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            fileNameContains: str = NotImplemented,
            assetNameContains: str = NotImplemented,
            ingestStatusIn: str = NotImplemented,
            ingestDateGreaterThan: int = NotImplemented,
            ingestDateSmallerThan: int = NotImplemented,
            vodTypeSystemNameIn: str = NotImplemented,
            shopAssetUserRuleIdIn: str = NotImplemented): ...

    def getFileNameContains(self) -> str: ...
    def setFileNameContains(self, newFileNameContains: str) -> None: ...
    def getAssetNameContains(self) -> str: ...
    def setAssetNameContains(self, newAssetNameContains: str) -> None: ...
    def getIngestStatusIn(self) -> str: ...
    def setIngestStatusIn(self, newIngestStatusIn: str) -> None: ...
    def getIngestDateGreaterThan(self) -> int: ...
    def setIngestDateGreaterThan(self, newIngestDateGreaterThan: int) -> None: ...
    def getIngestDateSmallerThan(self) -> int: ...
    def setIngestDateSmallerThan(self, newIngestDateSmallerThan: int) -> None: ...
    def getVodTypeSystemNameIn(self) -> str: ...
    def setVodTypeSystemNameIn(self, newVodTypeSystemNameIn: str) -> None: ...
    def getShopAssetUserRuleIdIn(self) -> str: ...
    def setShopAssetUserRuleIdIn(self, newShopAssetUserRuleIdIn: str) -> None: ...

class KalturaAggregationCountFilter(KalturaRelatedObjectFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaDynamicListFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaDynamicListIdInFilter(KalturaDynamicListFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaDynamicListSearchFilter(KalturaDynamicListFilter):
    idEqual: int
    valueEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idEqual: int = NotImplemented,
            valueEqual: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getValueEqual(self) -> str: ...
    def setValueEqual(self, newValueEqual: str) -> None: ...

class KalturaUdidDynamicListSearchFilter(KalturaDynamicListSearchFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            idEqual: int = NotImplemented,
            valueEqual: str = NotImplemented): ...
        pass

class KalturaPersistedFilter(KalturaFilter):
    name: str
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaDynamicOrderBy(KalturaObjectBase):
    name: str
    orderBy: KalturaMetaTagOrderBy
    def __init__(self,
            name: str = NotImplemented,
            orderBy: KalturaMetaTagOrderBy = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getOrderBy(self) -> KalturaMetaTagOrderBy: ...
    def setOrderBy(self, newOrderBy: KalturaMetaTagOrderBy) -> None: ...

class KalturaBaseAssetOrder(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaAssetFilter(KalturaPersistedFilter):
    dynamicOrderBy: KalturaDynamicOrderBy
    orderingParameters: List[KalturaBaseAssetOrder]
    trendingDaysEqual: int
    shouldApplyPriorityGroupsEqual: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented): ...

    def getDynamicOrderBy(self) -> KalturaDynamicOrderBy: ...
    def setDynamicOrderBy(self, newDynamicOrderBy: KalturaDynamicOrderBy) -> None: ...
    def getOrderingParameters(self) -> List[KalturaBaseAssetOrder]: ...
    def setOrderingParameters(self, newOrderingParameters: List[KalturaBaseAssetOrder]) -> None: ...
    def getTrendingDaysEqual(self) -> int: ...
    def setTrendingDaysEqual(self, newTrendingDaysEqual: int) -> None: ...
    def getShouldApplyPriorityGroupsEqual(self) -> bool: ...
    def setShouldApplyPriorityGroupsEqual(self, newShouldApplyPriorityGroupsEqual: bool) -> None: ...

class KalturaAssetGroupBy(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBaseSearchAssetFilter(KalturaAssetFilter):
    kSql: str
    groupBy: List[KalturaAssetGroupBy]
    groupOrderBy: KalturaGroupByOrder
    groupingOptionEqual: KalturaGroupingOption
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            kSql: str = NotImplemented,
            groupBy: List[KalturaAssetGroupBy] = NotImplemented,
            groupOrderBy: KalturaGroupByOrder = NotImplemented,
            groupingOptionEqual: KalturaGroupingOption = NotImplemented): ...

    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...
    def getGroupBy(self) -> List[KalturaAssetGroupBy]: ...
    def setGroupBy(self, newGroupBy: List[KalturaAssetGroupBy]) -> None: ...
    def getGroupOrderBy(self) -> KalturaGroupByOrder: ...
    def setGroupOrderBy(self, newGroupOrderBy: KalturaGroupByOrder) -> None: ...
    def getGroupingOptionEqual(self) -> KalturaGroupingOption: ...
    def setGroupingOptionEqual(self, newGroupingOptionEqual: KalturaGroupingOption) -> None: ...

class KalturaChannelFilter(KalturaBaseSearchAssetFilter):
    idEqual: int
    excludeWatched: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            kSql: str = NotImplemented,
            groupBy: List[KalturaAssetGroupBy] = NotImplemented,
            groupOrderBy: KalturaGroupByOrder = NotImplemented,
            groupingOptionEqual: KalturaGroupingOption = NotImplemented,
            idEqual: int = NotImplemented,
            excludeWatched: bool = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getExcludeWatched(self) -> bool: ...
    def setExcludeWatched(self, newExcludeWatched: bool) -> None: ...

class KalturaPersonalListSearchFilter(KalturaBaseSearchAssetFilter):
    partnerListTypeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            kSql: str = NotImplemented,
            groupBy: List[KalturaAssetGroupBy] = NotImplemented,
            groupOrderBy: KalturaGroupByOrder = NotImplemented,
            groupingOptionEqual: KalturaGroupingOption = NotImplemented,
            partnerListTypeIn: str = NotImplemented): ...

    def getPartnerListTypeIn(self) -> str: ...
    def setPartnerListTypeIn(self, newPartnerListTypeIn: str) -> None: ...

class KalturaRelatedFilter(KalturaBaseSearchAssetFilter):
    idEqual: int
    typeIn: str
    excludeWatched: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            kSql: str = NotImplemented,
            groupBy: List[KalturaAssetGroupBy] = NotImplemented,
            groupOrderBy: KalturaGroupByOrder = NotImplemented,
            groupingOptionEqual: KalturaGroupingOption = NotImplemented,
            idEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            excludeWatched: bool = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getExcludeWatched(self) -> bool: ...
    def setExcludeWatched(self, newExcludeWatched: bool) -> None: ...

class KalturaSearchAssetFilter(KalturaBaseSearchAssetFilter):
    typeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            kSql: str = NotImplemented,
            groupBy: List[KalturaAssetGroupBy] = NotImplemented,
            groupOrderBy: KalturaGroupByOrder = NotImplemented,
            groupingOptionEqual: KalturaGroupingOption = NotImplemented,
            typeIn: str = NotImplemented): ...

    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...

class KalturaSearchAssetListFilter(KalturaSearchAssetFilter):
    excludeWatched: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            kSql: str = NotImplemented,
            groupBy: List[KalturaAssetGroupBy] = NotImplemented,
            groupOrderBy: KalturaGroupByOrder = NotImplemented,
            groupingOptionEqual: KalturaGroupingOption = NotImplemented,
            typeIn: str = NotImplemented,
            excludeWatched: bool = NotImplemented): ...

    def getExcludeWatched(self) -> bool: ...
    def setExcludeWatched(self, newExcludeWatched: bool) -> None: ...

class KalturaAssetFieldGroupBy(KalturaAssetGroupBy):
    value: KalturaGroupByField
    def __init__(self,
            value: KalturaGroupByField = NotImplemented): ...

    def getValue(self) -> KalturaGroupByField: ...
    def setValue(self, newValue: KalturaGroupByField) -> None: ...

class KalturaAssetMetaOrTagGroupBy(KalturaAssetGroupBy):
    value: str
    def __init__(self,
            value: str = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaBundleFilter(KalturaAssetFilter):
    idEqual: int
    typeIn: str
    bundleTypeEqual: KalturaBundleType
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            idEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            bundleTypeEqual: KalturaBundleType = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getBundleTypeEqual(self) -> KalturaBundleType: ...
    def setBundleTypeEqual(self, newBundleTypeEqual: KalturaBundleType) -> None: ...

class KalturaChannelExternalFilter(KalturaAssetFilter):
    idEqual: int
    utcOffsetEqual: float
    freeText: str
    alias: str
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            idEqual: int = NotImplemented,
            utcOffsetEqual: float = NotImplemented,
            freeText: str = NotImplemented,
            alias: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getUtcOffsetEqual(self) -> float: ...
    def setUtcOffsetEqual(self, newUtcOffsetEqual: float) -> None: ...
    def getFreeText(self) -> str: ...
    def setFreeText(self, newFreeText: str) -> None: ...
    def getAlias(self) -> str: ...
    def setAlias(self, newAlias: str) -> None: ...

class KalturaLiveAssetHasRecordingsFilter(KalturaAssetFilter):
    liveAssetIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            liveAssetIdEqual: int = NotImplemented): ...

    def getLiveAssetIdEqual(self) -> int: ...
    def setLiveAssetIdEqual(self, newLiveAssetIdEqual: int) -> None: ...

class KalturaRelatedExternalFilter(KalturaAssetFilter):
    idEqual: int
    typeIn: str
    utcOffsetEqual: int
    freeText: str
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            idEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            utcOffsetEqual: int = NotImplemented,
            freeText: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getUtcOffsetEqual(self) -> int: ...
    def setUtcOffsetEqual(self, newUtcOffsetEqual: int) -> None: ...
    def getFreeText(self) -> str: ...
    def setFreeText(self, newFreeText: str) -> None: ...

class KalturaScheduledRecordingProgramFilter(KalturaAssetFilter):
    recordingTypeEqual: KalturaScheduledRecordingAssetType
    channelsIn: str
    startDateGreaterThanOrNull: int
    endDateLessThanOrNull: int
    seriesIdsIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            recordingTypeEqual: KalturaScheduledRecordingAssetType = NotImplemented,
            channelsIn: str = NotImplemented,
            startDateGreaterThanOrNull: int = NotImplemented,
            endDateLessThanOrNull: int = NotImplemented,
            seriesIdsIn: str = NotImplemented): ...

    def getRecordingTypeEqual(self) -> KalturaScheduledRecordingAssetType: ...
    def setRecordingTypeEqual(self, newRecordingTypeEqual: KalturaScheduledRecordingAssetType) -> None: ...
    def getChannelsIn(self) -> str: ...
    def setChannelsIn(self, newChannelsIn: str) -> None: ...
    def getStartDateGreaterThanOrNull(self) -> int: ...
    def setStartDateGreaterThanOrNull(self, newStartDateGreaterThanOrNull: int) -> None: ...
    def getEndDateLessThanOrNull(self) -> int: ...
    def setEndDateLessThanOrNull(self, newEndDateLessThanOrNull: int) -> None: ...
    def getSeriesIdsIn(self) -> str: ...
    def setSeriesIdsIn(self, newSeriesIdsIn: str) -> None: ...

class KalturaSearchExternalFilter(KalturaAssetFilter):
    query: str
    utcOffsetEqual: int
    typeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            name: str = NotImplemented,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderingParameters: List[KalturaBaseAssetOrder] = NotImplemented,
            trendingDaysEqual: int = NotImplemented,
            shouldApplyPriorityGroupsEqual: bool = NotImplemented,
            query: str = NotImplemented,
            utcOffsetEqual: int = NotImplemented,
            typeIn: str = NotImplemented): ...

    def getQuery(self) -> str: ...
    def setQuery(self, newQuery: str) -> None: ...
    def getUtcOffsetEqual(self) -> int: ...
    def setUtcOffsetEqual(self, newUtcOffsetEqual: int) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...

class KalturaAssetDynamicOrder(KalturaBaseAssetOrder):
    name: str
    orderBy: KalturaMetaTagOrderBy
    def __init__(self,
            name: str = NotImplemented,
            orderBy: KalturaMetaTagOrderBy = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getOrderBy(self) -> KalturaMetaTagOrderBy: ...
    def setOrderBy(self, newOrderBy: KalturaMetaTagOrderBy) -> None: ...

class KalturaAssetOrder(KalturaBaseAssetOrder):
    orderBy: KalturaAssetOrderByType
    def __init__(self,
            orderBy: KalturaAssetOrderByType = NotImplemented): ...

    def getOrderBy(self) -> KalturaAssetOrderByType: ...
    def setOrderBy(self, newOrderBy: KalturaAssetOrderByType) -> None: ...

class KalturaAssetStatisticsOrder(KalturaBaseAssetOrder):
    trendingDaysEqual: int
    orderBy: KalturaAssetOrderByStatistics
    def __init__(self,
            trendingDaysEqual: int = NotImplemented,
            orderBy: KalturaAssetOrderByStatistics = NotImplemented): ...

    def getTrendingDaysEqual(self) -> int: ...
    def setTrendingDaysEqual(self, newTrendingDaysEqual: int) -> None: ...
    def getOrderBy(self) -> KalturaAssetOrderByStatistics: ...
    def setOrderBy(self, newOrderBy: KalturaAssetOrderByStatistics) -> None: ...

class KalturaPriorityGroupFilter(KalturaRelatedObjectFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaReportFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaDeviceReportFilter(KalturaReportFilter):
    lastAccessDateGreaterThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            lastAccessDateGreaterThanOrEqual: int = NotImplemented): ...

    def getLastAccessDateGreaterThanOrEqual(self) -> int: ...
    def setLastAccessDateGreaterThanOrEqual(self, newLastAccessDateGreaterThanOrEqual: int) -> None: ...

class KalturaHouseholdCouponCodeFilter(KalturaRelatedObjectFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaHouseholdCouponFilter(KalturaFilter):
    businessModuleTypeEqual: KalturaTransactionType
    businessModuleIdEqual: int
    couponCode: str
    status: KalturaCouponStatus
    def __init__(self,
            orderBy: str = NotImplemented,
            businessModuleTypeEqual: KalturaTransactionType = NotImplemented,
            businessModuleIdEqual: int = NotImplemented,
            couponCode: str = NotImplemented,
            status: KalturaCouponStatus = NotImplemented): ...

    def getBusinessModuleTypeEqual(self) -> KalturaTransactionType: ...
    def setBusinessModuleTypeEqual(self, newBusinessModuleTypeEqual: KalturaTransactionType) -> None: ...
    def getBusinessModuleIdEqual(self) -> int: ...
    def setBusinessModuleIdEqual(self, newBusinessModuleIdEqual: int) -> None: ...
    def getCouponCode(self) -> str: ...
    def setCouponCode(self, newCouponCode: str) -> None: ...
    def getStatus(self) -> KalturaCouponStatus: ...
    def setStatus(self, newStatus: KalturaCouponStatus) -> None: ...

class KalturaHouseholdDeviceFilter(KalturaFilter):
    householdIdEqual: int
    deviceFamilyIdIn: str
    externalIdEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            householdIdEqual: int = NotImplemented,
            deviceFamilyIdIn: str = NotImplemented,
            externalIdEqual: str = NotImplemented): ...

    def getHouseholdIdEqual(self) -> int: ...
    def setHouseholdIdEqual(self, newHouseholdIdEqual: int) -> None: ...
    def getDeviceFamilyIdIn(self) -> str: ...
    def setDeviceFamilyIdIn(self, newDeviceFamilyIdIn: str) -> None: ...
    def getExternalIdEqual(self) -> str: ...
    def setExternalIdEqual(self, newExternalIdEqual: str) -> None: ...

class KalturaHouseholdFilter(KalturaFilter):
    externalIdEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            externalIdEqual: str = NotImplemented): ...

    def getExternalIdEqual(self) -> str: ...
    def setExternalIdEqual(self, newExternalIdEqual: str) -> None: ...

class KalturaHouseholdUserFilter(KalturaFilter):
    householdIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            householdIdEqual: int = NotImplemented): ...

    def getHouseholdIdEqual(self) -> int: ...
    def setHouseholdIdEqual(self, newHouseholdIdEqual: int) -> None: ...

class KalturaConfigurationGroupDeviceFilter(KalturaFilter):
    configurationGroupIdEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            configurationGroupIdEqual: str = NotImplemented): ...

    def getConfigurationGroupIdEqual(self) -> str: ...
    def setConfigurationGroupIdEqual(self, newConfigurationGroupIdEqual: str) -> None: ...

class KalturaConfigurationGroupTagFilter(KalturaFilter):
    configurationGroupIdEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            configurationGroupIdEqual: str = NotImplemented): ...

    def getConfigurationGroupIdEqual(self) -> str: ...
    def setConfigurationGroupIdEqual(self, newConfigurationGroupIdEqual: str) -> None: ...

class KalturaConfigurationsFilter(KalturaFilter):
    configurationGroupIdEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            configurationGroupIdEqual: str = NotImplemented): ...

    def getConfigurationGroupIdEqual(self) -> str: ...
    def setConfigurationGroupIdEqual(self, newConfigurationGroupIdEqual: str) -> None: ...

class KalturaRecordingFilter(KalturaFilter):
    statusIn: str
    externalRecordingIdIn: str
    kSql: str
    def __init__(self,
            orderBy: str = NotImplemented,
            statusIn: str = NotImplemented,
            externalRecordingIdIn: str = NotImplemented,
            kSql: str = NotImplemented): ...

    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getExternalRecordingIdIn(self) -> str: ...
    def setExternalRecordingIdIn(self, newExternalRecordingIdIn: str) -> None: ...
    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...

class KalturaExternalRecordingFilter(KalturaRecordingFilter):
    metaData: map
    def __init__(self,
            orderBy: str = NotImplemented,
            statusIn: str = NotImplemented,
            externalRecordingIdIn: str = NotImplemented,
            kSql: str = NotImplemented,
            metaData: map = NotImplemented): ...

    def getMetaData(self) -> map: ...
    def setMetaData(self, newMetaData: map) -> None: ...

class KalturaCloudRecordingFilter(KalturaExternalRecordingFilter):
    adapterData: map
    def __init__(self,
            orderBy: str = NotImplemented,
            statusIn: str = NotImplemented,
            externalRecordingIdIn: str = NotImplemented,
            kSql: str = NotImplemented,
            metaData: map = NotImplemented,
            adapterData: map = NotImplemented): ...

    def getAdapterData(self) -> map: ...
    def setAdapterData(self, newAdapterData: map) -> None: ...

class KalturaSeriesRecordingFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaCloudSeriesRecordingFilter(KalturaSeriesRecordingFilter):
    adapterData: map
    def __init__(self,
            orderBy: str = NotImplemented,
            adapterData: map = NotImplemented): ...

    def getAdapterData(self) -> map: ...
    def setAdapterData(self, newAdapterData: map) -> None: ...

class KalturaEntitlementFilter(KalturaFilter):
    productTypeEqual: KalturaTransactionType
    entityReferenceEqual: KalturaEntityReferenceBy
    isExpiredEqual: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            productTypeEqual: KalturaTransactionType = NotImplemented,
            entityReferenceEqual: KalturaEntityReferenceBy = NotImplemented,
            isExpiredEqual: bool = NotImplemented): ...

    def getProductTypeEqual(self) -> KalturaTransactionType: ...
    def setProductTypeEqual(self, newProductTypeEqual: KalturaTransactionType) -> None: ...
    def getEntityReferenceEqual(self) -> KalturaEntityReferenceBy: ...
    def setEntityReferenceEqual(self, newEntityReferenceEqual: KalturaEntityReferenceBy) -> None: ...
    def getIsExpiredEqual(self) -> bool: ...
    def setIsExpiredEqual(self, newIsExpiredEqual: bool) -> None: ...

class KalturaProgramAssetGroupOfferEntitlementFilter(KalturaEntitlementFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            productTypeEqual: KalturaTransactionType = NotImplemented,
            entityReferenceEqual: KalturaEntityReferenceBy = NotImplemented,
            isExpiredEqual: bool = NotImplemented): ...
        pass

class KalturaExternalRecordingResponseProfileFilter(KalturaRelatedObjectFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaProductPriceFilter(KalturaFilter):
    subscriptionIdIn: str
    fileIdIn: str
    collectionIdIn: str
    isLowest: bool
    couponCodeEqual: str
    programAssetGroupOfferIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            subscriptionIdIn: str = NotImplemented,
            fileIdIn: str = NotImplemented,
            collectionIdIn: str = NotImplemented,
            isLowest: bool = NotImplemented,
            couponCodeEqual: str = NotImplemented,
            programAssetGroupOfferIdIn: str = NotImplemented): ...

    def getSubscriptionIdIn(self) -> str: ...
    def setSubscriptionIdIn(self, newSubscriptionIdIn: str) -> None: ...
    def getFileIdIn(self) -> str: ...
    def setFileIdIn(self, newFileIdIn: str) -> None: ...
    def getCollectionIdIn(self) -> str: ...
    def setCollectionIdIn(self, newCollectionIdIn: str) -> None: ...
    def getIsLowest(self) -> bool: ...
    def setIsLowest(self, newIsLowest: bool) -> None: ...
    def getCouponCodeEqual(self) -> str: ...
    def setCouponCodeEqual(self, newCouponCodeEqual: str) -> None: ...
    def getProgramAssetGroupOfferIdIn(self) -> str: ...
    def setProgramAssetGroupOfferIdIn(self, newProgramAssetGroupOfferIdIn: str) -> None: ...

class KalturaRecordingContextFilter(KalturaFilter):
    assetIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdIn: str = NotImplemented): ...

    def getAssetIdIn(self) -> str: ...
    def setAssetIdIn(self, newAssetIdIn: str) -> None: ...

class KalturaTransactionHistoryFilter(KalturaFilter):
    entityReferenceEqual: KalturaEntityReferenceBy
    startDateGreaterThanOrEqual: int
    endDateLessThanOrEqual: int
    entitlementIdEqual: int
    externalIdEqual: str
    billingItemsTypeEqual: KalturaBillingItemsType
    billingActionEqual: KalturaBillingAction
    def __init__(self,
            orderBy: str = NotImplemented,
            entityReferenceEqual: KalturaEntityReferenceBy = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            entitlementIdEqual: int = NotImplemented,
            externalIdEqual: str = NotImplemented,
            billingItemsTypeEqual: KalturaBillingItemsType = NotImplemented,
            billingActionEqual: KalturaBillingAction = NotImplemented): ...

    def getEntityReferenceEqual(self) -> KalturaEntityReferenceBy: ...
    def setEntityReferenceEqual(self, newEntityReferenceEqual: KalturaEntityReferenceBy) -> None: ...
    def getStartDateGreaterThanOrEqual(self) -> int: ...
    def setStartDateGreaterThanOrEqual(self, newStartDateGreaterThanOrEqual: int) -> None: ...
    def getEndDateLessThanOrEqual(self) -> int: ...
    def setEndDateLessThanOrEqual(self, newEndDateLessThanOrEqual: int) -> None: ...
    def getEntitlementIdEqual(self) -> int: ...
    def setEntitlementIdEqual(self, newEntitlementIdEqual: int) -> None: ...
    def getExternalIdEqual(self) -> str: ...
    def setExternalIdEqual(self, newExternalIdEqual: str) -> None: ...
    def getBillingItemsTypeEqual(self) -> KalturaBillingItemsType: ...
    def setBillingItemsTypeEqual(self, newBillingItemsTypeEqual: KalturaBillingItemsType) -> None: ...
    def getBillingActionEqual(self) -> KalturaBillingAction: ...
    def setBillingActionEqual(self, newBillingActionEqual: KalturaBillingAction) -> None: ...

class KalturaAssetCommentFilter(KalturaFilter):
    assetIdEqual: int
    assetTypeEqual: KalturaAssetType
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdEqual: int = NotImplemented,
            assetTypeEqual: KalturaAssetType = NotImplemented): ...

    def getAssetIdEqual(self) -> int: ...
    def setAssetIdEqual(self, newAssetIdEqual: int) -> None: ...
    def getAssetTypeEqual(self) -> KalturaAssetType: ...
    def setAssetTypeEqual(self, newAssetTypeEqual: KalturaAssetType) -> None: ...

class KalturaAssetHistoryFilter(KalturaFilter):
    typeIn: str
    assetIdIn: str
    statusEqual: KalturaWatchStatus
    daysLessThanOrEqual: int
    kSql: str
    def __init__(self,
            orderBy: str = NotImplemented,
            typeIn: str = NotImplemented,
            assetIdIn: str = NotImplemented,
            statusEqual: KalturaWatchStatus = NotImplemented,
            daysLessThanOrEqual: int = NotImplemented,
            kSql: str = NotImplemented): ...

    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getAssetIdIn(self) -> str: ...
    def setAssetIdIn(self, newAssetIdIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaWatchStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaWatchStatus) -> None: ...
    def getDaysLessThanOrEqual(self) -> int: ...
    def setDaysLessThanOrEqual(self, newDaysLessThanOrEqual: int) -> None: ...
    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...

class KalturaAssetHistorySuppressFilter(KalturaRelatedObjectFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaAssetImagePerRatioFilter(KalturaRelatedObjectFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaBaseAssetStructFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaAssetStructFilter(KalturaBaseAssetStructFilter):
    idIn: str
    metaIdEqual: int
    isProtectedEqual: bool
    objectVirtualAssetInfoTypeEqual: KalturaObjectVirtualAssetInfoType
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            metaIdEqual: int = NotImplemented,
            isProtectedEqual: bool = NotImplemented,
            objectVirtualAssetInfoTypeEqual: KalturaObjectVirtualAssetInfoType = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getMetaIdEqual(self) -> int: ...
    def setMetaIdEqual(self, newMetaIdEqual: int) -> None: ...
    def getIsProtectedEqual(self) -> bool: ...
    def setIsProtectedEqual(self, newIsProtectedEqual: bool) -> None: ...
    def getObjectVirtualAssetInfoTypeEqual(self) -> KalturaObjectVirtualAssetInfoType: ...
    def setObjectVirtualAssetInfoTypeEqual(self, newObjectVirtualAssetInfoTypeEqual: KalturaObjectVirtualAssetInfoType) -> None: ...

class KalturaLinearAssetStructFilter(KalturaBaseAssetStructFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaAssetStructMetaFilter(KalturaFilter):
    assetStructIdEqual: int
    metaIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            assetStructIdEqual: int = NotImplemented,
            metaIdEqual: int = NotImplemented): ...

    def getAssetStructIdEqual(self) -> int: ...
    def setAssetStructIdEqual(self, newAssetStructIdEqual: int) -> None: ...
    def getMetaIdEqual(self) -> int: ...
    def setMetaIdEqual(self, newMetaIdEqual: int) -> None: ...

class KalturaSlimAsset(KalturaObjectBase):
    id: str
    type: KalturaAssetType
    def __init__(self,
            id: str = NotImplemented,
            type: KalturaAssetType = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getType(self) -> KalturaAssetType: ...
    def setType(self, newType: KalturaAssetType) -> None: ...

class KalturaBookmarkFilter(KalturaFilter):
    assetIdIn: str
    assetTypeEqual: KalturaAssetType
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdIn: str = NotImplemented,
            assetTypeEqual: KalturaAssetType = NotImplemented): ...

    def getAssetIdIn(self) -> str: ...
    def setAssetIdIn(self, newAssetIdIn: str) -> None: ...
    def getAssetTypeEqual(self) -> KalturaAssetType: ...
    def setAssetTypeEqual(self, newAssetTypeEqual: KalturaAssetType) -> None: ...

class KalturaBaseOTTUser(KalturaObjectBase):
    id: str
    username: str
    firstName: str
    lastName: str
    def __init__(self,
            id: str = NotImplemented,
            username: str = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getUsername(self) -> str: ...
    def setUsername(self, newUsername: str) -> None: ...
    def getFirstName(self) -> str: ...
    def setFirstName(self, newFirstName: str) -> None: ...
    def getLastName(self) -> str: ...
    def setLastName(self, newLastName: str) -> None: ...

class KalturaCountry(KalturaObjectBase):
    id: int
    name: str
    code: str
    mainLanguageCode: str
    languagesCode: str
    currency: str
    currencySign: str
    vatPercent: float
    timeZoneId: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            code: str = NotImplemented,
            mainLanguageCode: str = NotImplemented,
            languagesCode: str = NotImplemented,
            currency: str = NotImplemented,
            currencySign: str = NotImplemented,
            vatPercent: float = NotImplemented,
            timeZoneId: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...
    def getMainLanguageCode(self) -> str: ...
    def setMainLanguageCode(self, newMainLanguageCode: str) -> None: ...
    def getLanguagesCode(self) -> str: ...
    def setLanguagesCode(self, newLanguagesCode: str) -> None: ...
    def getCurrency(self) -> str: ...
    def setCurrency(self, newCurrency: str) -> None: ...
    def getCurrencySign(self) -> str: ...
    def setCurrencySign(self, newCurrencySign: str) -> None: ...
    def getVatPercent(self) -> float: ...
    def setVatPercent(self, newVatPercent: float) -> None: ...
    def getTimeZoneId(self) -> str: ...
    def setTimeZoneId(self, newTimeZoneId: str) -> None: ...

class KalturaOTTUserType(KalturaObjectBase):
    id: int
    description: str
    def __init__(self,
            id: int = NotImplemented,
            description: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaOTTUser(KalturaBaseOTTUser):
    householdId: int
    email: str
    address: str
    city: str
    countryId: int
    zip: str
    phone: str
    affiliateCode: str
    externalId: str
    userType: KalturaOTTUserType
    dynamicData: map
    isHouseholdMaster: bool
    suspensionState: KalturaHouseholdSuspensionState
    userState: KalturaUserState
    roleIds: str
    createDate: int
    updateDate: int
    lastLoginDate: int
    failedLoginCount: int
    def __init__(self,
            id: str = NotImplemented,
            username: str = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented,
            householdId: int = NotImplemented,
            email: str = NotImplemented,
            address: str = NotImplemented,
            city: str = NotImplemented,
            countryId: int = NotImplemented,
            zip: str = NotImplemented,
            phone: str = NotImplemented,
            affiliateCode: str = NotImplemented,
            externalId: str = NotImplemented,
            userType: KalturaOTTUserType = NotImplemented,
            dynamicData: map = NotImplemented,
            isHouseholdMaster: bool = NotImplemented,
            suspensionState: KalturaHouseholdSuspensionState = NotImplemented,
            userState: KalturaUserState = NotImplemented,
            roleIds: str = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            lastLoginDate: int = NotImplemented,
            failedLoginCount: int = NotImplemented): ...

    def getHouseholdId(self) -> int: ...
    def getEmail(self) -> str: ...
    def setEmail(self, newEmail: str) -> None: ...
    def getAddress(self) -> str: ...
    def setAddress(self, newAddress: str) -> None: ...
    def getCity(self) -> str: ...
    def setCity(self, newCity: str) -> None: ...
    def getCountryId(self) -> int: ...
    def setCountryId(self, newCountryId: int) -> None: ...
    def getZip(self) -> str: ...
    def setZip(self, newZip: str) -> None: ...
    def getPhone(self) -> str: ...
    def setPhone(self, newPhone: str) -> None: ...
    def getAffiliateCode(self) -> str: ...
    def setAffiliateCode(self, newAffiliateCode: str) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getUserType(self) -> KalturaOTTUserType: ...
    def setUserType(self, newUserType: KalturaOTTUserType) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...
    def getIsHouseholdMaster(self) -> bool: ...
    def getSuspensionState(self) -> KalturaHouseholdSuspensionState: ...
    def getUserState(self) -> KalturaUserState: ...
    def getRoleIds(self) -> str: ...
    def setRoleIds(self, newRoleIds: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getLastLoginDate(self) -> int: ...
    def getFailedLoginCount(self) -> int: ...

class KalturaBookmarkPlayerData(KalturaObjectBase):
    action: KalturaBookmarkActionType
    averageBitrate: int
    totalBitrate: int
    currentBitrate: int
    fileId: int
    def __init__(self,
            action: KalturaBookmarkActionType = NotImplemented,
            averageBitrate: int = NotImplemented,
            totalBitrate: int = NotImplemented,
            currentBitrate: int = NotImplemented,
            fileId: int = NotImplemented): ...

    def getAction(self) -> KalturaBookmarkActionType: ...
    def setAction(self, newAction: KalturaBookmarkActionType) -> None: ...
    def getAverageBitrate(self) -> int: ...
    def setAverageBitrate(self, newAverageBitrate: int) -> None: ...
    def getTotalBitrate(self) -> int: ...
    def setTotalBitrate(self, newTotalBitrate: int) -> None: ...
    def getCurrentBitrate(self) -> int: ...
    def setCurrentBitrate(self, newCurrentBitrate: int) -> None: ...
    def getFileId(self) -> int: ...
    def setFileId(self, newFileId: int) -> None: ...

class KalturaBookmark(KalturaSlimAsset):
    userId: str
    position: int
    positionOwner: KalturaPositionOwner
    finishedWatching: bool
    playerData: KalturaBookmarkPlayerData
    programId: int
    isReportingMode: bool
    context: KalturaPlaybackContextType
    def __init__(self,
            id: str = NotImplemented,
            type: KalturaAssetType = NotImplemented,
            userId: str = NotImplemented,
            position: int = NotImplemented,
            positionOwner: KalturaPositionOwner = NotImplemented,
            finishedWatching: bool = NotImplemented,
            playerData: KalturaBookmarkPlayerData = NotImplemented,
            programId: int = NotImplemented,
            isReportingMode: bool = NotImplemented,
            context: KalturaPlaybackContextType = NotImplemented): ...

    def getUserId(self) -> str: ...
    def getPosition(self) -> int: ...
    def setPosition(self, newPosition: int) -> None: ...
    def getPositionOwner(self) -> KalturaPositionOwner: ...
    def getFinishedWatching(self) -> bool: ...
    def getPlayerData(self) -> KalturaBookmarkPlayerData: ...
    def setPlayerData(self, newPlayerData: KalturaBookmarkPlayerData) -> None: ...
    def getProgramId(self) -> int: ...
    def setProgramId(self, newProgramId: int) -> None: ...
    def getIsReportingMode(self) -> bool: ...
    def setIsReportingMode(self, newIsReportingMode: bool) -> None: ...
    def getContext(self) -> KalturaPlaybackContextType: ...
    def setContext(self, newContext: KalturaPlaybackContextType) -> None: ...

class KalturaCategoryItemFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaCategoryItemAncestorsFilter(KalturaCategoryItemFilter):
    id: int
    def __init__(self,
            orderBy: str = NotImplemented,
            id: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...

class KalturaCategoryItemByIdInFilter(KalturaCategoryItemFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaCategoryItemSearchFilter(KalturaCategoryItemFilter):
    kSql: str
    rootOnly: bool
    typeEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            kSql: str = NotImplemented,
            rootOnly: bool = NotImplemented,
            typeEqual: str = NotImplemented): ...

    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...
    def getRootOnly(self) -> bool: ...
    def setRootOnly(self, newRootOnly: bool) -> None: ...
    def getTypeEqual(self) -> str: ...
    def setTypeEqual(self, newTypeEqual: str) -> None: ...

class KalturaCategoryVersionFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaCategoryVersionFilterByTree(KalturaCategoryVersionFilter):
    treeIdEqual: int
    stateEqual: KalturaCategoryVersionState
    def __init__(self,
            orderBy: str = NotImplemented,
            treeIdEqual: int = NotImplemented,
            stateEqual: KalturaCategoryVersionState = NotImplemented): ...

    def getTreeIdEqual(self) -> int: ...
    def setTreeIdEqual(self, newTreeIdEqual: int) -> None: ...
    def getStateEqual(self) -> KalturaCategoryVersionState: ...
    def setStateEqual(self, newStateEqual: KalturaCategoryVersionState) -> None: ...

class KalturaChannelsBaseFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaChannelsFilter(KalturaChannelsBaseFilter):
    idEqual: int
    mediaIdEqual: int
    nameEqual: str
    nameStartsWith: str
    idIn: str
    assetUserRuleIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idEqual: int = NotImplemented,
            mediaIdEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameStartsWith: str = NotImplemented,
            idIn: str = NotImplemented,
            assetUserRuleIdIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getMediaIdEqual(self) -> int: ...
    def setMediaIdEqual(self, newMediaIdEqual: int) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getNameStartsWith(self) -> str: ...
    def setNameStartsWith(self, newNameStartsWith: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getAssetUserRuleIdIn(self) -> str: ...
    def setAssetUserRuleIdIn(self, newAssetUserRuleIdIn: str) -> None: ...

class KalturaChannelSearchByKsqlFilter(KalturaChannelsBaseFilter):
    kSql: str
    channelStructEqual: KalturaChannelStruct
    def __init__(self,
            orderBy: str = NotImplemented,
            kSql: str = NotImplemented,
            channelStructEqual: KalturaChannelStruct = NotImplemented): ...

    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...
    def getChannelStructEqual(self) -> KalturaChannelStruct: ...
    def setChannelStructEqual(self, newChannelStructEqual: KalturaChannelStruct) -> None: ...

class KalturaImageFilter(KalturaFilter):
    idIn: str
    imageObjectIdEqual: int
    imageObjectTypeEqual: KalturaImageObjectType
    isDefaultEqual: bool
    imageObjectIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            imageObjectIdEqual: int = NotImplemented,
            imageObjectTypeEqual: KalturaImageObjectType = NotImplemented,
            isDefaultEqual: bool = NotImplemented,
            imageObjectIdIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getImageObjectIdEqual(self) -> int: ...
    def setImageObjectIdEqual(self, newImageObjectIdEqual: int) -> None: ...
    def getImageObjectTypeEqual(self) -> KalturaImageObjectType: ...
    def setImageObjectTypeEqual(self, newImageObjectTypeEqual: KalturaImageObjectType) -> None: ...
    def getIsDefaultEqual(self) -> bool: ...
    def setIsDefaultEqual(self, newIsDefaultEqual: bool) -> None: ...
    def getImageObjectIdIn(self) -> str: ...
    def setImageObjectIdIn(self, newImageObjectIdIn: str) -> None: ...

class KalturaImageTypeFilter(KalturaFilter):
    idIn: str
    ratioIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            ratioIdIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getRatioIdIn(self) -> str: ...
    def setRatioIdIn(self, newRatioIdIn: str) -> None: ...

class KalturaLabelFilter(KalturaFilter):
    idIn: str
    labelEqual: str
    labelStartsWith: str
    entityAttributeEqual: KalturaEntityAttribute
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            labelEqual: str = NotImplemented,
            labelStartsWith: str = NotImplemented,
            entityAttributeEqual: KalturaEntityAttribute = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getLabelEqual(self) -> str: ...
    def setLabelEqual(self, newLabelEqual: str) -> None: ...
    def getLabelStartsWith(self) -> str: ...
    def setLabelStartsWith(self, newLabelStartsWith: str) -> None: ...
    def getEntityAttributeEqual(self) -> KalturaEntityAttribute: ...
    def setEntityAttributeEqual(self, newEntityAttributeEqual: KalturaEntityAttribute) -> None: ...

class KalturaMediaFileFilter(KalturaFilter):
    assetIdEqual: int
    idEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdEqual: int = NotImplemented,
            idEqual: int = NotImplemented): ...

    def getAssetIdEqual(self) -> int: ...
    def setAssetIdEqual(self, newAssetIdEqual: int) -> None: ...
    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...

class KalturaPersonalAssetSelectionFilter(KalturaFilter):
    slotNumberEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            slotNumberEqual: int = NotImplemented): ...

    def getSlotNumberEqual(self) -> int: ...
    def setSlotNumberEqual(self, newSlotNumberEqual: int) -> None: ...

class KalturaStreamingDeviceFilter(KalturaFilter):
    assetTypeEqual: KalturaAssetType
    def __init__(self,
            orderBy: str = NotImplemented,
            assetTypeEqual: KalturaAssetType = NotImplemented): ...

    def getAssetTypeEqual(self) -> KalturaAssetType: ...
    def setAssetTypeEqual(self, newAssetTypeEqual: KalturaAssetType) -> None: ...

class KalturaTagFilter(KalturaFilter):
    tagEqual: str
    tagStartsWith: str
    typeEqual: int
    languageEqual: str
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            tagEqual: str = NotImplemented,
            tagStartsWith: str = NotImplemented,
            typeEqual: int = NotImplemented,
            languageEqual: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getTagEqual(self) -> str: ...
    def setTagEqual(self, newTagEqual: str) -> None: ...
    def getTagStartsWith(self) -> str: ...
    def setTagStartsWith(self, newTagStartsWith: str) -> None: ...
    def getTypeEqual(self) -> int: ...
    def setTypeEqual(self, newTypeEqual: int) -> None: ...
    def getLanguageEqual(self) -> str: ...
    def setLanguageEqual(self, newLanguageEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaSearchPriorityGroupFilter(KalturaFilter):
    activeOnlyEqual: bool
    idEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            activeOnlyEqual: bool = NotImplemented,
            idEqual: int = NotImplemented): ...

    def getActiveOnlyEqual(self) -> bool: ...
    def setActiveOnlyEqual(self, newActiveOnlyEqual: bool) -> None: ...
    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...

class KalturaLineupRegionalChannelFilter(KalturaFilter):
    regionIdEqual: int
    parentRegionIncluded: bool
    kSql: str
    lcnGreaterThanOrEqual: int
    lcnLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            regionIdEqual: int = NotImplemented,
            parentRegionIncluded: bool = NotImplemented,
            kSql: str = NotImplemented,
            lcnGreaterThanOrEqual: int = NotImplemented,
            lcnLessThanOrEqual: int = NotImplemented): ...

    def getRegionIdEqual(self) -> int: ...
    def setRegionIdEqual(self, newRegionIdEqual: int) -> None: ...
    def getParentRegionIncluded(self) -> bool: ...
    def setParentRegionIncluded(self, newParentRegionIncluded: bool) -> None: ...
    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...
    def getLcnGreaterThanOrEqual(self) -> int: ...
    def setLcnGreaterThanOrEqual(self, newLcnGreaterThanOrEqual: int) -> None: ...
    def getLcnLessThanOrEqual(self) -> int: ...
    def setLcnLessThanOrEqual(self, newLcnLessThanOrEqual: int) -> None: ...

class KalturaListGroupsRepresentativesFilter(KalturaFilter):
    kSql: str
    def __init__(self,
            orderBy: str = NotImplemented,
            kSql: str = NotImplemented): ...

    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...

class KalturaPaymentMethodProfileFilter(KalturaFilter):
    paymentGatewayIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            paymentGatewayIdEqual: int = NotImplemented): ...

    def getPaymentGatewayIdEqual(self) -> int: ...
    def setPaymentGatewayIdEqual(self, newPaymentGatewayIdEqual: int) -> None: ...

class KalturaAssetPersonalMarkupSearchFilter(KalturaFilter):
    assetsIn: List[KalturaSlimAsset]
    def __init__(self,
            orderBy: str = NotImplemented,
            assetsIn: List[KalturaSlimAsset] = NotImplemented): ...

    def getAssetsIn(self) -> List[KalturaSlimAsset]: ...
    def setAssetsIn(self, newAssetsIn: List[KalturaSlimAsset]) -> None: ...

class KalturaAssetRuleFilter(KalturaFilter):
    conditionsContainType: KalturaRuleConditionType
    assetApplied: KalturaSlimAsset
    actionsContainType: KalturaRuleActionType
    assetRuleIdEqual: int
    nameContains: str
    def __init__(self,
            orderBy: str = NotImplemented,
            conditionsContainType: KalturaRuleConditionType = NotImplemented,
            assetApplied: KalturaSlimAsset = NotImplemented,
            actionsContainType: KalturaRuleActionType = NotImplemented,
            assetRuleIdEqual: int = NotImplemented,
            nameContains: str = NotImplemented): ...

    def getConditionsContainType(self) -> KalturaRuleConditionType: ...
    def setConditionsContainType(self, newConditionsContainType: KalturaRuleConditionType) -> None: ...
    def getAssetApplied(self) -> KalturaSlimAsset: ...
    def setAssetApplied(self, newAssetApplied: KalturaSlimAsset) -> None: ...
    def getActionsContainType(self) -> KalturaRuleActionType: ...
    def setActionsContainType(self, newActionsContainType: KalturaRuleActionType) -> None: ...
    def getAssetRuleIdEqual(self) -> int: ...
    def setAssetRuleIdEqual(self, newAssetRuleIdEqual: int) -> None: ...
    def getNameContains(self) -> str: ...
    def setNameContains(self, newNameContains: str) -> None: ...

class KalturaAssetUserRuleFilter(KalturaFilter):
    attachedUserIdEqualCurrent: bool
    actionsContainType: KalturaRuleActionType
    conditionsContainType: KalturaRuleConditionType
    def __init__(self,
            orderBy: str = NotImplemented,
            attachedUserIdEqualCurrent: bool = NotImplemented,
            actionsContainType: KalturaRuleActionType = NotImplemented,
            conditionsContainType: KalturaRuleConditionType = NotImplemented): ...

    def getAttachedUserIdEqualCurrent(self) -> bool: ...
    def setAttachedUserIdEqualCurrent(self, newAttachedUserIdEqualCurrent: bool) -> None: ...
    def getActionsContainType(self) -> KalturaRuleActionType: ...
    def setActionsContainType(self, newActionsContainType: KalturaRuleActionType) -> None: ...
    def getConditionsContainType(self) -> KalturaRuleConditionType: ...
    def setConditionsContainType(self, newConditionsContainType: KalturaRuleConditionType) -> None: ...

class KalturaCampaignFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaCampaignSearchFilter(KalturaCampaignFilter):
    startDateGreaterThanOrEqual: int
    endDateLessThanOrEqual: int
    stateEqual: KalturaObjectState
    hasPromotion: bool
    nameEqual: str
    nameContains: str
    stateIn: str
    assetUserRuleIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            stateEqual: KalturaObjectState = NotImplemented,
            hasPromotion: bool = NotImplemented,
            nameEqual: str = NotImplemented,
            nameContains: str = NotImplemented,
            stateIn: str = NotImplemented,
            assetUserRuleIdIn: str = NotImplemented): ...

    def getStartDateGreaterThanOrEqual(self) -> int: ...
    def setStartDateGreaterThanOrEqual(self, newStartDateGreaterThanOrEqual: int) -> None: ...
    def getEndDateLessThanOrEqual(self) -> int: ...
    def setEndDateLessThanOrEqual(self, newEndDateLessThanOrEqual: int) -> None: ...
    def getStateEqual(self) -> KalturaObjectState: ...
    def setStateEqual(self, newStateEqual: KalturaObjectState) -> None: ...
    def getHasPromotion(self) -> bool: ...
    def setHasPromotion(self, newHasPromotion: bool) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getNameContains(self) -> str: ...
    def setNameContains(self, newNameContains: str) -> None: ...
    def getStateIn(self) -> str: ...
    def setStateIn(self, newStateIn: str) -> None: ...
    def getAssetUserRuleIdIn(self) -> str: ...
    def setAssetUserRuleIdIn(self, newAssetUserRuleIdIn: str) -> None: ...

class KalturaBatchCampaignSearchFilter(KalturaCampaignSearchFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            stateEqual: KalturaObjectState = NotImplemented,
            hasPromotion: bool = NotImplemented,
            nameEqual: str = NotImplemented,
            nameContains: str = NotImplemented,
            stateIn: str = NotImplemented,
            assetUserRuleIdIn: str = NotImplemented): ...
        pass

class KalturaCampaignIdInFilter(KalturaCampaignFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaCampaignSegmentFilter(KalturaCampaignSearchFilter):
    segmentIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            stateEqual: KalturaObjectState = NotImplemented,
            hasPromotion: bool = NotImplemented,
            nameEqual: str = NotImplemented,
            nameContains: str = NotImplemented,
            stateIn: str = NotImplemented,
            assetUserRuleIdIn: str = NotImplemented,
            segmentIdEqual: int = NotImplemented): ...

    def getSegmentIdEqual(self) -> int: ...
    def setSegmentIdEqual(self, newSegmentIdEqual: int) -> None: ...

class KalturaTriggerCampaignSearchFilter(KalturaCampaignSearchFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            stateEqual: KalturaObjectState = NotImplemented,
            hasPromotion: bool = NotImplemented,
            nameEqual: str = NotImplemented,
            nameContains: str = NotImplemented,
            stateIn: str = NotImplemented,
            assetUserRuleIdIn: str = NotImplemented): ...
        pass

class KalturaBusinessModuleRuleFilter(KalturaFilter):
    businessModuleTypeApplied: KalturaTransactionType
    businessModuleIdApplied: int
    segmentIdsApplied: str
    actionsContainType: KalturaRuleActionType
    def __init__(self,
            orderBy: str = NotImplemented,
            businessModuleTypeApplied: KalturaTransactionType = NotImplemented,
            businessModuleIdApplied: int = NotImplemented,
            segmentIdsApplied: str = NotImplemented,
            actionsContainType: KalturaRuleActionType = NotImplemented): ...

    def getBusinessModuleTypeApplied(self) -> KalturaTransactionType: ...
    def setBusinessModuleTypeApplied(self, newBusinessModuleTypeApplied: KalturaTransactionType) -> None: ...
    def getBusinessModuleIdApplied(self) -> int: ...
    def setBusinessModuleIdApplied(self, newBusinessModuleIdApplied: int) -> None: ...
    def getSegmentIdsApplied(self) -> str: ...
    def setSegmentIdsApplied(self, newSegmentIdsApplied: str) -> None: ...
    def getActionsContainType(self) -> KalturaRuleActionType: ...
    def setActionsContainType(self, newActionsContainType: KalturaRuleActionType) -> None: ...

class KalturaCountryFilter(KalturaFilter):
    idIn: str
    ipEqual: str
    ipEqualCurrent: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            ipEqual: str = NotImplemented,
            ipEqualCurrent: bool = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getIpEqual(self) -> str: ...
    def setIpEqual(self, newIpEqual: str) -> None: ...
    def getIpEqualCurrent(self) -> bool: ...
    def setIpEqualCurrent(self, newIpEqualCurrent: bool) -> None: ...

class KalturaCurrencyFilter(KalturaFilter):
    codeIn: str
    excludePartner: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            codeIn: str = NotImplemented,
            excludePartner: bool = NotImplemented): ...

    def getCodeIn(self) -> str: ...
    def setCodeIn(self, newCodeIn: str) -> None: ...
    def getExcludePartner(self) -> bool: ...
    def setExcludePartner(self, newExcludePartner: bool) -> None: ...

class KalturaDeviceBrandFilter(KalturaFilter):
    idEqual: int
    deviceFamilyIdEqual: int
    nameEqual: str
    typeEqual: KalturaDeviceBrandType
    def __init__(self,
            orderBy: str = NotImplemented,
            idEqual: int = NotImplemented,
            deviceFamilyIdEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            typeEqual: KalturaDeviceBrandType = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getDeviceFamilyIdEqual(self) -> int: ...
    def setDeviceFamilyIdEqual(self, newDeviceFamilyIdEqual: int) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getTypeEqual(self) -> KalturaDeviceBrandType: ...
    def setTypeEqual(self, newTypeEqual: KalturaDeviceBrandType) -> None: ...

class KalturaDeviceFamilyFilter(KalturaFilter):
    idEqual: int
    nameEqual: str
    typeEqual: KalturaDeviceFamilyType
    def __init__(self,
            orderBy: str = NotImplemented,
            idEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            typeEqual: KalturaDeviceFamilyType = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getTypeEqual(self) -> KalturaDeviceFamilyType: ...
    def setTypeEqual(self, newTypeEqual: KalturaDeviceFamilyType) -> None: ...

class KalturaEventNotificationFilter(KalturaFilter):
    idEqual: str
    objectIdEqual: int
    eventObjectTypeEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idEqual: str = NotImplemented,
            objectIdEqual: int = NotImplemented,
            eventObjectTypeEqual: str = NotImplemented): ...

    def getIdEqual(self) -> str: ...
    def setIdEqual(self, newIdEqual: str) -> None: ...
    def getObjectIdEqual(self) -> int: ...
    def setObjectIdEqual(self, newObjectIdEqual: int) -> None: ...
    def getEventObjectTypeEqual(self) -> str: ...
    def setEventObjectTypeEqual(self, newEventObjectTypeEqual: str) -> None: ...

class KalturaExportTaskFilter(KalturaFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaExternalChannelProfileFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaExternalChannelProfileByIdInFilter(KalturaExternalChannelProfileFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaIotFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaIotProfileFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaLanguageFilter(KalturaFilter):
    codeIn: str
    excludePartner: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            codeIn: str = NotImplemented,
            excludePartner: bool = NotImplemented): ...

    def getCodeIn(self) -> str: ...
    def setCodeIn(self, newCodeIn: str) -> None: ...
    def getExcludePartner(self) -> bool: ...
    def setExcludePartner(self, newExcludePartner: bool) -> None: ...

class KalturaMediaFileDynamicDataFilter(KalturaFilter):
    idIn: str
    mediaFileTypeId: int
    mediaFileTypeKeyName: str
    valueEqual: str
    valueStartsWith: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            mediaFileTypeId: int = NotImplemented,
            mediaFileTypeKeyName: str = NotImplemented,
            valueEqual: str = NotImplemented,
            valueStartsWith: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getMediaFileTypeId(self) -> int: ...
    def setMediaFileTypeId(self, newMediaFileTypeId: int) -> None: ...
    def getMediaFileTypeKeyName(self) -> str: ...
    def setMediaFileTypeKeyName(self, newMediaFileTypeKeyName: str) -> None: ...
    def getValueEqual(self) -> str: ...
    def setValueEqual(self, newValueEqual: str) -> None: ...
    def getValueStartsWith(self) -> str: ...
    def setValueStartsWith(self, newValueStartsWith: str) -> None: ...

class KalturaMetaFilter(KalturaFilter):
    idIn: str
    assetStructIdEqual: int
    dataTypeEqual: KalturaMetaDataType
    multipleValueEqual: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            assetStructIdEqual: int = NotImplemented,
            dataTypeEqual: KalturaMetaDataType = NotImplemented,
            multipleValueEqual: bool = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getAssetStructIdEqual(self) -> int: ...
    def setAssetStructIdEqual(self, newAssetStructIdEqual: int) -> None: ...
    def getDataTypeEqual(self) -> KalturaMetaDataType: ...
    def setDataTypeEqual(self, newDataTypeEqual: KalturaMetaDataType) -> None: ...
    def getMultipleValueEqual(self) -> bool: ...
    def setMultipleValueEqual(self, newMultipleValueEqual: bool) -> None: ...

class KalturaParentalRuleFilter(KalturaFilter):
    entityReferenceEqual: KalturaEntityReferenceBy
    def __init__(self,
            orderBy: str = NotImplemented,
            entityReferenceEqual: KalturaEntityReferenceBy = NotImplemented): ...

    def getEntityReferenceEqual(self) -> KalturaEntityReferenceBy: ...
    def setEntityReferenceEqual(self, newEntityReferenceEqual: KalturaEntityReferenceBy) -> None: ...

class KalturaBasePermissionFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaPermissionFilter(KalturaBasePermissionFilter):
    currentUserPermissionsContains: bool
    roleIdIn: int
    def __init__(self,
            orderBy: str = NotImplemented,
            currentUserPermissionsContains: bool = NotImplemented,
            roleIdIn: int = NotImplemented): ...

    def getCurrentUserPermissionsContains(self) -> bool: ...
    def setCurrentUserPermissionsContains(self, newCurrentUserPermissionsContains: bool) -> None: ...
    def getRoleIdIn(self) -> int: ...
    def setRoleIdIn(self, newRoleIdIn: int) -> None: ...

class KalturaPermissionByIdInFilter(KalturaBasePermissionFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaPermissionItemFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaPermissionItemByIdInFilter(KalturaPermissionItemFilter):
    idIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaPermissionItemByApiActionFilter(KalturaPermissionItemFilter):
    serviceEqual: str
    actionEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            serviceEqual: str = NotImplemented,
            actionEqual: str = NotImplemented): ...

    def getServiceEqual(self) -> str: ...
    def setServiceEqual(self, newServiceEqual: str) -> None: ...
    def getActionEqual(self) -> str: ...
    def setActionEqual(self, newActionEqual: str) -> None: ...

class KalturaPermissionItemByArgumentFilter(KalturaPermissionItemByApiActionFilter):
    parameterEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            serviceEqual: str = NotImplemented,
            actionEqual: str = NotImplemented,
            parameterEqual: str = NotImplemented): ...

    def getParameterEqual(self) -> str: ...
    def setParameterEqual(self, newParameterEqual: str) -> None: ...

class KalturaPermissionItemByParameterFilter(KalturaPermissionItemFilter):
    parameterEqual: str
    objectEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            parameterEqual: str = NotImplemented,
            objectEqual: str = NotImplemented): ...

    def getParameterEqual(self) -> str: ...
    def setParameterEqual(self, newParameterEqual: str) -> None: ...
    def getObjectEqual(self) -> str: ...
    def setObjectEqual(self, newObjectEqual: str) -> None: ...

class KalturaPlaybackProfileFilter(KalturaFilter):
    playbackProfileEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            playbackProfileEqual: int = NotImplemented): ...

    def getPlaybackProfileEqual(self) -> int: ...
    def setPlaybackProfileEqual(self, newPlaybackProfileEqual: int) -> None: ...

class KalturaBaseRegionFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaRegionFilter(KalturaBaseRegionFilter):
    externalIdIn: str
    idIn: str
    parentIdEqual: int
    liveAssetIdEqual: int
    parentOnly: bool
    exclusiveLcn: bool
    def __init__(self,
            orderBy: str = NotImplemented,
            externalIdIn: str = NotImplemented,
            idIn: str = NotImplemented,
            parentIdEqual: int = NotImplemented,
            liveAssetIdEqual: int = NotImplemented,
            parentOnly: bool = NotImplemented,
            exclusiveLcn: bool = NotImplemented): ...

    def getExternalIdIn(self) -> str: ...
    def setExternalIdIn(self, newExternalIdIn: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getParentIdEqual(self) -> int: ...
    def setParentIdEqual(self, newParentIdEqual: int) -> None: ...
    def getLiveAssetIdEqual(self) -> int: ...
    def setLiveAssetIdEqual(self, newLiveAssetIdEqual: int) -> None: ...
    def getParentOnly(self) -> bool: ...
    def setParentOnly(self, newParentOnly: bool) -> None: ...
    def getExclusiveLcn(self) -> bool: ...
    def setExclusiveLcn(self, newExclusiveLcn: bool) -> None: ...

class KalturaDefaultRegionFilter(KalturaBaseRegionFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaAddDefaultIfEmptyResponseProfile(KalturaRelatedObjectFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaSearchHistoryFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented): ...
        pass

class KalturaTvmRuleFilter(KalturaFilter):
    ruleTypeEqual: KalturaTvmRuleType
    nameEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            ruleTypeEqual: KalturaTvmRuleType = NotImplemented,
            nameEqual: str = NotImplemented): ...

    def getRuleTypeEqual(self) -> KalturaTvmRuleType: ...
    def setRuleTypeEqual(self, newRuleTypeEqual: KalturaTvmRuleType) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...

class KalturaUserAssetRuleFilter(KalturaFilter):
    assetIdEqual: int
    assetTypeEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            assetIdEqual: int = NotImplemented,
            assetTypeEqual: int = NotImplemented): ...

    def getAssetIdEqual(self) -> int: ...
    def setAssetIdEqual(self, newAssetIdEqual: int) -> None: ...
    def getAssetTypeEqual(self) -> int: ...
    def setAssetTypeEqual(self, newAssetTypeEqual: int) -> None: ...

class KalturaUserRoleFilter(KalturaFilter):
    idIn: str
    currentUserRoleIdsContains: bool
    typeEqual: KalturaUserRoleType
    profileEqual: KalturaUserRoleProfile
    def __init__(self,
            orderBy: str = NotImplemented,
            idIn: str = NotImplemented,
            currentUserRoleIdsContains: bool = NotImplemented,
            typeEqual: KalturaUserRoleType = NotImplemented,
            profileEqual: KalturaUserRoleProfile = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCurrentUserRoleIdsContains(self) -> bool: ...
    def setCurrentUserRoleIdsContains(self, newCurrentUserRoleIdsContains: bool) -> None: ...
    def getTypeEqual(self) -> KalturaUserRoleType: ...
    def setTypeEqual(self, newTypeEqual: KalturaUserRoleType) -> None: ...
    def getProfileEqual(self) -> KalturaUserRoleProfile: ...
    def setProfileEqual(self, newProfileEqual: KalturaUserRoleProfile) -> None: ...

class KalturaEpgFilter(KalturaFilter):
    dateEqual: int
    liveAssetIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            dateEqual: int = NotImplemented,
            liveAssetIdEqual: int = NotImplemented): ...

    def getDateEqual(self) -> int: ...
    def setDateEqual(self, newDateEqual: int) -> None: ...
    def getLiveAssetIdEqual(self) -> int: ...
    def setLiveAssetIdEqual(self, newLiveAssetIdEqual: int) -> None: ...

class KalturaPropertySkipCondition(KalturaSkipCondition):
    propertyPath: str
    operator: KalturaSkipOperators
    value: str
    def __init__(self,
            propertyPath: str = NotImplemented,
            operator: KalturaSkipOperators = NotImplemented,
            value: str = NotImplemented): ...

    def getPropertyPath(self) -> str: ...
    def setPropertyPath(self, newPropertyPath: str) -> None: ...
    def getOperator(self) -> KalturaSkipOperators: ...
    def setOperator(self, newOperator: KalturaSkipOperators) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaAggregatedPropertySkipCondition(KalturaPropertySkipCondition):
    aggregationType: KalturaAggregationType
    def __init__(self,
            propertyPath: str = NotImplemented,
            operator: KalturaSkipOperators = NotImplemented,
            value: str = NotImplemented,
            aggregationType: KalturaAggregationType = NotImplemented): ...

    def getAggregationType(self) -> KalturaAggregationType: ...
    def setAggregationType(self, newAggregationType: KalturaAggregationType) -> None: ...

class KalturaSkipOnErrorCondition(KalturaSkipCondition):
    condition: KalturaSkipOptions
    def __init__(self,
            condition: KalturaSkipOptions = NotImplemented): ...

    def getCondition(self) -> KalturaSkipOptions: ...
    def setCondition(self, newCondition: KalturaSkipOptions) -> None: ...

class KalturaAnnouncement(KalturaObjectBase):
    name: str
    message: str
    enabled: bool
    startTime: int
    timezone: str
    status: KalturaAnnouncementStatus
    recipients: KalturaAnnouncementRecipientsType
    id: int
    imageUrl: str
    includeMail: bool
    mailTemplate: str
    mailSubject: str
    includeSms: bool
    includeIot: bool
    includeUserInbox: bool
    def __init__(self,
            name: str = NotImplemented,
            message: str = NotImplemented,
            enabled: bool = NotImplemented,
            startTime: int = NotImplemented,
            timezone: str = NotImplemented,
            status: KalturaAnnouncementStatus = NotImplemented,
            recipients: KalturaAnnouncementRecipientsType = NotImplemented,
            id: int = NotImplemented,
            imageUrl: str = NotImplemented,
            includeMail: bool = NotImplemented,
            mailTemplate: str = NotImplemented,
            mailSubject: str = NotImplemented,
            includeSms: bool = NotImplemented,
            includeIot: bool = NotImplemented,
            includeUserInbox: bool = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getEnabled(self) -> bool: ...
    def setEnabled(self, newEnabled: bool) -> None: ...
    def getStartTime(self) -> int: ...
    def setStartTime(self, newStartTime: int) -> None: ...
    def getTimezone(self) -> str: ...
    def setTimezone(self, newTimezone: str) -> None: ...
    def getStatus(self) -> KalturaAnnouncementStatus: ...
    def getRecipients(self) -> KalturaAnnouncementRecipientsType: ...
    def setRecipients(self, newRecipients: KalturaAnnouncementRecipientsType) -> None: ...
    def getId(self) -> int: ...
    def getImageUrl(self) -> str: ...
    def setImageUrl(self, newImageUrl: str) -> None: ...
    def getIncludeMail(self) -> bool: ...
    def setIncludeMail(self, newIncludeMail: bool) -> None: ...
    def getMailTemplate(self) -> str: ...
    def setMailTemplate(self, newMailTemplate: str) -> None: ...
    def getMailSubject(self) -> str: ...
    def setMailSubject(self, newMailSubject: str) -> None: ...
    def getIncludeSms(self) -> bool: ...
    def setIncludeSms(self, newIncludeSms: bool) -> None: ...
    def getIncludeIot(self) -> bool: ...
    def setIncludeIot(self, newIncludeIot: bool) -> None: ...
    def getIncludeUserInbox(self) -> bool: ...
    def setIncludeUserInbox(self, newIncludeUserInbox: bool) -> None: ...

class KalturaFilterPager(KalturaObjectBase):
    pageSize: int
    pageIndex: int
    def __init__(self,
            pageSize: int = NotImplemented,
            pageIndex: int = NotImplemented): ...

    def getPageSize(self) -> int: ...
    def setPageSize(self, newPageSize: int) -> None: ...
    def getPageIndex(self) -> int: ...
    def setPageIndex(self, newPageIndex: int) -> None: ...

class KalturaListResponse(KalturaObjectBase):
    totalCount: int
    def __init__(self,
            totalCount: int = NotImplemented): ...

    def getTotalCount(self) -> int: ...
    def setTotalCount(self, newTotalCount: int) -> None: ...

class KalturaAnnouncementListResponse(KalturaListResponse):
    objects: List[KalturaAnnouncement]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAnnouncement] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAnnouncement]: ...
    def setObjects(self, newObjects: List[KalturaAnnouncement]) -> None: ...

class KalturaOTTObjectSupportNullable(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaDeviceReferenceData(KalturaOTTObjectSupportNullable):
    id: int
    name: str
    status: bool
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            status: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getStatus(self) -> bool: ...
    def setStatus(self, newStatus: bool) -> None: ...

class KalturaDeviceReferenceDataListResponse(KalturaListResponse):
    objects: List[KalturaDeviceReferenceData]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDeviceReferenceData] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDeviceReferenceData]: ...
    def setObjects(self, newObjects: List[KalturaDeviceReferenceData]) -> None: ...

class KalturaDeviceManufacturerInformation(KalturaDeviceReferenceData):
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            status: bool = NotImplemented): ...
        pass

class KalturaRegexExpression(KalturaObjectBase):
    expression: str
    description: str
    def __init__(self,
            expression: str = NotImplemented,
            description: str = NotImplemented): ...

    def getExpression(self) -> str: ...
    def setExpression(self, newExpression: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaPasswordPolicy(KalturaOTTObjectSupportNullable):
    id: int
    name: str
    userRoleIds: str
    historyCount: int
    expiration: int
    complexities: List[KalturaRegexExpression]
    lockoutFailuresCount: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            userRoleIds: str = NotImplemented,
            historyCount: int = NotImplemented,
            expiration: int = NotImplemented,
            complexities: List[KalturaRegexExpression] = NotImplemented,
            lockoutFailuresCount: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getUserRoleIds(self) -> str: ...
    def setUserRoleIds(self, newUserRoleIds: str) -> None: ...
    def getHistoryCount(self) -> int: ...
    def setHistoryCount(self, newHistoryCount: int) -> None: ...
    def getExpiration(self) -> int: ...
    def setExpiration(self, newExpiration: int) -> None: ...
    def getComplexities(self) -> List[KalturaRegexExpression]: ...
    def setComplexities(self, newComplexities: List[KalturaRegexExpression]) -> None: ...
    def getLockoutFailuresCount(self) -> int: ...
    def setLockoutFailuresCount(self, newLockoutFailuresCount: int) -> None: ...

class KalturaHouseholdSegment(KalturaOTTObjectSupportNullable):
    segmentId: int
    householdId: int
    def __init__(self,
            segmentId: int = NotImplemented,
            householdId: int = NotImplemented): ...

    def getSegmentId(self) -> int: ...
    def setSegmentId(self, newSegmentId: int) -> None: ...
    def getHouseholdId(self) -> int: ...
    def setHouseholdId(self, newHouseholdId: int) -> None: ...

class KalturaAssetFilePpv(KalturaOTTObjectSupportNullable):
    assetFileId: int
    ppvModuleId: int
    startDate: int
    endDate: int
    def __init__(self,
            assetFileId: int = NotImplemented,
            ppvModuleId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented): ...

    def getAssetFileId(self) -> int: ...
    def setAssetFileId(self, newAssetFileId: int) -> None: ...
    def getPpvModuleId(self) -> int: ...
    def setPpvModuleId(self, newPpvModuleId: int) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...

class KalturaBaseChannel(KalturaOTTObjectSupportNullable):
    id: int
    def __init__(self,
            id: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...

class KalturaDiscountModule(KalturaObjectBase):
    id: int
    percent: float
    startDate: int
    endDate: int
    assetUserRuleId: int
    def __init__(self,
            id: int = NotImplemented,
            percent: float = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            assetUserRuleId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getPercent(self) -> float: ...
    def setPercent(self, newPercent: float) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...

class KalturaUsageModule(KalturaObjectBase):
    id: int
    name: str
    maxViewsNumber: int
    viewLifeCycle: int
    fullLifeCycle: int
    couponId: int
    waiverPeriod: int
    isWaiverEnabled: bool
    isOfflinePlayback: bool
    assetUserRuleId: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            maxViewsNumber: int = NotImplemented,
            viewLifeCycle: int = NotImplemented,
            fullLifeCycle: int = NotImplemented,
            couponId: int = NotImplemented,
            waiverPeriod: int = NotImplemented,
            isWaiverEnabled: bool = NotImplemented,
            isOfflinePlayback: bool = NotImplemented,
            assetUserRuleId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getMaxViewsNumber(self) -> int: ...
    def setMaxViewsNumber(self, newMaxViewsNumber: int) -> None: ...
    def getViewLifeCycle(self) -> int: ...
    def setViewLifeCycle(self, newViewLifeCycle: int) -> None: ...
    def getFullLifeCycle(self) -> int: ...
    def setFullLifeCycle(self, newFullLifeCycle: int) -> None: ...
    def getCouponId(self) -> int: ...
    def getWaiverPeriod(self) -> int: ...
    def setWaiverPeriod(self, newWaiverPeriod: int) -> None: ...
    def getIsWaiverEnabled(self) -> bool: ...
    def setIsWaiverEnabled(self, newIsWaiverEnabled: bool) -> None: ...
    def getIsOfflinePlayback(self) -> bool: ...
    def setIsOfflinePlayback(self, newIsOfflinePlayback: bool) -> None: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...

class KalturaCouponsGroup(KalturaObjectBase):
    id: str
    name: str
    startDate: int
    endDate: int
    maxUsesNumber: int
    maxUsesNumberOnRenewableSub: int
    couponGroupType: KalturaCouponGroupType
    maxHouseholdUses: int
    discountId: int
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            maxUsesNumber: int = NotImplemented,
            maxUsesNumberOnRenewableSub: int = NotImplemented,
            couponGroupType: KalturaCouponGroupType = NotImplemented,
            maxHouseholdUses: int = NotImplemented,
            discountId: int = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getMaxUsesNumber(self) -> int: ...
    def setMaxUsesNumber(self, newMaxUsesNumber: int) -> None: ...
    def getMaxUsesNumberOnRenewableSub(self) -> int: ...
    def setMaxUsesNumberOnRenewableSub(self, newMaxUsesNumberOnRenewableSub: int) -> None: ...
    def getCouponGroupType(self) -> KalturaCouponGroupType: ...
    def setCouponGroupType(self, newCouponGroupType: KalturaCouponGroupType) -> None: ...
    def getMaxHouseholdUses(self) -> int: ...
    def setMaxHouseholdUses(self, newMaxHouseholdUses: int) -> None: ...
    def getDiscountId(self) -> int: ...
    def setDiscountId(self, newDiscountId: int) -> None: ...

class KalturaCollectionCouponGroup(KalturaObjectBase):
    id: int
    startDate: int
    endDate: int
    def __init__(self,
            id: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...

class KalturaProductCode(KalturaObjectBase):
    inappProvider: str
    code: str
    def __init__(self,
            inappProvider: str = NotImplemented,
            code: str = NotImplemented): ...

    def getInappProvider(self) -> str: ...
    def setInappProvider(self, newInappProvider: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...

class KalturaCollection(KalturaOTTObjectSupportNullable):
    id: str
    channels: List[KalturaBaseChannel]
    channelsIds: str
    startDate: int
    endDate: int
    discountModule: KalturaDiscountModule
    discountModuleId: int
    name: str
    multilingualName: List[KalturaTranslationToken]
    description: str
    multilingualDescription: List[KalturaTranslationToken]
    usageModule: KalturaUsageModule
    usageModuleId: int
    couponsGroups: List[KalturaCouponsGroup]
    collectionCouponGroup: List[KalturaCollectionCouponGroup]
    externalId: str
    productCodes: List[KalturaProductCode]
    priceDetailsId: int
    isActive: bool
    createDate: int
    updateDate: int
    virtualAssetId: int
    fileTypes: List[KalturaIntegerValue]
    fileTypesIds: str
    assetUserRuleId: int
    def __init__(self,
            id: str = NotImplemented,
            channels: List[KalturaBaseChannel] = NotImplemented,
            channelsIds: str = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            discountModule: KalturaDiscountModule = NotImplemented,
            discountModuleId: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            usageModule: KalturaUsageModule = NotImplemented,
            usageModuleId: int = NotImplemented,
            couponsGroups: List[KalturaCouponsGroup] = NotImplemented,
            collectionCouponGroup: List[KalturaCollectionCouponGroup] = NotImplemented,
            externalId: str = NotImplemented,
            productCodes: List[KalturaProductCode] = NotImplemented,
            priceDetailsId: int = NotImplemented,
            isActive: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            virtualAssetId: int = NotImplemented,
            fileTypes: List[KalturaIntegerValue] = NotImplemented,
            fileTypesIds: str = NotImplemented,
            assetUserRuleId: int = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getChannels(self) -> List[KalturaBaseChannel]: ...
    def getChannelsIds(self) -> str: ...
    def setChannelsIds(self, newChannelsIds: str) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getDiscountModule(self) -> KalturaDiscountModule: ...
    def getDiscountModuleId(self) -> int: ...
    def setDiscountModuleId(self, newDiscountModuleId: int) -> None: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getDescription(self) -> str: ...
    def getMultilingualDescription(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualDescription(self, newMultilingualDescription: List[KalturaTranslationToken]) -> None: ...
    def getUsageModule(self) -> KalturaUsageModule: ...
    def getUsageModuleId(self) -> int: ...
    def setUsageModuleId(self, newUsageModuleId: int) -> None: ...
    def getCouponsGroups(self) -> List[KalturaCouponsGroup]: ...
    def getCollectionCouponGroup(self) -> List[KalturaCollectionCouponGroup]: ...
    def setCollectionCouponGroup(self, newCollectionCouponGroup: List[KalturaCollectionCouponGroup]) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getProductCodes(self) -> List[KalturaProductCode]: ...
    def setProductCodes(self, newProductCodes: List[KalturaProductCode]) -> None: ...
    def getPriceDetailsId(self) -> int: ...
    def setPriceDetailsId(self, newPriceDetailsId: int) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getVirtualAssetId(self) -> int: ...
    def getFileTypes(self) -> List[KalturaIntegerValue]: ...
    def getFileTypesIds(self) -> str: ...
    def setFileTypesIds(self, newFileTypesIds: str) -> None: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...

class KalturaMediaImage(KalturaObjectBase):
    ratio: str
    width: int
    height: int
    url: str
    version: int
    id: str
    isDefault: bool
    imageTypeId: int
    imageTypeName: str
    def __init__(self,
            ratio: str = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            url: str = NotImplemented,
            version: int = NotImplemented,
            id: str = NotImplemented,
            isDefault: bool = NotImplemented,
            imageTypeId: int = NotImplemented,
            imageTypeName: str = NotImplemented): ...

    def getRatio(self) -> str: ...
    def setRatio(self, newRatio: str) -> None: ...
    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getVersion(self) -> int: ...
    def setVersion(self, newVersion: int) -> None: ...
    def getId(self) -> str: ...
    def getIsDefault(self) -> bool: ...
    def setIsDefault(self, newIsDefault: bool) -> None: ...
    def getImageTypeId(self) -> int: ...
    def setImageTypeId(self, newImageTypeId: int) -> None: ...
    def getImageTypeName(self) -> str: ...
    def setImageTypeName(self, newImageTypeName: str) -> None: ...

class KalturaChannelOrder(KalturaObjectBase):
    dynamicOrderBy: KalturaDynamicOrderBy
    orderBy: KalturaChannelOrderBy
    period: int
    def __init__(self,
            dynamicOrderBy: KalturaDynamicOrderBy = NotImplemented,
            orderBy: KalturaChannelOrderBy = NotImplemented,
            period: int = NotImplemented): ...

    def getDynamicOrderBy(self) -> KalturaDynamicOrderBy: ...
    def setDynamicOrderBy(self, newDynamicOrderBy: KalturaDynamicOrderBy) -> None: ...
    def getOrderBy(self) -> KalturaChannelOrderBy: ...
    def setOrderBy(self, newOrderBy: KalturaChannelOrderBy) -> None: ...
    def getPeriod(self) -> int: ...
    def setPeriod(self, newPeriod: int) -> None: ...

class KalturaBaseChannelOrder(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaChannel(KalturaBaseChannel):
    name: str
    multilingualName: List[KalturaTranslationToken]
    oldName: str
    systemName: str
    description: str
    multilingualDescription: List[KalturaTranslationToken]
    oldDescription: str
    isActive: bool
    orderBy: KalturaChannelOrder
    orderingParametersEqual: List[KalturaBaseChannelOrder]
    createDate: int
    updateDate: int
    supportSegmentBasedOrdering: bool
    assetUserRuleId: int
    metaData: map
    virtualAssetId: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            oldName: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            oldDescription: str = NotImplemented,
            isActive: bool = NotImplemented,
            orderBy: KalturaChannelOrder = NotImplemented,
            orderingParametersEqual: List[KalturaBaseChannelOrder] = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            supportSegmentBasedOrdering: bool = NotImplemented,
            assetUserRuleId: int = NotImplemented,
            metaData: map = NotImplemented,
            virtualAssetId: int = NotImplemented): ...

    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getOldName(self) -> str: ...
    def setOldName(self, newOldName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def getMultilingualDescription(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualDescription(self, newMultilingualDescription: List[KalturaTranslationToken]) -> None: ...
    def getOldDescription(self) -> str: ...
    def setOldDescription(self, newOldDescription: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getOrderBy(self) -> KalturaChannelOrder: ...
    def setOrderBy(self, newOrderBy: KalturaChannelOrder) -> None: ...
    def getOrderingParametersEqual(self) -> List[KalturaBaseChannelOrder]: ...
    def setOrderingParametersEqual(self, newOrderingParametersEqual: List[KalturaBaseChannelOrder]) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getSupportSegmentBasedOrdering(self) -> bool: ...
    def setSupportSegmentBasedOrdering(self, newSupportSegmentBasedOrdering: bool) -> None: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...
    def getMetaData(self) -> map: ...
    def setMetaData(self, newMetaData: map) -> None: ...
    def getVirtualAssetId(self) -> int: ...

class KalturaDynamicChannel(KalturaChannel):
    kSql: str
    assetTypes: List[KalturaIntegerValue]
    groupBy: KalturaAssetGroupBy
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            oldName: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            oldDescription: str = NotImplemented,
            isActive: bool = NotImplemented,
            orderBy: KalturaChannelOrder = NotImplemented,
            orderingParametersEqual: List[KalturaBaseChannelOrder] = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            supportSegmentBasedOrdering: bool = NotImplemented,
            assetUserRuleId: int = NotImplemented,
            metaData: map = NotImplemented,
            virtualAssetId: int = NotImplemented,
            kSql: str = NotImplemented,
            assetTypes: List[KalturaIntegerValue] = NotImplemented,
            groupBy: KalturaAssetGroupBy = NotImplemented): ...

    def getKSql(self) -> str: ...
    def setKSql(self, newKSql: str) -> None: ...
    def getAssetTypes(self) -> List[KalturaIntegerValue]: ...
    def setAssetTypes(self, newAssetTypes: List[KalturaIntegerValue]) -> None: ...
    def getGroupBy(self) -> KalturaAssetGroupBy: ...
    def setGroupBy(self, newGroupBy: KalturaAssetGroupBy) -> None: ...

class KalturaManualCollectionAsset(KalturaObjectBase):
    id: str
    type: KalturaManualCollectionAssetType
    def __init__(self,
            id: str = NotImplemented,
            type: KalturaManualCollectionAssetType = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getType(self) -> KalturaManualCollectionAssetType: ...
    def setType(self, newType: KalturaManualCollectionAssetType) -> None: ...

class KalturaManualChannel(KalturaChannel):
    mediaIds: str
    assets: List[KalturaManualCollectionAsset]
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            oldName: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            oldDescription: str = NotImplemented,
            isActive: bool = NotImplemented,
            orderBy: KalturaChannelOrder = NotImplemented,
            orderingParametersEqual: List[KalturaBaseChannelOrder] = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            supportSegmentBasedOrdering: bool = NotImplemented,
            assetUserRuleId: int = NotImplemented,
            metaData: map = NotImplemented,
            virtualAssetId: int = NotImplemented,
            mediaIds: str = NotImplemented,
            assets: List[KalturaManualCollectionAsset] = NotImplemented): ...

    def getMediaIds(self) -> str: ...
    def setMediaIds(self, newMediaIds: str) -> None: ...
    def getAssets(self) -> List[KalturaManualCollectionAsset]: ...
    def setAssets(self, newAssets: List[KalturaManualCollectionAsset]) -> None: ...

class KalturaChannelDynamicOrder(KalturaBaseChannelOrder):
    name: str
    orderBy: KalturaMetaTagOrderBy
    def __init__(self,
            name: str = NotImplemented,
            orderBy: KalturaMetaTagOrderBy = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getOrderBy(self) -> KalturaMetaTagOrderBy: ...
    def setOrderBy(self, newOrderBy: KalturaMetaTagOrderBy) -> None: ...

class KalturaChannelFieldOrder(KalturaBaseChannelOrder):
    orderBy: KalturaChannelFieldOrderByType
    def __init__(self,
            orderBy: KalturaChannelFieldOrderByType = NotImplemented): ...

    def getOrderBy(self) -> KalturaChannelFieldOrderByType: ...
    def setOrderBy(self, newOrderBy: KalturaChannelFieldOrderByType) -> None: ...

class KalturaChannelSlidingWindowOrder(KalturaBaseChannelOrder):
    period: int
    orderBy: KalturaChannelSlidingWindowOrderByType
    def __init__(self,
            period: int = NotImplemented,
            orderBy: KalturaChannelSlidingWindowOrderByType = NotImplemented): ...

    def getPeriod(self) -> int: ...
    def setPeriod(self, newPeriod: int) -> None: ...
    def getOrderBy(self) -> KalturaChannelSlidingWindowOrderByType: ...
    def setOrderBy(self, newOrderBy: KalturaChannelSlidingWindowOrderByType) -> None: ...

class KalturaPricePlan(KalturaUsageModule):
    isRenewable: bool
    renewalsNumber: int
    discountId: int
    priceDetailsId: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            maxViewsNumber: int = NotImplemented,
            viewLifeCycle: int = NotImplemented,
            fullLifeCycle: int = NotImplemented,
            couponId: int = NotImplemented,
            waiverPeriod: int = NotImplemented,
            isWaiverEnabled: bool = NotImplemented,
            isOfflinePlayback: bool = NotImplemented,
            assetUserRuleId: int = NotImplemented,
            isRenewable: bool = NotImplemented,
            renewalsNumber: int = NotImplemented,
            discountId: int = NotImplemented,
            priceDetailsId: int = NotImplemented): ...

    def getIsRenewable(self) -> bool: ...
    def setIsRenewable(self, newIsRenewable: bool) -> None: ...
    def getRenewalsNumber(self) -> int: ...
    def setRenewalsNumber(self, newRenewalsNumber: int) -> None: ...
    def getDiscountId(self) -> int: ...
    def setDiscountId(self, newDiscountId: int) -> None: ...
    def getPriceDetailsId(self) -> int: ...
    def setPriceDetailsId(self, newPriceDetailsId: int) -> None: ...

class KalturaProgramAssetGroupOffer(KalturaOTTObjectSupportNullable):
    id: int
    name: str
    multilingualName: List[KalturaTranslationToken]
    priceDetailsId: int
    fileTypesIds: str
    description: str
    multilingualDescription: List[KalturaTranslationToken]
    virtualAssetId: int
    isActive: bool
    createDate: int
    updateDate: int
    startDate: int
    endDate: int
    expiryDate: int
    externalId: str
    externalOfferId: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            priceDetailsId: int = NotImplemented,
            fileTypesIds: str = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            virtualAssetId: int = NotImplemented,
            isActive: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            expiryDate: int = NotImplemented,
            externalId: str = NotImplemented,
            externalOfferId: str = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getPriceDetailsId(self) -> int: ...
    def setPriceDetailsId(self, newPriceDetailsId: int) -> None: ...
    def getFileTypesIds(self) -> str: ...
    def setFileTypesIds(self, newFileTypesIds: str) -> None: ...
    def getDescription(self) -> str: ...
    def getMultilingualDescription(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualDescription(self, newMultilingualDescription: List[KalturaTranslationToken]) -> None: ...
    def getVirtualAssetId(self) -> int: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getExpiryDate(self) -> int: ...
    def setExpiryDate(self, newExpiryDate: int) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getExternalOfferId(self) -> str: ...
    def setExternalOfferId(self, newExternalOfferId: str) -> None: ...

class KalturaPrice(KalturaObjectBase):
    currencyId: int
    amount: float
    currency: str
    currencySign: str
    countryId: int
    def __init__(self,
            currencyId: int = NotImplemented,
            amount: float = NotImplemented,
            currency: str = NotImplemented,
            currencySign: str = NotImplemented,
            countryId: int = NotImplemented): ...

    def getCurrencyId(self) -> int: ...
    def getAmount(self) -> float: ...
    def setAmount(self, newAmount: float) -> None: ...
    def getCurrency(self) -> str: ...
    def setCurrency(self, newCurrency: str) -> None: ...
    def getCurrencySign(self) -> str: ...
    def setCurrencySign(self, newCurrencySign: str) -> None: ...
    def getCountryId(self) -> int: ...
    def setCountryId(self, newCountryId: int) -> None: ...

class KalturaPriceDetails(KalturaObjectBase):
    id: int
    name: str
    price: KalturaPrice
    multiCurrencyPrice: List[KalturaPrice]
    descriptions: List[KalturaTranslationToken]
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            price: KalturaPrice = NotImplemented,
            multiCurrencyPrice: List[KalturaPrice] = NotImplemented,
            descriptions: List[KalturaTranslationToken] = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getPrice(self) -> KalturaPrice: ...
    def getMultiCurrencyPrice(self) -> List[KalturaPrice]: ...
    def setMultiCurrencyPrice(self, newMultiCurrencyPrice: List[KalturaPrice]) -> None: ...
    def getDescriptions(self) -> List[KalturaTranslationToken]: ...
    def setDescriptions(self, newDescriptions: List[KalturaTranslationToken]) -> None: ...

class KalturaPreviewModule(KalturaObjectBase):
    id: int
    name: str
    lifeCycle: int
    nonRenewablePeriod: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            lifeCycle: int = NotImplemented,
            nonRenewablePeriod: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getLifeCycle(self) -> int: ...
    def setLifeCycle(self, newLifeCycle: int) -> None: ...
    def getNonRenewablePeriod(self) -> int: ...
    def setNonRenewablePeriod(self, newNonRenewablePeriod: int) -> None: ...

class KalturaPremiumService(KalturaObjectBase):
    id: int
    name: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaSubscriptionCouponGroup(KalturaObjectBase):
    id: int
    startDate: int
    endDate: int
    def __init__(self,
            id: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...

class KalturaSubscription(KalturaOTTObjectSupportNullable):
    id: str
    channels: List[KalturaBaseChannel]
    channelsIds: str
    startDate: int
    endDate: int
    fileTypes: List[KalturaIntegerValue]
    fileTypesIds: str
    isRenewable: bool
    renewalsNumber: int
    isInfiniteRenewal: bool
    price: KalturaPriceDetails
    discountModule: KalturaDiscountModule
    internalDiscountModuleId: int
    name: str
    multilingualName: List[KalturaTranslationToken]
    description: str
    multilingualDescription: List[KalturaTranslationToken]
    mediaId: int
    prorityInOrder: int
    pricePlanIds: str
    flexiblePricePlanId: int
    previewModule: KalturaPreviewModule
    previewModuleId: int
    householdLimitationsId: int
    gracePeriodMinutes: int
    premiumServices: List[KalturaPremiumService]
    maxViewsNumber: int
    viewLifeCycle: int
    waiverPeriod: int
    isWaiverEnabled: bool
    userTypes: List[KalturaOTTUserType]
    couponsGroups: List[KalturaCouponsGroup]
    subscriptionCouponGroup: List[KalturaSubscriptionCouponGroup]
    productCodes: List[KalturaProductCode]
    dependencyType: KalturaSubscriptionDependencyType
    externalId: str
    isCancellationBlocked: bool
    preSaleDate: int
    adsPolicy: KalturaAdsPolicy
    adsParam: str
    isActive: bool
    createDate: int
    updateDate: int
    def __init__(self,
            id: str = NotImplemented,
            channels: List[KalturaBaseChannel] = NotImplemented,
            channelsIds: str = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            fileTypes: List[KalturaIntegerValue] = NotImplemented,
            fileTypesIds: str = NotImplemented,
            isRenewable: bool = NotImplemented,
            renewalsNumber: int = NotImplemented,
            isInfiniteRenewal: bool = NotImplemented,
            price: KalturaPriceDetails = NotImplemented,
            discountModule: KalturaDiscountModule = NotImplemented,
            internalDiscountModuleId: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            mediaId: int = NotImplemented,
            prorityInOrder: int = NotImplemented,
            pricePlanIds: str = NotImplemented,
            flexiblePricePlanId: int = NotImplemented,
            previewModule: KalturaPreviewModule = NotImplemented,
            previewModuleId: int = NotImplemented,
            householdLimitationsId: int = NotImplemented,
            gracePeriodMinutes: int = NotImplemented,
            premiumServices: List[KalturaPremiumService] = NotImplemented,
            maxViewsNumber: int = NotImplemented,
            viewLifeCycle: int = NotImplemented,
            waiverPeriod: int = NotImplemented,
            isWaiverEnabled: bool = NotImplemented,
            userTypes: List[KalturaOTTUserType] = NotImplemented,
            couponsGroups: List[KalturaCouponsGroup] = NotImplemented,
            subscriptionCouponGroup: List[KalturaSubscriptionCouponGroup] = NotImplemented,
            productCodes: List[KalturaProductCode] = NotImplemented,
            dependencyType: KalturaSubscriptionDependencyType = NotImplemented,
            externalId: str = NotImplemented,
            isCancellationBlocked: bool = NotImplemented,
            preSaleDate: int = NotImplemented,
            adsPolicy: KalturaAdsPolicy = NotImplemented,
            adsParam: str = NotImplemented,
            isActive: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getChannels(self) -> List[KalturaBaseChannel]: ...
    def getChannelsIds(self) -> str: ...
    def setChannelsIds(self, newChannelsIds: str) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getFileTypes(self) -> List[KalturaIntegerValue]: ...
    def getFileTypesIds(self) -> str: ...
    def setFileTypesIds(self, newFileTypesIds: str) -> None: ...
    def getIsRenewable(self) -> bool: ...
    def getRenewalsNumber(self) -> int: ...
    def getIsInfiniteRenewal(self) -> bool: ...
    def getPrice(self) -> KalturaPriceDetails: ...
    def getDiscountModule(self) -> KalturaDiscountModule: ...
    def getInternalDiscountModuleId(self) -> int: ...
    def setInternalDiscountModuleId(self, newInternalDiscountModuleId: int) -> None: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getDescription(self) -> str: ...
    def getMultilingualDescription(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualDescription(self, newMultilingualDescription: List[KalturaTranslationToken]) -> None: ...
    def getMediaId(self) -> int: ...
    def getProrityInOrder(self) -> int: ...
    def setProrityInOrder(self, newProrityInOrder: int) -> None: ...
    def getPricePlanIds(self) -> str: ...
    def setPricePlanIds(self, newPricePlanIds: str) -> None: ...
    def getFlexiblePricePlanId(self) -> int: ...
    def setFlexiblePricePlanId(self, newFlexiblePricePlanId: int) -> None: ...
    def getPreviewModule(self) -> KalturaPreviewModule: ...
    def getPreviewModuleId(self) -> int: ...
    def setPreviewModuleId(self, newPreviewModuleId: int) -> None: ...
    def getHouseholdLimitationsId(self) -> int: ...
    def setHouseholdLimitationsId(self, newHouseholdLimitationsId: int) -> None: ...
    def getGracePeriodMinutes(self) -> int: ...
    def setGracePeriodMinutes(self, newGracePeriodMinutes: int) -> None: ...
    def getPremiumServices(self) -> List[KalturaPremiumService]: ...
    def setPremiumServices(self, newPremiumServices: List[KalturaPremiumService]) -> None: ...
    def getMaxViewsNumber(self) -> int: ...
    def getViewLifeCycle(self) -> int: ...
    def getWaiverPeriod(self) -> int: ...
    def getIsWaiverEnabled(self) -> bool: ...
    def getUserTypes(self) -> List[KalturaOTTUserType]: ...
    def getCouponsGroups(self) -> List[KalturaCouponsGroup]: ...
    def getSubscriptionCouponGroup(self) -> List[KalturaSubscriptionCouponGroup]: ...
    def setSubscriptionCouponGroup(self, newSubscriptionCouponGroup: List[KalturaSubscriptionCouponGroup]) -> None: ...
    def getProductCodes(self) -> List[KalturaProductCode]: ...
    def setProductCodes(self, newProductCodes: List[KalturaProductCode]) -> None: ...
    def getDependencyType(self) -> KalturaSubscriptionDependencyType: ...
    def setDependencyType(self, newDependencyType: KalturaSubscriptionDependencyType) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getIsCancellationBlocked(self) -> bool: ...
    def setIsCancellationBlocked(self, newIsCancellationBlocked: bool) -> None: ...
    def getPreSaleDate(self) -> int: ...
    def setPreSaleDate(self, newPreSaleDate: int) -> None: ...
    def getAdsPolicy(self) -> KalturaAdsPolicy: ...
    def setAdsPolicy(self, newAdsPolicy: KalturaAdsPolicy) -> None: ...
    def getAdsParam(self) -> str: ...
    def setAdsParam(self, newAdsParam: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...

class KalturaDiscount(KalturaPrice):
    percentage: float
    def __init__(self,
            currencyId: int = NotImplemented,
            amount: float = NotImplemented,
            currency: str = NotImplemented,
            currencySign: str = NotImplemented,
            countryId: int = NotImplemented,
            percentage: float = NotImplemented): ...

    def getPercentage(self) -> float: ...
    def setPercentage(self, newPercentage: float) -> None: ...

class KalturaHouseholdPremiumService(KalturaPremiumService):
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented): ...
        pass

class KalturaNpvrPremiumService(KalturaPremiumService):
    quotaInMinutes: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            quotaInMinutes: int = NotImplemented): ...

    def getQuotaInMinutes(self) -> int: ...
    def setQuotaInMinutes(self, newQuotaInMinutes: int) -> None: ...

class KalturaSmsAdapterProfile(KalturaOTTObjectSupportNullable):
    id: int
    adapterUrl: str
    sharedSecret: str
    isActive: int
    settings: map
    externalIdentifier: str
    name: str
    def __init__(self,
            id: int = NotImplemented,
            adapterUrl: str = NotImplemented,
            sharedSecret: str = NotImplemented,
            isActive: int = NotImplemented,
            settings: map = NotImplemented,
            externalIdentifier: str = NotImplemented,
            name: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getSharedSecret(self) -> str: ...
    def setSharedSecret(self, newSharedSecret: str) -> None: ...
    def getIsActive(self) -> int: ...
    def setIsActive(self, newIsActive: int) -> None: ...
    def getSettings(self) -> map: ...
    def setSettings(self, newSettings: map) -> None: ...
    def getExternalIdentifier(self) -> str: ...
    def setExternalIdentifier(self, newExternalIdentifier: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaDynamicList(KalturaOTTObjectSupportNullable):
    id: int
    createDate: int
    updateDate: int
    name: str
    def __init__(self,
            id: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            name: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaUdidDynamicList(KalturaDynamicList):
    def __init__(self,
            id: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            name: str = NotImplemented): ...
        pass

class KalturaPluginData(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaDrmPlaybackPluginData(KalturaPluginData):
    scheme: KalturaDrmSchemeName
    licenseURL: str
    dynamicData: map
    def __init__(self,
            scheme: KalturaDrmSchemeName = NotImplemented,
            licenseURL: str = NotImplemented,
            dynamicData: map = NotImplemented): ...

    def getScheme(self) -> KalturaDrmSchemeName: ...
    def setScheme(self, newScheme: KalturaDrmSchemeName) -> None: ...
    def getLicenseURL(self) -> str: ...
    def setLicenseURL(self, newLicenseURL: str) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...

class KalturaCustomDrmPlaybackPluginData(KalturaDrmPlaybackPluginData):
    data: str
    def __init__(self,
            scheme: KalturaDrmSchemeName = NotImplemented,
            licenseURL: str = NotImplemented,
            dynamicData: map = NotImplemented,
            data: str = NotImplemented): ...

    def getData(self) -> str: ...
    def setData(self, newData: str) -> None: ...

class KalturaHouseholdDevice(KalturaOTTObjectSupportNullable):
    householdId: int
    udid: str
    name: str
    brandId: int
    activatedOn: int
    status: KalturaDeviceStatus
    deviceFamilyId: int
    drm: KalturaCustomDrmPlaybackPluginData
    externalId: str
    macAddress: str
    dynamicData: map
    model: str
    manufacturer: str
    manufacturerId: int
    lastActivityTime: int
    def __init__(self,
            householdId: int = NotImplemented,
            udid: str = NotImplemented,
            name: str = NotImplemented,
            brandId: int = NotImplemented,
            activatedOn: int = NotImplemented,
            status: KalturaDeviceStatus = NotImplemented,
            deviceFamilyId: int = NotImplemented,
            drm: KalturaCustomDrmPlaybackPluginData = NotImplemented,
            externalId: str = NotImplemented,
            macAddress: str = NotImplemented,
            dynamicData: map = NotImplemented,
            model: str = NotImplemented,
            manufacturer: str = NotImplemented,
            manufacturerId: int = NotImplemented,
            lastActivityTime: int = NotImplemented): ...

    def getHouseholdId(self) -> int: ...
    def setHouseholdId(self, newHouseholdId: int) -> None: ...
    def getUdid(self) -> str: ...
    def setUdid(self, newUdid: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getBrandId(self) -> int: ...
    def setBrandId(self, newBrandId: int) -> None: ...
    def getActivatedOn(self) -> int: ...
    def setActivatedOn(self, newActivatedOn: int) -> None: ...
    def getStatus(self) -> KalturaDeviceStatus: ...
    def getDeviceFamilyId(self) -> int: ...
    def getDrm(self) -> KalturaCustomDrmPlaybackPluginData: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getMacAddress(self) -> str: ...
    def setMacAddress(self, newMacAddress: str) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...
    def getModel(self) -> str: ...
    def setModel(self, newModel: str) -> None: ...
    def getManufacturer(self) -> str: ...
    def setManufacturer(self, newManufacturer: str) -> None: ...
    def getManufacturerId(self) -> int: ...
    def getLastActivityTime(self) -> int: ...

class KalturaFairPlayPlaybackPluginData(KalturaDrmPlaybackPluginData):
    certificate: str
    def __init__(self,
            scheme: KalturaDrmSchemeName = NotImplemented,
            licenseURL: str = NotImplemented,
            dynamicData: map = NotImplemented,
            certificate: str = NotImplemented): ...

    def getCertificate(self) -> str: ...
    def setCertificate(self, newCertificate: str) -> None: ...

class KalturaHouseholdCoupon(KalturaOTTObjectSupportNullable):
    code: str
    lastUsageDate: int
    def __init__(self,
            code: str = NotImplemented,
            lastUsageDate: int = NotImplemented): ...

    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...
    def getLastUsageDate(self) -> int: ...
    def setLastUsageDate(self, newLastUsageDate: int) -> None: ...

class KalturaUnifiedChannel(KalturaOTTObjectSupportNullable):
    id: int
    type: KalturaChannelType
    def __init__(self,
            id: int = NotImplemented,
            type: KalturaChannelType = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getType(self) -> KalturaChannelType: ...
    def setType(self, newType: KalturaChannelType) -> None: ...

class KalturaCategoryItem(KalturaOTTObjectSupportNullable):
    id: int
    name: str
    multilingualName: List[KalturaTranslationToken]
    parentId: int
    childrenIds: str
    unifiedChannels: List[KalturaUnifiedChannel]
    dynamicData: map
    updateDate: int
    isActive: bool
    startDateInSeconds: int
    endDateInSeconds: int
    type: str
    versionId: int
    virtualAssetId: int
    referenceId: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            parentId: int = NotImplemented,
            childrenIds: str = NotImplemented,
            unifiedChannels: List[KalturaUnifiedChannel] = NotImplemented,
            dynamicData: map = NotImplemented,
            updateDate: int = NotImplemented,
            isActive: bool = NotImplemented,
            startDateInSeconds: int = NotImplemented,
            endDateInSeconds: int = NotImplemented,
            type: str = NotImplemented,
            versionId: int = NotImplemented,
            virtualAssetId: int = NotImplemented,
            referenceId: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getParentId(self) -> int: ...
    def getChildrenIds(self) -> str: ...
    def setChildrenIds(self, newChildrenIds: str) -> None: ...
    def getUnifiedChannels(self) -> List[KalturaUnifiedChannel]: ...
    def setUnifiedChannels(self, newUnifiedChannels: List[KalturaUnifiedChannel]) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...
    def getUpdateDate(self) -> int: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getStartDateInSeconds(self) -> int: ...
    def setStartDateInSeconds(self, newStartDateInSeconds: int) -> None: ...
    def getEndDateInSeconds(self) -> int: ...
    def setEndDateInSeconds(self, newEndDateInSeconds: int) -> None: ...
    def getType(self) -> str: ...
    def setType(self, newType: str) -> None: ...
    def getVersionId(self) -> int: ...
    def getVirtualAssetId(self) -> int: ...
    def getReferenceId(self) -> str: ...
    def setReferenceId(self, newReferenceId: str) -> None: ...

class KalturaUnifiedChannelInfo(KalturaUnifiedChannel):
    name: str
    startDateInSeconds: int
    endDateInSeconds: int
    def __init__(self,
            id: int = NotImplemented,
            type: KalturaChannelType = NotImplemented,
            name: str = NotImplemented,
            startDateInSeconds: int = NotImplemented,
            endDateInSeconds: int = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getStartDateInSeconds(self) -> int: ...
    def setStartDateInSeconds(self, newStartDateInSeconds: int) -> None: ...
    def getEndDateInSeconds(self) -> int: ...
    def setEndDateInSeconds(self, newEndDateInSeconds: int) -> None: ...

class KalturaCategoryVersion(KalturaOTTObjectSupportNullable):
    id: int
    name: str
    treeId: int
    state: KalturaCategoryVersionState
    baseVersionId: int
    categoryRootId: int
    defaultDate: int
    updaterId: int
    comment: str
    createDate: int
    updateDate: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            treeId: int = NotImplemented,
            state: KalturaCategoryVersionState = NotImplemented,
            baseVersionId: int = NotImplemented,
            categoryRootId: int = NotImplemented,
            defaultDate: int = NotImplemented,
            updaterId: int = NotImplemented,
            comment: str = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getTreeId(self) -> int: ...
    def getState(self) -> KalturaCategoryVersionState: ...
    def getBaseVersionId(self) -> int: ...
    def setBaseVersionId(self, newBaseVersionId: int) -> None: ...
    def getCategoryRootId(self) -> int: ...
    def getDefaultDate(self) -> int: ...
    def getUpdaterId(self) -> int: ...
    def getComment(self) -> str: ...
    def setComment(self, newComment: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...

class KalturaRule(KalturaOTTObjectSupportNullable):
    id: int
    name: str
    description: str
    label: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            label: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getLabel(self) -> str: ...
    def setLabel(self, newLabel: str) -> None: ...

class KalturaAssetRuleBase(KalturaRule):
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            label: str = NotImplemented): ...
        pass

class KalturaCondition(KalturaObjectBase):
    type: KalturaRuleConditionType
    description: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented): ...

    def getType(self) -> KalturaRuleConditionType: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaRuleAction(KalturaObjectBase):
    type: KalturaRuleActionType
    description: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...

    def getType(self) -> KalturaRuleActionType: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaAssetRuleAction(KalturaRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaAssetRule(KalturaAssetRuleBase):
    conditions: List[KalturaCondition]
    actions: List[KalturaAssetRuleAction]
    status: KalturaAssetRuleStatus
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            label: str = NotImplemented,
            conditions: List[KalturaCondition] = NotImplemented,
            actions: List[KalturaAssetRuleAction] = NotImplemented,
            status: KalturaAssetRuleStatus = NotImplemented): ...

    def getConditions(self) -> List[KalturaCondition]: ...
    def setConditions(self, newConditions: List[KalturaCondition]) -> None: ...
    def getActions(self) -> List[KalturaAssetRuleAction]: ...
    def setActions(self, newActions: List[KalturaAssetRuleAction]) -> None: ...
    def getStatus(self) -> KalturaAssetRuleStatus: ...

class KalturaAssetConditionBase(KalturaCondition):
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaAssetUserRuleAction(KalturaRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaAssetUserRule(KalturaAssetRuleBase):
    conditions: List[KalturaAssetConditionBase]
    actions: List[KalturaAssetUserRuleAction]
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            label: str = NotImplemented,
            conditions: List[KalturaAssetConditionBase] = NotImplemented,
            actions: List[KalturaAssetUserRuleAction] = NotImplemented): ...

    def getConditions(self) -> List[KalturaAssetConditionBase]: ...
    def setConditions(self, newConditions: List[KalturaAssetConditionBase]) -> None: ...
    def getActions(self) -> List[KalturaAssetUserRuleAction]: ...
    def setActions(self, newActions: List[KalturaAssetUserRuleAction]) -> None: ...

class KalturaAssetCondition(KalturaAssetConditionBase):
    ksql: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            ksql: str = NotImplemented): ...

    def getKsql(self) -> str: ...
    def setKsql(self, newKsql: str) -> None: ...

class KalturaConcurrencyCondition(KalturaAssetCondition):
    limit: int
    concurrencyLimitationType: KalturaConcurrencyLimitationType
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            ksql: str = NotImplemented,
            limit: int = NotImplemented,
            concurrencyLimitationType: KalturaConcurrencyLimitationType = NotImplemented): ...

    def getLimit(self) -> int: ...
    def setLimit(self, newLimit: int) -> None: ...
    def getConcurrencyLimitationType(self) -> KalturaConcurrencyLimitationType: ...
    def setConcurrencyLimitationType(self, newConcurrencyLimitationType: KalturaConcurrencyLimitationType) -> None: ...

class KalturaStringValueArray(KalturaObjectBase):
    objects: List[KalturaStringValue]
    def __init__(self,
            objects: List[KalturaStringValue] = NotImplemented): ...

    def getObjects(self) -> List[KalturaStringValue]: ...
    def setObjects(self, newObjects: List[KalturaStringValue]) -> None: ...

class KalturaAssetShopCondition(KalturaAssetConditionBase):
    value: str
    values: KalturaStringValueArray
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            value: str = NotImplemented,
            values: KalturaStringValueArray = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...
    def getValues(self) -> KalturaStringValueArray: ...
    def setValues(self, newValues: KalturaStringValueArray) -> None: ...

class KalturaSubscriptionCondition(KalturaCondition):
    idIn: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaAssetSubscriptionCondition(KalturaSubscriptionCondition):
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...
        pass

class KalturaUserSubscriptionCondition(KalturaSubscriptionCondition):
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...
        pass

class KalturaBusinessModuleCondition(KalturaCondition):
    businessModuleType: KalturaTransactionType
    businessModuleId: int
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            businessModuleType: KalturaTransactionType = NotImplemented,
            businessModuleId: int = NotImplemented): ...

    def getBusinessModuleType(self) -> KalturaTransactionType: ...
    def setBusinessModuleType(self, newBusinessModuleType: KalturaTransactionType) -> None: ...
    def getBusinessModuleId(self) -> int: ...
    def setBusinessModuleId(self, newBusinessModuleId: int) -> None: ...

class KalturaChannelCondition(KalturaCondition):
    idIn: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaNotCondition(KalturaCondition):
    not_: bool
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented): ...

    def getNot_(self) -> bool: ...
    def setNot_(self, newNot_: bool) -> None: ...

class KalturaCountryCondition(KalturaNotCondition):
    countries: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            countries: str = NotImplemented): ...

    def getCountries(self) -> str: ...
    def setCountries(self, newCountries: str) -> None: ...

class KalturaDateCondition(KalturaNotCondition):
    startDate: int
    endDate: int
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented): ...

    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...

class KalturaHeaderCondition(KalturaNotCondition):
    key: str
    value: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            key: str = NotImplemented,
            value: str = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaOrCondition(KalturaNotCondition):
    conditions: List[KalturaCondition]
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            conditions: List[KalturaCondition] = NotImplemented): ...

    def getConditions(self) -> List[KalturaCondition]: ...
    def setConditions(self, newConditions: List[KalturaCondition]) -> None: ...

class KalturaDeviceBrandCondition(KalturaCondition):
    idIn: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaDeviceDynamicDataCondition(KalturaCondition):
    key: str
    value: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            key: str = NotImplemented,
            value: str = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaDeviceFamilyCondition(KalturaCondition):
    idIn: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaDeviceManufacturerCondition(KalturaCondition):
    idIn: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaDeviceModelCondition(KalturaCondition):
    regexEqual: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            regexEqual: str = NotImplemented): ...

    def getRegexEqual(self) -> str: ...
    def setRegexEqual(self, newRegexEqual: str) -> None: ...

class KalturaDynamicKeysCondition(KalturaCondition):
    key: str
    values: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            key: str = NotImplemented,
            values: str = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValues(self) -> str: ...
    def setValues(self, newValues: str) -> None: ...

class KalturaFileTypeCondition(KalturaCondition):
    idIn: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaIpRangeCondition(KalturaCondition):
    fromIP: str
    toIP: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            fromIP: str = NotImplemented,
            toIP: str = NotImplemented): ...

    def getFromIP(self) -> str: ...
    def setFromIP(self, newFromIP: str) -> None: ...
    def getToIP(self) -> str: ...
    def setToIP(self, newToIP: str) -> None: ...

class KalturaIpV6RangeCondition(KalturaCondition):
    fromIP: str
    toIP: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            fromIP: str = NotImplemented,
            toIP: str = NotImplemented): ...

    def getFromIP(self) -> str: ...
    def setFromIP(self, newFromIP: str) -> None: ...
    def getToIP(self) -> str: ...
    def setToIP(self, newToIP: str) -> None: ...

class KalturaSegmentsCondition(KalturaCondition):
    segmentsIds: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            segmentsIds: str = NotImplemented): ...

    def getSegmentsIds(self) -> str: ...
    def setSegmentsIds(self, newSegmentsIds: str) -> None: ...

class KalturaUdidDynamicListCondition(KalturaCondition):
    id: int
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            id: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...

class KalturaUserRoleCondition(KalturaCondition):
    idIn: str
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            idIn: str = NotImplemented): ...

    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...

class KalturaUserSessionProfileCondition(KalturaCondition):
    id: int
    def __init__(self,
            type: KalturaRuleConditionType = NotImplemented,
            description: str = NotImplemented,
            id: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...

class KalturaAccessControlBlockAction(KalturaAssetRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaAllowPlaybackAction(KalturaAssetRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaApplyPlaybackAdapterAction(KalturaAssetRuleAction):
    adapterId: int
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            adapterId: int = NotImplemented): ...

    def getAdapterId(self) -> int: ...
    def setAdapterId(self, newAdapterId: int) -> None: ...

class KalturaAssetLifeCycleTransitionAction(KalturaAssetRuleAction):
    assetLifeCycleRuleActionType: KalturaAssetLifeCycleRuleActionType
    assetLifeCycleRuleTransitionType: KalturaAssetLifeCycleRuleTransitionType
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            assetLifeCycleRuleActionType: KalturaAssetLifeCycleRuleActionType = NotImplemented,
            assetLifeCycleRuleTransitionType: KalturaAssetLifeCycleRuleTransitionType = NotImplemented): ...

    def getAssetLifeCycleRuleActionType(self) -> KalturaAssetLifeCycleRuleActionType: ...
    def setAssetLifeCycleRuleActionType(self, newAssetLifeCycleRuleActionType: KalturaAssetLifeCycleRuleActionType) -> None: ...
    def getAssetLifeCycleRuleTransitionType(self) -> KalturaAssetLifeCycleRuleTransitionType: ...

class KalturaAssetLifeCycleBuisnessModuleTransitionAction(KalturaAssetLifeCycleTransitionAction):
    fileTypeIds: str
    ppvIds: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            assetLifeCycleRuleActionType: KalturaAssetLifeCycleRuleActionType = NotImplemented,
            assetLifeCycleRuleTransitionType: KalturaAssetLifeCycleRuleTransitionType = NotImplemented,
            fileTypeIds: str = NotImplemented,
            ppvIds: str = NotImplemented): ...

    def getFileTypeIds(self) -> str: ...
    def setFileTypeIds(self, newFileTypeIds: str) -> None: ...
    def getPpvIds(self) -> str: ...
    def setPpvIds(self, newPpvIds: str) -> None: ...

class KalturaAssetLifeCycleTagTransitionAction(KalturaAssetLifeCycleTransitionAction):
    tagIds: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            assetLifeCycleRuleActionType: KalturaAssetLifeCycleRuleActionType = NotImplemented,
            assetLifeCycleRuleTransitionType: KalturaAssetLifeCycleRuleTransitionType = NotImplemented,
            tagIds: str = NotImplemented): ...

    def getTagIds(self) -> str: ...
    def setTagIds(self, newTagIds: str) -> None: ...

class KalturaBlockPlaybackAction(KalturaAssetRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaTimeOffsetRuleAction(KalturaAssetRuleAction):
    offset: int
    timeZone: bool
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            offset: int = NotImplemented,
            timeZone: bool = NotImplemented): ...

    def getOffset(self) -> int: ...
    def setOffset(self, newOffset: int) -> None: ...
    def getTimeZone(self) -> bool: ...
    def setTimeZone(self, newTimeZone: bool) -> None: ...

class KalturaEndDateOffsetRuleAction(KalturaTimeOffsetRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            offset: int = NotImplemented,
            timeZone: bool = NotImplemented): ...
        pass

class KalturaStartDateOffsetRuleAction(KalturaTimeOffsetRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            offset: int = NotImplemented,
            timeZone: bool = NotImplemented): ...
        pass

class KalturaBasePreActionCondition(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaFilterAction(KalturaAssetRuleAction):
    preActionCondition: KalturaBasePreActionCondition
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented): ...

    def getPreActionCondition(self) -> KalturaBasePreActionCondition: ...
    def setPreActionCondition(self, newPreActionCondition: KalturaBasePreActionCondition) -> None: ...

class KalturaFilterFileByAudioCodecAction(KalturaFilterAction):
    audioCodecIn: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            audioCodecIn: str = NotImplemented): ...

    def getAudioCodecIn(self) -> str: ...
    def setAudioCodecIn(self, newAudioCodecIn: str) -> None: ...

class KalturaFilterFileByAudioCodecInDiscoveryAction(KalturaFilterFileByAudioCodecAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            audioCodecIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByAudioCodecInPlaybackAction(KalturaFilterFileByAudioCodecAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            audioCodecIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByDynamicDataAction(KalturaFilterAction):
    key: str
    values: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            key: str = NotImplemented,
            values: str = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValues(self) -> str: ...
    def setValues(self, newValues: str) -> None: ...

class KalturaFilterFileByDynamicDataInDiscoveryAction(KalturaFilterFileByDynamicDataAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            key: str = NotImplemented,
            values: str = NotImplemented): ...
        pass

class KalturaFilterFileByDynamicDataInPlaybackAction(KalturaFilterFileByDynamicDataAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            key: str = NotImplemented,
            values: str = NotImplemented): ...
        pass

class KalturaFilterFileByFileTypeIdAction(KalturaFilterAction):
    fileTypeIdIn: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            fileTypeIdIn: str = NotImplemented): ...

    def getFileTypeIdIn(self) -> str: ...
    def setFileTypeIdIn(self, newFileTypeIdIn: str) -> None: ...

class KalturaFilterFileByFileTypeIdForAssetTypeAction(KalturaFilterFileByFileTypeIdAction):
    assetTypeIn: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            fileTypeIdIn: str = NotImplemented,
            assetTypeIn: str = NotImplemented): ...

    def getAssetTypeIn(self) -> str: ...
    def setAssetTypeIn(self, newAssetTypeIn: str) -> None: ...

class KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction(KalturaFilterFileByFileTypeIdForAssetTypeAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            fileTypeIdIn: str = NotImplemented,
            assetTypeIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction(KalturaFilterFileByFileTypeIdForAssetTypeAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            fileTypeIdIn: str = NotImplemented,
            assetTypeIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByFileTypeIdInDiscoveryAction(KalturaFilterFileByFileTypeIdAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            fileTypeIdIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByFileTypeIdInPlaybackAction(KalturaFilterFileByFileTypeIdAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            fileTypeIdIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByLabelAction(KalturaFilterAction):
    labelIn: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            labelIn: str = NotImplemented): ...

    def getLabelIn(self) -> str: ...
    def setLabelIn(self, newLabelIn: str) -> None: ...

class KalturaFilterFileByLabelInDiscoveryAction(KalturaFilterFileByLabelAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            labelIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByLabelInPlaybackAction(KalturaFilterFileByLabelAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            labelIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByQualityAction(KalturaFilterAction):
    qualityIn: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            qualityIn: str = NotImplemented): ...

    def getQualityIn(self) -> str: ...
    def setQualityIn(self, newQualityIn: str) -> None: ...

class KalturaFilterFileByQualityInDiscoveryAction(KalturaFilterFileByQualityAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            qualityIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByQualityInPlaybackAction(KalturaFilterFileByQualityAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            qualityIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByStreamerTypeAction(KalturaFilterAction):
    streamerTypeIn: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            streamerTypeIn: str = NotImplemented): ...

    def getStreamerTypeIn(self) -> str: ...
    def setStreamerTypeIn(self, newStreamerTypeIn: str) -> None: ...

class KalturaFilterFileByStreamerTypeInDiscovery(KalturaFilterFileByStreamerTypeAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            streamerTypeIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByStreamerTypeInPlayback(KalturaFilterFileByStreamerTypeAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            streamerTypeIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByVideoCodecAction(KalturaFilterAction):
    videoCodecIn: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            videoCodecIn: str = NotImplemented): ...

    def getVideoCodecIn(self) -> str: ...
    def setVideoCodecIn(self, newVideoCodecIn: str) -> None: ...

class KalturaFilterFileByVideoCodecInDiscoveryAction(KalturaFilterFileByVideoCodecAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            videoCodecIn: str = NotImplemented): ...
        pass

class KalturaFilterFileByVideoCodecInPlayback(KalturaFilterFileByVideoCodecAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            videoCodecIn: str = NotImplemented): ...
        pass

class KalturaFilterAssetByKsqlAction(KalturaFilterAction):
    ksql: str
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            preActionCondition: KalturaBasePreActionCondition = NotImplemented,
            ksql: str = NotImplemented): ...

    def getKsql(self) -> str: ...
    def setKsql(self, newKsql: str) -> None: ...

class KalturaNoShopPreActionCondition(KalturaBasePreActionCondition):
    def __init__(self): ...
        pass

class KalturaShopPreActionCondition(KalturaBasePreActionCondition):
    shopAssetUserRuleId: int
    def __init__(self,
            shopAssetUserRuleId: int = NotImplemented): ...

    def getShopAssetUserRuleId(self) -> int: ...
    def setShopAssetUserRuleId(self, newShopAssetUserRuleId: int) -> None: ...

class KalturaBusinessModuleRuleAction(KalturaRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaApplyDiscountModuleAction(KalturaBusinessModuleRuleAction):
    discountModuleId: int
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            discountModuleId: int = NotImplemented): ...

    def getDiscountModuleId(self) -> int: ...
    def setDiscountModuleId(self, newDiscountModuleId: int) -> None: ...

class KalturaApplyFreePlaybackAction(KalturaBusinessModuleRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaAssetUserRuleBlockAction(KalturaAssetUserRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented): ...
        pass

class KalturaAssetUserRuleFilterAction(KalturaAssetUserRuleAction):
    applyOnChannel: bool
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            description: str = NotImplemented,
            applyOnChannel: bool = NotImplemented): ...

    def getApplyOnChannel(self) -> bool: ...
    def setApplyOnChannel(self, newApplyOnChannel: bool) -> None: ...

class KalturaBusinessModuleRule(KalturaRule):
    conditions: List[KalturaCondition]
    actions: List[KalturaBusinessModuleRuleAction]
    createDate: int
    updateDate: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            label: str = NotImplemented,
            conditions: List[KalturaCondition] = NotImplemented,
            actions: List[KalturaBusinessModuleRuleAction] = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getConditions(self) -> List[KalturaCondition]: ...
    def setConditions(self, newConditions: List[KalturaCondition]) -> None: ...
    def getActions(self) -> List[KalturaBusinessModuleRuleAction]: ...
    def setActions(self, newActions: List[KalturaBusinessModuleRuleAction]) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...

class KalturaTvmRule(KalturaRule):
    createDate: int
    ruleType: KalturaTvmRuleType
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            label: str = NotImplemented,
            createDate: int = NotImplemented,
            ruleType: KalturaTvmRuleType = NotImplemented): ...

    def getCreateDate(self) -> int: ...
    def getRuleType(self) -> KalturaTvmRuleType: ...

class KalturaTvmDeviceRule(KalturaTvmRule):
    deviceBrandIds: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            label: str = NotImplemented,
            createDate: int = NotImplemented,
            ruleType: KalturaTvmRuleType = NotImplemented,
            deviceBrandIds: str = NotImplemented): ...

    def getDeviceBrandIds(self) -> str: ...
    def setDeviceBrandIds(self, newDeviceBrandIds: str) -> None: ...

class KalturaTvmGeoRule(KalturaTvmRule):
    onlyOrBut: bool
    countryIds: str
    proxyRuleId: int
    proxyRuleName: str
    proxyLevelId: int
    proxyLevelName: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            label: str = NotImplemented,
            createDate: int = NotImplemented,
            ruleType: KalturaTvmRuleType = NotImplemented,
            onlyOrBut: bool = NotImplemented,
            countryIds: str = NotImplemented,
            proxyRuleId: int = NotImplemented,
            proxyRuleName: str = NotImplemented,
            proxyLevelId: int = NotImplemented,
            proxyLevelName: str = NotImplemented): ...

    def getOnlyOrBut(self) -> bool: ...
    def setOnlyOrBut(self, newOnlyOrBut: bool) -> None: ...
    def getCountryIds(self) -> str: ...
    def setCountryIds(self, newCountryIds: str) -> None: ...
    def getProxyRuleId(self) -> int: ...
    def setProxyRuleId(self, newProxyRuleId: int) -> None: ...
    def getProxyRuleName(self) -> str: ...
    def setProxyRuleName(self, newProxyRuleName: str) -> None: ...
    def getProxyLevelId(self) -> int: ...
    def setProxyLevelId(self, newProxyLevelId: int) -> None: ...
    def getProxyLevelName(self) -> str: ...
    def setProxyLevelName(self, newProxyLevelName: str) -> None: ...

class KalturaBasePromotion(KalturaObjectBase):
    conditions: List[KalturaCondition]
    def __init__(self,
            conditions: List[KalturaCondition] = NotImplemented): ...

    def getConditions(self) -> List[KalturaCondition]: ...
    def setConditions(self, newConditions: List[KalturaCondition]) -> None: ...

class KalturaCampaign(KalturaOTTObjectSupportNullable):
    id: int
    createDate: int
    updateDate: int
    startDate: int
    endDate: int
    name: str
    systemName: str
    description: str
    state: KalturaObjectState
    promotion: KalturaBasePromotion
    message: str
    collectionIdIn: str
    assetUserRuleId: int
    def __init__(self,
            id: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            state: KalturaObjectState = NotImplemented,
            promotion: KalturaBasePromotion = NotImplemented,
            message: str = NotImplemented,
            collectionIdIn: str = NotImplemented,
            assetUserRuleId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getState(self) -> KalturaObjectState: ...
    def getPromotion(self) -> KalturaBasePromotion: ...
    def setPromotion(self, newPromotion: KalturaBasePromotion) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getCollectionIdIn(self) -> str: ...
    def setCollectionIdIn(self, newCollectionIdIn: str) -> None: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...

class KalturaBatchCampaign(KalturaCampaign):
    populationConditions: List[KalturaCondition]
    def __init__(self,
            id: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            state: KalturaObjectState = NotImplemented,
            promotion: KalturaBasePromotion = NotImplemented,
            message: str = NotImplemented,
            collectionIdIn: str = NotImplemented,
            assetUserRuleId: int = NotImplemented,
            populationConditions: List[KalturaCondition] = NotImplemented): ...

    def getPopulationConditions(self) -> List[KalturaCondition]: ...
    def setPopulationConditions(self, newPopulationConditions: List[KalturaCondition]) -> None: ...

class KalturaTriggerCampaign(KalturaCampaign):
    service: KalturaApiService
    action: KalturaApiAction
    triggerConditions: List[KalturaCondition]
    def __init__(self,
            id: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            state: KalturaObjectState = NotImplemented,
            promotion: KalturaBasePromotion = NotImplemented,
            message: str = NotImplemented,
            collectionIdIn: str = NotImplemented,
            assetUserRuleId: int = NotImplemented,
            service: KalturaApiService = NotImplemented,
            action: KalturaApiAction = NotImplemented,
            triggerConditions: List[KalturaCondition] = NotImplemented): ...

    def getService(self) -> KalturaApiService: ...
    def setService(self, newService: KalturaApiService) -> None: ...
    def getAction(self) -> KalturaApiAction: ...
    def setAction(self, newAction: KalturaApiAction) -> None: ...
    def getTriggerConditions(self) -> List[KalturaCondition]: ...
    def setTriggerConditions(self, newTriggerConditions: List[KalturaCondition]) -> None: ...

class KalturaCouponPromotion(KalturaBasePromotion):
    couponGroupId: int
    def __init__(self,
            conditions: List[KalturaCondition] = NotImplemented,
            couponGroupId: int = NotImplemented): ...

    def getCouponGroupId(self) -> int: ...
    def setCouponGroupId(self, newCouponGroupId: int) -> None: ...

class KalturaPromotion(KalturaBasePromotion):
    discountModuleId: int
    numberOfRecurring: int
    maxDiscountUsages: int
    def __init__(self,
            conditions: List[KalturaCondition] = NotImplemented,
            discountModuleId: int = NotImplemented,
            numberOfRecurring: int = NotImplemented,
            maxDiscountUsages: int = NotImplemented): ...

    def getDiscountModuleId(self) -> int: ...
    def setDiscountModuleId(self, newDiscountModuleId: int) -> None: ...
    def getNumberOfRecurring(self) -> int: ...
    def setNumberOfRecurring(self, newNumberOfRecurring: int) -> None: ...
    def getMaxDiscountUsages(self) -> int: ...
    def setMaxDiscountUsages(self, newMaxDiscountUsages: int) -> None: ...

class KalturaEventNotification(KalturaOTTObjectSupportNullable):
    id: str
    objectId: int
    eventObjectType: str
    message: str
    status: KalturaEventNotificationStatus
    actionType: str
    createDate: int
    updateDate: int
    def __init__(self,
            id: str = NotImplemented,
            objectId: int = NotImplemented,
            eventObjectType: str = NotImplemented,
            message: str = NotImplemented,
            status: KalturaEventNotificationStatus = NotImplemented,
            actionType: str = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getObjectId(self) -> int: ...
    def setObjectId(self, newObjectId: int) -> None: ...
    def getEventObjectType(self) -> str: ...
    def setEventObjectType(self, newEventObjectType: str) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getStatus(self) -> KalturaEventNotificationStatus: ...
    def setStatus(self, newStatus: KalturaEventNotificationStatus) -> None: ...
    def getActionType(self) -> str: ...
    def setActionType(self, newActionType: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...

class KalturaIot(KalturaOTTObjectSupportNullable):
    udid: str
    accessKey: str
    accessSecretKey: str
    username: str
    userPassword: str
    identityId: str
    thingArn: str
    thingId: str
    principal: str
    endPoint: str
    extendedEndPoint: str
    identityPoolId: str
    def __init__(self,
            udid: str = NotImplemented,
            accessKey: str = NotImplemented,
            accessSecretKey: str = NotImplemented,
            username: str = NotImplemented,
            userPassword: str = NotImplemented,
            identityId: str = NotImplemented,
            thingArn: str = NotImplemented,
            thingId: str = NotImplemented,
            principal: str = NotImplemented,
            endPoint: str = NotImplemented,
            extendedEndPoint: str = NotImplemented,
            identityPoolId: str = NotImplemented): ...

    def getUdid(self) -> str: ...
    def setUdid(self, newUdid: str) -> None: ...
    def getAccessKey(self) -> str: ...
    def setAccessKey(self, newAccessKey: str) -> None: ...
    def getAccessSecretKey(self) -> str: ...
    def setAccessSecretKey(self, newAccessSecretKey: str) -> None: ...
    def getUsername(self) -> str: ...
    def setUsername(self, newUsername: str) -> None: ...
    def getUserPassword(self) -> str: ...
    def setUserPassword(self, newUserPassword: str) -> None: ...
    def getIdentityId(self) -> str: ...
    def setIdentityId(self, newIdentityId: str) -> None: ...
    def getThingArn(self) -> str: ...
    def setThingArn(self, newThingArn: str) -> None: ...
    def getThingId(self) -> str: ...
    def setThingId(self, newThingId: str) -> None: ...
    def getPrincipal(self) -> str: ...
    def setPrincipal(self, newPrincipal: str) -> None: ...
    def getEndPoint(self) -> str: ...
    def setEndPoint(self, newEndPoint: str) -> None: ...
    def getExtendedEndPoint(self) -> str: ...
    def setExtendedEndPoint(self, newExtendedEndPoint: str) -> None: ...
    def getIdentityPoolId(self) -> str: ...
    def setIdentityPoolId(self, newIdentityPoolId: str) -> None: ...

class KalturaIotProfileAws(KalturaOTTObjectSupportNullable):
    iotEndPoint: str
    accessKeyId: str
    secretAccessKey: str
    userPoolId: str
    clientId: str
    identityPoolId: str
    region: str
    updateDate: int
    def __init__(self,
            iotEndPoint: str = NotImplemented,
            accessKeyId: str = NotImplemented,
            secretAccessKey: str = NotImplemented,
            userPoolId: str = NotImplemented,
            clientId: str = NotImplemented,
            identityPoolId: str = NotImplemented,
            region: str = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getIotEndPoint(self) -> str: ...
    def setIotEndPoint(self, newIotEndPoint: str) -> None: ...
    def getAccessKeyId(self) -> str: ...
    def setAccessKeyId(self, newAccessKeyId: str) -> None: ...
    def getSecretAccessKey(self) -> str: ...
    def setSecretAccessKey(self, newSecretAccessKey: str) -> None: ...
    def getUserPoolId(self) -> str: ...
    def setUserPoolId(self, newUserPoolId: str) -> None: ...
    def getClientId(self) -> str: ...
    def setClientId(self, newClientId: str) -> None: ...
    def getIdentityPoolId(self) -> str: ...
    def setIdentityPoolId(self, newIdentityPoolId: str) -> None: ...
    def getRegion(self) -> str: ...
    def setRegion(self, newRegion: str) -> None: ...
    def getUpdateDate(self) -> int: ...
    def setUpdateDate(self, newUpdateDate: int) -> None: ...

class KalturaAssetFile(KalturaObjectBase):
    url: str
    def __init__(self,
            url: str = NotImplemented): ...

    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...

class KalturaBusinessModuleDetails(KalturaObjectBase):
    businessModuleId: int
    businessModuleType: KalturaTransactionType
    def __init__(self,
            businessModuleId: int = NotImplemented,
            businessModuleType: KalturaTransactionType = NotImplemented): ...

    def getBusinessModuleId(self) -> int: ...
    def setBusinessModuleId(self, newBusinessModuleId: int) -> None: ...
    def getBusinessModuleType(self) -> KalturaTransactionType: ...
    def setBusinessModuleType(self, newBusinessModuleType: KalturaTransactionType) -> None: ...

class KalturaMediaFile(KalturaAssetFile):
    assetId: int
    id: int
    type: str
    typeId: int
    altUrl: str
    duration: int
    externalId: str
    altExternalId: str
    fileSize: int
    additionalData: str
    altStreamingCode: str
    alternativeCdnAdapaterProfileId: int
    endDate: int
    startDate: int
    externalStoreId: str
    isDefaultLanguage: bool
    language: str
    orderNum: int
    outputProtecationLevel: str
    cdnAdapaterProfileId: int
    status: bool
    catalogEndDate: int
    opl: str
    businessModuleDetails: KalturaBusinessModuleDetails
    labels: str
    dynamicData: map
    def __init__(self,
            url: str = NotImplemented,
            assetId: int = NotImplemented,
            id: int = NotImplemented,
            type: str = NotImplemented,
            typeId: int = NotImplemented,
            altUrl: str = NotImplemented,
            duration: int = NotImplemented,
            externalId: str = NotImplemented,
            altExternalId: str = NotImplemented,
            fileSize: int = NotImplemented,
            additionalData: str = NotImplemented,
            altStreamingCode: str = NotImplemented,
            alternativeCdnAdapaterProfileId: int = NotImplemented,
            endDate: int = NotImplemented,
            startDate: int = NotImplemented,
            externalStoreId: str = NotImplemented,
            isDefaultLanguage: bool = NotImplemented,
            language: str = NotImplemented,
            orderNum: int = NotImplemented,
            outputProtecationLevel: str = NotImplemented,
            cdnAdapaterProfileId: int = NotImplemented,
            status: bool = NotImplemented,
            catalogEndDate: int = NotImplemented,
            opl: str = NotImplemented,
            businessModuleDetails: KalturaBusinessModuleDetails = NotImplemented,
            labels: str = NotImplemented,
            dynamicData: map = NotImplemented): ...

    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...
    def getId(self) -> int: ...
    def getType(self) -> str: ...
    def getTypeId(self) -> int: ...
    def setTypeId(self, newTypeId: int) -> None: ...
    def getAltUrl(self) -> str: ...
    def setAltUrl(self, newAltUrl: str) -> None: ...
    def getDuration(self) -> int: ...
    def setDuration(self, newDuration: int) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getAltExternalId(self) -> str: ...
    def setAltExternalId(self, newAltExternalId: str) -> None: ...
    def getFileSize(self) -> int: ...
    def setFileSize(self, newFileSize: int) -> None: ...
    def getAdditionalData(self) -> str: ...
    def setAdditionalData(self, newAdditionalData: str) -> None: ...
    def getAltStreamingCode(self) -> str: ...
    def setAltStreamingCode(self, newAltStreamingCode: str) -> None: ...
    def getAlternativeCdnAdapaterProfileId(self) -> int: ...
    def setAlternativeCdnAdapaterProfileId(self, newAlternativeCdnAdapaterProfileId: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getExternalStoreId(self) -> str: ...
    def setExternalStoreId(self, newExternalStoreId: str) -> None: ...
    def getIsDefaultLanguage(self) -> bool: ...
    def setIsDefaultLanguage(self, newIsDefaultLanguage: bool) -> None: ...
    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getOrderNum(self) -> int: ...
    def setOrderNum(self, newOrderNum: int) -> None: ...
    def getOutputProtecationLevel(self) -> str: ...
    def setOutputProtecationLevel(self, newOutputProtecationLevel: str) -> None: ...
    def getCdnAdapaterProfileId(self) -> int: ...
    def setCdnAdapaterProfileId(self, newCdnAdapaterProfileId: int) -> None: ...
    def getStatus(self) -> bool: ...
    def setStatus(self, newStatus: bool) -> None: ...
    def getCatalogEndDate(self) -> int: ...
    def setCatalogEndDate(self, newCatalogEndDate: int) -> None: ...
    def getOpl(self) -> str: ...
    def setOpl(self, newOpl: str) -> None: ...
    def getBusinessModuleDetails(self) -> KalturaBusinessModuleDetails: ...
    def setBusinessModuleDetails(self, newBusinessModuleDetails: KalturaBusinessModuleDetails) -> None: ...
    def getLabels(self) -> str: ...
    def setLabels(self, newLabels: str) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...

class KalturaBuzzScore(KalturaObjectBase):
    normalizedAvgScore: float
    updateDate: int
    avgScore: float
    def __init__(self,
            normalizedAvgScore: float = NotImplemented,
            updateDate: int = NotImplemented,
            avgScore: float = NotImplemented): ...

    def getNormalizedAvgScore(self) -> float: ...
    def setNormalizedAvgScore(self, newNormalizedAvgScore: float) -> None: ...
    def getUpdateDate(self) -> int: ...
    def setUpdateDate(self, newUpdateDate: int) -> None: ...
    def getAvgScore(self) -> float: ...
    def setAvgScore(self, newAvgScore: float) -> None: ...

class KalturaAssetStatistics(KalturaObjectBase):
    assetId: int
    likes: int
    views: int
    ratingCount: int
    rating: float
    buzzScore: KalturaBuzzScore
    def __init__(self,
            assetId: int = NotImplemented,
            likes: int = NotImplemented,
            views: int = NotImplemented,
            ratingCount: int = NotImplemented,
            rating: float = NotImplemented,
            buzzScore: KalturaBuzzScore = NotImplemented): ...

    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...
    def getLikes(self) -> int: ...
    def setLikes(self, newLikes: int) -> None: ...
    def getViews(self) -> int: ...
    def setViews(self, newViews: int) -> None: ...
    def getRatingCount(self) -> int: ...
    def setRatingCount(self, newRatingCount: int) -> None: ...
    def getRating(self) -> float: ...
    def setRating(self, newRating: float) -> None: ...
    def getBuzzScore(self) -> KalturaBuzzScore: ...
    def setBuzzScore(self, newBuzzScore: KalturaBuzzScore) -> None: ...

class KalturaMultilingualStringValueArray(KalturaObjectBase):
    objects: List[KalturaMultilingualStringValue]
    def __init__(self,
            objects: List[KalturaMultilingualStringValue] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMultilingualStringValue]: ...
    def setObjects(self, newObjects: List[KalturaMultilingualStringValue]) -> None: ...

class KalturaFavorite(KalturaObjectBase):
    assetId: int
    extraData: str
    createDate: int
    def __init__(self,
            assetId: int = NotImplemented,
            extraData: str = NotImplemented,
            createDate: int = NotImplemented): ...

    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...
    def getExtraData(self) -> str: ...
    def setExtraData(self, newExtraData: str) -> None: ...
    def getCreateDate(self) -> int: ...

class KalturaFavoriteListResponse(KalturaListResponse):
    objects: List[KalturaFavorite]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaFavorite] = NotImplemented): ...

    def getObjects(self) -> List[KalturaFavorite]: ...
    def setObjects(self, newObjects: List[KalturaFavorite]) -> None: ...

class KalturaPlaybackSource(KalturaMediaFile):
    format: str
    protocols: str
    drm: List[KalturaDrmPlaybackPluginData]
    isTokenized: bool
    businessModuleId: int
    businessModuleType: KalturaTransactionType
    def __init__(self,
            url: str = NotImplemented,
            assetId: int = NotImplemented,
            id: int = NotImplemented,
            type: str = NotImplemented,
            typeId: int = NotImplemented,
            altUrl: str = NotImplemented,
            duration: int = NotImplemented,
            externalId: str = NotImplemented,
            altExternalId: str = NotImplemented,
            fileSize: int = NotImplemented,
            additionalData: str = NotImplemented,
            altStreamingCode: str = NotImplemented,
            alternativeCdnAdapaterProfileId: int = NotImplemented,
            endDate: int = NotImplemented,
            startDate: int = NotImplemented,
            externalStoreId: str = NotImplemented,
            isDefaultLanguage: bool = NotImplemented,
            language: str = NotImplemented,
            orderNum: int = NotImplemented,
            outputProtecationLevel: str = NotImplemented,
            cdnAdapaterProfileId: int = NotImplemented,
            status: bool = NotImplemented,
            catalogEndDate: int = NotImplemented,
            opl: str = NotImplemented,
            businessModuleDetails: KalturaBusinessModuleDetails = NotImplemented,
            labels: str = NotImplemented,
            dynamicData: map = NotImplemented,
            format: str = NotImplemented,
            protocols: str = NotImplemented,
            drm: List[KalturaDrmPlaybackPluginData] = NotImplemented,
            isTokenized: bool = NotImplemented,
            businessModuleId: int = NotImplemented,
            businessModuleType: KalturaTransactionType = NotImplemented): ...

    def getFormat(self) -> str: ...
    def setFormat(self, newFormat: str) -> None: ...
    def getProtocols(self) -> str: ...
    def setProtocols(self, newProtocols: str) -> None: ...
    def getDrm(self) -> List[KalturaDrmPlaybackPluginData]: ...
    def setDrm(self, newDrm: List[KalturaDrmPlaybackPluginData]) -> None: ...
    def getIsTokenized(self) -> bool: ...
    def setIsTokenized(self, newIsTokenized: bool) -> None: ...
    def getBusinessModuleId(self) -> int: ...
    def getBusinessModuleType(self) -> KalturaTransactionType: ...

class KalturaDiscoveryMediaFile(KalturaMediaFile):
    isPlaybackable: bool
    def __init__(self,
            url: str = NotImplemented,
            assetId: int = NotImplemented,
            id: int = NotImplemented,
            type: str = NotImplemented,
            typeId: int = NotImplemented,
            altUrl: str = NotImplemented,
            duration: int = NotImplemented,
            externalId: str = NotImplemented,
            altExternalId: str = NotImplemented,
            fileSize: int = NotImplemented,
            additionalData: str = NotImplemented,
            altStreamingCode: str = NotImplemented,
            alternativeCdnAdapaterProfileId: int = NotImplemented,
            endDate: int = NotImplemented,
            startDate: int = NotImplemented,
            externalStoreId: str = NotImplemented,
            isDefaultLanguage: bool = NotImplemented,
            language: str = NotImplemented,
            orderNum: int = NotImplemented,
            outputProtecationLevel: str = NotImplemented,
            cdnAdapaterProfileId: int = NotImplemented,
            status: bool = NotImplemented,
            catalogEndDate: int = NotImplemented,
            opl: str = NotImplemented,
            businessModuleDetails: KalturaBusinessModuleDetails = NotImplemented,
            labels: str = NotImplemented,
            dynamicData: map = NotImplemented,
            isPlaybackable: bool = NotImplemented): ...

    def getIsPlaybackable(self) -> bool: ...
    def setIsPlaybackable(self, newIsPlaybackable: bool) -> None: ...

class KalturaOTTUserListResponse(KalturaListResponse):
    objects: List[KalturaOTTUser]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaOTTUser] = NotImplemented): ...

    def getObjects(self) -> List[KalturaOTTUser]: ...
    def setObjects(self, newObjects: List[KalturaOTTUser]) -> None: ...

class KalturaPartner(KalturaObjectBase):
    id: int
    name: str
    createDate: int
    updateDate: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def setCreateDate(self, newCreateDate: int) -> None: ...
    def getUpdateDate(self) -> int: ...
    def setUpdateDate(self, newUpdateDate: int) -> None: ...

class KalturaPartnerListResponse(KalturaListResponse):
    objects: List[KalturaPartner]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPartner] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPartner]: ...
    def setObjects(self, newObjects: List[KalturaPartner]) -> None: ...

class KalturaPasswordPolicyListResponse(KalturaListResponse):
    objects: List[KalturaPasswordPolicy]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPasswordPolicy] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPasswordPolicy]: ...
    def setObjects(self, newObjects: List[KalturaPasswordPolicy]) -> None: ...

class KalturaSSOAdapterProfile(KalturaObjectBase):
    id: int
    name: str
    isActive: int
    adapterUrl: str
    settings: map
    externalIdentifier: str
    sharedSecret: str
    adapterGrpcAddress: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: int = NotImplemented,
            adapterUrl: str = NotImplemented,
            settings: map = NotImplemented,
            externalIdentifier: str = NotImplemented,
            sharedSecret: str = NotImplemented,
            adapterGrpcAddress: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsActive(self) -> int: ...
    def setIsActive(self, newIsActive: int) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getSettings(self) -> map: ...
    def setSettings(self, newSettings: map) -> None: ...
    def getExternalIdentifier(self) -> str: ...
    def setExternalIdentifier(self, newExternalIdentifier: str) -> None: ...
    def getSharedSecret(self) -> str: ...
    def setSharedSecret(self, newSharedSecret: str) -> None: ...
    def getAdapterGrpcAddress(self) -> str: ...
    def setAdapterGrpcAddress(self, newAdapterGrpcAddress: str) -> None: ...

class KalturaSSOAdapterProfileListResponse(KalturaListResponse):
    objects: List[KalturaSSOAdapterProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSSOAdapterProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSSOAdapterProfile]: ...
    def setObjects(self, newObjects: List[KalturaSSOAdapterProfile]) -> None: ...

class KalturaUserInterestTopic(KalturaObjectBase):
    metaId: str
    value: str
    parentTopic: KalturaUserInterestTopic
    def __init__(self,
            metaId: str = NotImplemented,
            value: str = NotImplemented,
            parentTopic: KalturaUserInterestTopic = NotImplemented): ...

    def getMetaId(self) -> str: ...
    def setMetaId(self, newMetaId: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...
    def getParentTopic(self) -> KalturaUserInterestTopic: ...
    def setParentTopic(self, newParentTopic: KalturaUserInterestTopic) -> None: ...

class KalturaUserInterest(KalturaObjectBase):
    id: str
    topic: KalturaUserInterestTopic
    def __init__(self,
            id: str = NotImplemented,
            topic: KalturaUserInterestTopic = NotImplemented): ...

    def getId(self) -> str: ...
    def getTopic(self) -> KalturaUserInterestTopic: ...
    def setTopic(self, newTopic: KalturaUserInterestTopic) -> None: ...

class KalturaUserInterestListResponse(KalturaListResponse):
    objects: List[KalturaUserInterest]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserInterest] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserInterest]: ...
    def setObjects(self, newObjects: List[KalturaUserInterest]) -> None: ...

class KalturaUserSessionProfileExpression(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaUserSessionProfile(KalturaObjectBase):
    id: int
    name: str
    expression: KalturaUserSessionProfileExpression
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            expression: KalturaUserSessionProfileExpression = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getExpression(self) -> KalturaUserSessionProfileExpression: ...
    def setExpression(self, newExpression: KalturaUserSessionProfileExpression) -> None: ...

class KalturaUserSessionProfileListResponse(KalturaListResponse):
    objects: List[KalturaUserSessionProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserSessionProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserSessionProfile]: ...
    def setObjects(self, newObjects: List[KalturaUserSessionProfile]) -> None: ...

class KalturaExpressionAnd(KalturaUserSessionProfileExpression):
    expressions: List[KalturaUserSessionProfileExpression]
    def __init__(self,
            expressions: List[KalturaUserSessionProfileExpression] = NotImplemented): ...

    def getExpressions(self) -> List[KalturaUserSessionProfileExpression]: ...
    def setExpressions(self, newExpressions: List[KalturaUserSessionProfileExpression]) -> None: ...

class KalturaExpressionNot(KalturaUserSessionProfileExpression):
    expression: KalturaUserSessionProfileExpression
    def __init__(self,
            expression: KalturaUserSessionProfileExpression = NotImplemented): ...

    def getExpression(self) -> KalturaUserSessionProfileExpression: ...
    def setExpression(self, newExpression: KalturaUserSessionProfileExpression) -> None: ...

class KalturaExpressionOr(KalturaUserSessionProfileExpression):
    expressions: List[KalturaUserSessionProfileExpression]
    def __init__(self,
            expressions: List[KalturaUserSessionProfileExpression] = NotImplemented): ...

    def getExpressions(self) -> List[KalturaUserSessionProfileExpression]: ...
    def setExpressions(self, newExpressions: List[KalturaUserSessionProfileExpression]) -> None: ...

class KalturaUserSessionCondition(KalturaUserSessionProfileExpression):
    condition: KalturaCondition
    def __init__(self,
            condition: KalturaCondition = NotImplemented): ...

    def getCondition(self) -> KalturaCondition: ...
    def setCondition(self, newCondition: KalturaCondition) -> None: ...

class KalturaMessage(KalturaObjectBase):
    code: int
    message: str
    args: map
    def __init__(self,
            code: int = NotImplemented,
            message: str = NotImplemented,
            args: map = NotImplemented): ...

    def getCode(self) -> int: ...
    def setCode(self, newCode: int) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getArgs(self) -> map: ...
    def setArgs(self, newArgs: map) -> None: ...

class KalturaBulkUploadResult(KalturaObjectBase):
    objectId: int
    index: int
    bulkUploadId: int
    status: KalturaBulkUploadResultStatus
    errors: List[KalturaMessage]
    warnings: List[KalturaMessage]
    def __init__(self,
            objectId: int = NotImplemented,
            index: int = NotImplemented,
            bulkUploadId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            errors: List[KalturaMessage] = NotImplemented,
            warnings: List[KalturaMessage] = NotImplemented): ...

    def getObjectId(self) -> int: ...
    def getIndex(self) -> int: ...
    def getBulkUploadId(self) -> int: ...
    def getStatus(self) -> KalturaBulkUploadResultStatus: ...
    def getErrors(self) -> List[KalturaMessage]: ...
    def getWarnings(self) -> List[KalturaMessage]: ...

class KalturaBulkUpload(KalturaObjectBase):
    id: int
    fileName: str
    status: KalturaBulkUploadJobStatus
    action: KalturaBulkUploadJobAction
    numOfObjects: int
    createDate: int
    updateDate: int
    uploadedByUserId: int
    results: List[KalturaBulkUploadResult]
    errors: List[KalturaMessage]
    def __init__(self,
            id: int = NotImplemented,
            fileName: str = NotImplemented,
            status: KalturaBulkUploadJobStatus = NotImplemented,
            action: KalturaBulkUploadJobAction = NotImplemented,
            numOfObjects: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            uploadedByUserId: int = NotImplemented,
            results: List[KalturaBulkUploadResult] = NotImplemented,
            errors: List[KalturaMessage] = NotImplemented): ...

    def getId(self) -> int: ...
    def getFileName(self) -> str: ...
    def getStatus(self) -> KalturaBulkUploadJobStatus: ...
    def getAction(self) -> KalturaBulkUploadJobAction: ...
    def getNumOfObjects(self) -> int: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getUploadedByUserId(self) -> int: ...
    def getResults(self) -> List[KalturaBulkUploadResult]: ...
    def getErrors(self) -> List[KalturaMessage]: ...

class KalturaBulkUploadListResponse(KalturaListResponse):
    objects: List[KalturaBulkUpload]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaBulkUpload] = NotImplemented): ...

    def getObjects(self) -> List[KalturaBulkUpload]: ...
    def setObjects(self, newObjects: List[KalturaBulkUpload]) -> None: ...

class KalturaBulkUploadAssetResult(KalturaBulkUploadResult):
    type: int
    externalId: str
    def __init__(self,
            objectId: int = NotImplemented,
            index: int = NotImplemented,
            bulkUploadId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            errors: List[KalturaMessage] = NotImplemented,
            warnings: List[KalturaMessage] = NotImplemented,
            type: int = NotImplemented,
            externalId: str = NotImplemented): ...

    def getType(self) -> int: ...
    def getExternalId(self) -> str: ...

class KalturaBulkUploadMediaAssetResult(KalturaBulkUploadAssetResult):
    def __init__(self,
            objectId: int = NotImplemented,
            index: int = NotImplemented,
            bulkUploadId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            errors: List[KalturaMessage] = NotImplemented,
            warnings: List[KalturaMessage] = NotImplemented,
            type: int = NotImplemented,
            externalId: str = NotImplemented): ...
        pass

class KalturaBulkUploadLiveAssetResult(KalturaBulkUploadMediaAssetResult):
    def __init__(self,
            objectId: int = NotImplemented,
            index: int = NotImplemented,
            bulkUploadId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            errors: List[KalturaMessage] = NotImplemented,
            warnings: List[KalturaMessage] = NotImplemented,
            type: int = NotImplemented,
            externalId: str = NotImplemented): ...
        pass

class KalturaBulkUploadDynamicListResult(KalturaBulkUploadResult):
    def __init__(self,
            objectId: int = NotImplemented,
            index: int = NotImplemented,
            bulkUploadId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            errors: List[KalturaMessage] = NotImplemented,
            warnings: List[KalturaMessage] = NotImplemented): ...
        pass

class KalturaBulkUploadUdidDynamicListResult(KalturaBulkUploadDynamicListResult):
    udid: str
    def __init__(self,
            objectId: int = NotImplemented,
            index: int = NotImplemented,
            bulkUploadId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            errors: List[KalturaMessage] = NotImplemented,
            warnings: List[KalturaMessage] = NotImplemented,
            udid: str = NotImplemented): ...

    def getUdid(self) -> str: ...

class KalturaBulkUploadProgramAssetResult(KalturaBulkUploadResult):
    programId: int
    programExternalId: str
    liveAssetId: int
    def __init__(self,
            objectId: int = NotImplemented,
            index: int = NotImplemented,
            bulkUploadId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            errors: List[KalturaMessage] = NotImplemented,
            warnings: List[KalturaMessage] = NotImplemented,
            programId: int = NotImplemented,
            programExternalId: str = NotImplemented,
            liveAssetId: int = NotImplemented): ...

    def getProgramId(self) -> int: ...
    def getProgramExternalId(self) -> str: ...
    def getLiveAssetId(self) -> int: ...

class KalturaSocialAction(KalturaObjectBase):
    id: str
    actionType: KalturaSocialActionType
    time: int
    assetId: int
    assetType: KalturaAssetType
    url: str
    def __init__(self,
            id: str = NotImplemented,
            actionType: KalturaSocialActionType = NotImplemented,
            time: int = NotImplemented,
            assetId: int = NotImplemented,
            assetType: KalturaAssetType = NotImplemented,
            url: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getActionType(self) -> KalturaSocialActionType: ...
    def setActionType(self, newActionType: KalturaSocialActionType) -> None: ...
    def getTime(self) -> int: ...
    def setTime(self, newTime: int) -> None: ...
    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...
    def getAssetType(self) -> KalturaAssetType: ...
    def setAssetType(self, newAssetType: KalturaAssetType) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...

class KalturaSocialActionListResponse(KalturaListResponse):
    objects: List[KalturaSocialAction]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSocialAction] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSocialAction]: ...
    def setObjects(self, newObjects: List[KalturaSocialAction]) -> None: ...

class KalturaSocialActionRate(KalturaSocialAction):
    rate: int
    def __init__(self,
            id: str = NotImplemented,
            actionType: KalturaSocialActionType = NotImplemented,
            time: int = NotImplemented,
            assetId: int = NotImplemented,
            assetType: KalturaAssetType = NotImplemented,
            url: str = NotImplemented,
            rate: int = NotImplemented): ...

    def getRate(self) -> int: ...
    def setRate(self, newRate: int) -> None: ...

class KalturaSocialComment(KalturaObjectBase):
    header: str
    text: str
    createDate: int
    writer: str
    def __init__(self,
            header: str = NotImplemented,
            text: str = NotImplemented,
            createDate: int = NotImplemented,
            writer: str = NotImplemented): ...

    def getHeader(self) -> str: ...
    def setHeader(self, newHeader: str) -> None: ...
    def getText(self) -> str: ...
    def setText(self, newText: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def setCreateDate(self, newCreateDate: int) -> None: ...
    def getWriter(self) -> str: ...
    def setWriter(self, newWriter: str) -> None: ...

class KalturaSocialCommentListResponse(KalturaListResponse):
    objects: List[KalturaSocialComment]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSocialComment] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSocialComment]: ...
    def setObjects(self, newObjects: List[KalturaSocialComment]) -> None: ...

class KalturaSocialNetworkComment(KalturaSocialComment):
    likeCounter: str
    authorImageUrl: str
    def __init__(self,
            header: str = NotImplemented,
            text: str = NotImplemented,
            createDate: int = NotImplemented,
            writer: str = NotImplemented,
            likeCounter: str = NotImplemented,
            authorImageUrl: str = NotImplemented): ...

    def getLikeCounter(self) -> str: ...
    def setLikeCounter(self, newLikeCounter: str) -> None: ...
    def getAuthorImageUrl(self) -> str: ...
    def setAuthorImageUrl(self, newAuthorImageUrl: str) -> None: ...

class KalturaFacebookPost(KalturaSocialNetworkComment):
    comments: List[KalturaSocialNetworkComment]
    link: str
    def __init__(self,
            header: str = NotImplemented,
            text: str = NotImplemented,
            createDate: int = NotImplemented,
            writer: str = NotImplemented,
            likeCounter: str = NotImplemented,
            authorImageUrl: str = NotImplemented,
            comments: List[KalturaSocialNetworkComment] = NotImplemented,
            link: str = NotImplemented): ...

    def getComments(self) -> List[KalturaSocialNetworkComment]: ...
    def setComments(self, newComments: List[KalturaSocialNetworkComment]) -> None: ...
    def getLink(self) -> str: ...
    def setLink(self, newLink: str) -> None: ...

class KalturaTwitterTwit(KalturaSocialNetworkComment):
    def __init__(self,
            header: str = NotImplemented,
            text: str = NotImplemented,
            createDate: int = NotImplemented,
            writer: str = NotImplemented,
            likeCounter: str = NotImplemented,
            authorImageUrl: str = NotImplemented): ...
        pass

class KalturaAssetComment(KalturaSocialComment):
    id: int
    assetId: int
    assetType: KalturaAssetType
    subHeader: str
    def __init__(self,
            header: str = NotImplemented,
            text: str = NotImplemented,
            createDate: int = NotImplemented,
            writer: str = NotImplemented,
            id: int = NotImplemented,
            assetId: int = NotImplemented,
            assetType: KalturaAssetType = NotImplemented,
            subHeader: str = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...
    def getAssetType(self) -> KalturaAssetType: ...
    def setAssetType(self, newAssetType: KalturaAssetType) -> None: ...
    def getSubHeader(self) -> str: ...
    def setSubHeader(self, newSubHeader: str) -> None: ...

class KalturaSocialFriendActivity(KalturaObjectBase):
    userFullName: str
    userPictureUrl: str
    socialAction: KalturaSocialAction
    def __init__(self,
            userFullName: str = NotImplemented,
            userPictureUrl: str = NotImplemented,
            socialAction: KalturaSocialAction = NotImplemented): ...

    def getUserFullName(self) -> str: ...
    def setUserFullName(self, newUserFullName: str) -> None: ...
    def getUserPictureUrl(self) -> str: ...
    def setUserPictureUrl(self, newUserPictureUrl: str) -> None: ...
    def getSocialAction(self) -> KalturaSocialAction: ...
    def setSocialAction(self, newSocialAction: KalturaSocialAction) -> None: ...

class KalturaSocialFriendActivityListResponse(KalturaListResponse):
    objects: List[KalturaSocialFriendActivity]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSocialFriendActivity] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSocialFriendActivity]: ...
    def setObjects(self, newObjects: List[KalturaSocialFriendActivity]) -> None: ...

class KalturaHouseholdSegmentListResponse(KalturaListResponse):
    objects: List[KalturaHouseholdSegment]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHouseholdSegment] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHouseholdSegment]: ...
    def setObjects(self, newObjects: List[KalturaHouseholdSegment]) -> None: ...

class KalturaBaseSegmentCondition(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBaseSegmentAction(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBaseSegmentValue(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaSegmentationType(KalturaObjectBase):
    id: int
    name: str
    description: str
    conditions: List[KalturaBaseSegmentCondition]
    conditionsOperator: KalturaBooleanOperator
    actions: List[KalturaBaseSegmentAction]
    value: KalturaBaseSegmentValue
    createDate: int
    updateDate: int
    executeDate: int
    version: int
    assetUserRuleId: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            conditions: List[KalturaBaseSegmentCondition] = NotImplemented,
            conditionsOperator: KalturaBooleanOperator = NotImplemented,
            actions: List[KalturaBaseSegmentAction] = NotImplemented,
            value: KalturaBaseSegmentValue = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            executeDate: int = NotImplemented,
            version: int = NotImplemented,
            assetUserRuleId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getConditions(self) -> List[KalturaBaseSegmentCondition]: ...
    def setConditions(self, newConditions: List[KalturaBaseSegmentCondition]) -> None: ...
    def getConditionsOperator(self) -> KalturaBooleanOperator: ...
    def setConditionsOperator(self, newConditionsOperator: KalturaBooleanOperator) -> None: ...
    def getActions(self) -> List[KalturaBaseSegmentAction]: ...
    def setActions(self, newActions: List[KalturaBaseSegmentAction]) -> None: ...
    def getValue(self) -> KalturaBaseSegmentValue: ...
    def setValue(self, newValue: KalturaBaseSegmentValue) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getExecuteDate(self) -> int: ...
    def getVersion(self) -> int: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...

class KalturaSegmentationTypeListResponse(KalturaListResponse):
    objects: List[KalturaSegmentationType]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSegmentationType] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSegmentationType]: ...
    def setObjects(self, newObjects: List[KalturaSegmentationType]) -> None: ...

class KalturaContentActionCondition(KalturaObjectBase):
    action: KalturaContentAction
    length: int
    lengthType: KalturaContentActionConditionLengthType
    multiplier: int
    def __init__(self,
            action: KalturaContentAction = NotImplemented,
            length: int = NotImplemented,
            lengthType: KalturaContentActionConditionLengthType = NotImplemented,
            multiplier: int = NotImplemented): ...

    def getAction(self) -> KalturaContentAction: ...
    def setAction(self, newAction: KalturaContentAction) -> None: ...
    def getLength(self) -> int: ...
    def setLength(self, newLength: int) -> None: ...
    def getLengthType(self) -> KalturaContentActionConditionLengthType: ...
    def setLengthType(self, newLengthType: KalturaContentActionConditionLengthType) -> None: ...
    def getMultiplier(self) -> int: ...
    def setMultiplier(self, newMultiplier: int) -> None: ...

class KalturaContentScoreCondition(KalturaBaseSegmentCondition):
    minScore: int
    maxScore: int
    days: int
    field: str
    values: List[KalturaStringValue]
    actions: List[KalturaContentActionCondition]
    def __init__(self,
            minScore: int = NotImplemented,
            maxScore: int = NotImplemented,
            days: int = NotImplemented,
            field: str = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            actions: List[KalturaContentActionCondition] = NotImplemented): ...

    def getMinScore(self) -> int: ...
    def setMinScore(self, newMinScore: int) -> None: ...
    def getMaxScore(self) -> int: ...
    def setMaxScore(self, newMaxScore: int) -> None: ...
    def getDays(self) -> int: ...
    def setDays(self, newDays: int) -> None: ...
    def getField(self) -> str: ...
    def setField(self, newField: str) -> None: ...
    def getValues(self) -> List[KalturaStringValue]: ...
    def setValues(self, newValues: List[KalturaStringValue]) -> None: ...
    def getActions(self) -> List[KalturaContentActionCondition]: ...
    def setActions(self, newActions: List[KalturaContentActionCondition]) -> None: ...

class KalturaMonetizationCondition(KalturaBaseSegmentCondition):
    days: int
    type: KalturaMonetizationType
    operator: KalturaMathemticalOperatorType
    businessModuleIdIn: str
    currencyCode: str
    minValue: int
    maxValue: int
    def __init__(self,
            days: int = NotImplemented,
            type: KalturaMonetizationType = NotImplemented,
            operator: KalturaMathemticalOperatorType = NotImplemented,
            businessModuleIdIn: str = NotImplemented,
            currencyCode: str = NotImplemented,
            minValue: int = NotImplemented,
            maxValue: int = NotImplemented): ...

    def getDays(self) -> int: ...
    def setDays(self, newDays: int) -> None: ...
    def getType(self) -> KalturaMonetizationType: ...
    def setType(self, newType: KalturaMonetizationType) -> None: ...
    def getOperator(self) -> KalturaMathemticalOperatorType: ...
    def setOperator(self, newOperator: KalturaMathemticalOperatorType) -> None: ...
    def getBusinessModuleIdIn(self) -> str: ...
    def setBusinessModuleIdIn(self, newBusinessModuleIdIn: str) -> None: ...
    def getCurrencyCode(self) -> str: ...
    def setCurrencyCode(self, newCurrencyCode: str) -> None: ...
    def getMinValue(self) -> int: ...
    def setMinValue(self, newMinValue: int) -> None: ...
    def getMaxValue(self) -> int: ...
    def setMaxValue(self, newMaxValue: int) -> None: ...

class KalturaUserDataCondition(KalturaBaseSegmentCondition):
    field: str
    value: str
    def __init__(self,
            field: str = NotImplemented,
            value: str = NotImplemented): ...

    def getField(self) -> str: ...
    def setField(self, newField: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaAssetOrderSegmentAction(KalturaBaseSegmentAction):
    name: str
    values: List[KalturaStringValue]
    def __init__(self,
            name: str = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getValues(self) -> List[KalturaStringValue]: ...
    def setValues(self, newValues: List[KalturaStringValue]) -> None: ...

class KalturaKsqlSegmentAction(KalturaBaseSegmentAction):
    ksql: str
    def __init__(self,
            ksql: str = NotImplemented): ...

    def getKsql(self) -> str: ...
    def setKsql(self, newKsql: str) -> None: ...

class KalturaBlockSubscriptionSegmentAction(KalturaKsqlSegmentAction):
    def __init__(self,
            ksql: str = NotImplemented): ...
        pass

class KalturaSegmentAssetFilterAction(KalturaKsqlSegmentAction):
    def __init__(self,
            ksql: str = NotImplemented): ...
        pass

class KalturaSegmentAssetFilterSegmentAction(KalturaSegmentAssetFilterAction):
    def __init__(self,
            ksql: str = NotImplemented): ...
        pass

class KalturaSegmentAssetFilterSubscriptionAction(KalturaSegmentAssetFilterAction):
    def __init__(self,
            ksql: str = NotImplemented): ...
        pass

class KalturaSegmentBlockCancelSubscriptionAction(KalturaBlockSubscriptionSegmentAction):
    def __init__(self,
            ksql: str = NotImplemented): ...
        pass

class KalturaSegmentBlockPlaybackSubscriptionAction(KalturaBlockSubscriptionSegmentAction):
    def __init__(self,
            ksql: str = NotImplemented): ...
        pass

class KalturaSegmentBlockPurchaseSubscriptionAction(KalturaBlockSubscriptionSegmentAction):
    def __init__(self,
            ksql: str = NotImplemented): ...
        pass

class KalturaSegmentSource(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaSegmentValue(KalturaObjectBase):
    id: int
    systematicName: str
    name: str
    value: str
    def __init__(self,
            id: int = NotImplemented,
            systematicName: str = NotImplemented,
            name: str = NotImplemented,
            value: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getSystematicName(self) -> str: ...
    def setSystematicName(self, newSystematicName: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaSegmentValues(KalturaBaseSegmentValue):
    source: KalturaSegmentSource
    values: List[KalturaSegmentValue]
    def __init__(self,
            source: KalturaSegmentSource = NotImplemented,
            values: List[KalturaSegmentValue] = NotImplemented): ...

    def getSource(self) -> KalturaSegmentSource: ...
    def setSource(self, newSource: KalturaSegmentSource) -> None: ...
    def getValues(self) -> List[KalturaSegmentValue]: ...
    def setValues(self, newValues: List[KalturaSegmentValue]) -> None: ...

class KalturaSegmentAllValues(KalturaSegmentValues):
    nameFormat: str
    def __init__(self,
            source: KalturaSegmentSource = NotImplemented,
            values: List[KalturaSegmentValue] = NotImplemented,
            nameFormat: str = NotImplemented): ...

    def getNameFormat(self) -> str: ...
    def setNameFormat(self, newNameFormat: str) -> None: ...

class KalturaContentSource(KalturaSegmentSource):
    field: str
    def __init__(self,
            field: str = NotImplemented): ...

    def getField(self) -> str: ...
    def setField(self, newField: str) -> None: ...

class KalturaMonetizationSource(KalturaSegmentSource):
    type: KalturaMonetizationType
    operator: KalturaMathemticalOperatorType
    days: int
    def __init__(self,
            type: KalturaMonetizationType = NotImplemented,
            operator: KalturaMathemticalOperatorType = NotImplemented,
            days: int = NotImplemented): ...

    def getType(self) -> KalturaMonetizationType: ...
    def setType(self, newType: KalturaMonetizationType) -> None: ...
    def getOperator(self) -> KalturaMathemticalOperatorType: ...
    def setOperator(self, newOperator: KalturaMathemticalOperatorType) -> None: ...
    def getDays(self) -> int: ...
    def setDays(self, newDays: int) -> None: ...

class KalturaUserDynamicDataSource(KalturaSegmentSource):
    field: str
    def __init__(self,
            field: str = NotImplemented): ...

    def getField(self) -> str: ...
    def setField(self, newField: str) -> None: ...

class KalturaSegmentRange(KalturaObjectBase):
    id: int
    systematicName: str
    name: str
    gte: float
    gt: float
    lte: float
    lt: float
    equals: float
    def __init__(self,
            id: int = NotImplemented,
            systematicName: str = NotImplemented,
            name: str = NotImplemented,
            gte: float = NotImplemented,
            gt: float = NotImplemented,
            lte: float = NotImplemented,
            lt: float = NotImplemented,
            equals: float = NotImplemented): ...

    def getId(self) -> int: ...
    def getSystematicName(self) -> str: ...
    def setSystematicName(self, newSystematicName: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getGte(self) -> float: ...
    def setGte(self, newGte: float) -> None: ...
    def getGt(self) -> float: ...
    def setGt(self, newGt: float) -> None: ...
    def getLte(self) -> float: ...
    def setLte(self, newLte: float) -> None: ...
    def getLt(self) -> float: ...
    def setLt(self, newLt: float) -> None: ...
    def getEquals(self) -> float: ...
    def setEquals(self, newEquals: float) -> None: ...

class KalturaSegmentRanges(KalturaBaseSegmentValue):
    source: KalturaSegmentSource
    ranges: List[KalturaSegmentRange]
    def __init__(self,
            source: KalturaSegmentSource = NotImplemented,
            ranges: List[KalturaSegmentRange] = NotImplemented): ...

    def getSource(self) -> KalturaSegmentSource: ...
    def setSource(self, newSource: KalturaSegmentSource) -> None: ...
    def getRanges(self) -> List[KalturaSegmentRange]: ...
    def setRanges(self, newRanges: List[KalturaSegmentRange]) -> None: ...

class KalturaSingleSegmentValue(KalturaBaseSegmentValue):
    id: int
    affectedUsers: int
    affectedHouseholds: int
    def __init__(self,
            id: int = NotImplemented,
            affectedUsers: int = NotImplemented,
            affectedHouseholds: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getAffectedUsers(self) -> int: ...
    def getAffectedHouseholds(self) -> int: ...

class KalturaUserSegment(KalturaObjectBase):
    segmentId: int
    userId: str
    def __init__(self,
            segmentId: int = NotImplemented,
            userId: str = NotImplemented): ...

    def getSegmentId(self) -> int: ...
    def setSegmentId(self, newSegmentId: int) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...

class KalturaUserSegmentListResponse(KalturaListResponse):
    objects: List[KalturaUserSegment]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserSegment] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserSegment]: ...
    def setObjects(self, newObjects: List[KalturaUserSegment]) -> None: ...

class KalturaWatchBasedRecommendationsProfile(KalturaObjectBase):
    id: int
    name: str
    topicIds: str
    analysisMediaTypeIds: str
    userInterestPlayThresholdInPercentages: int
    numberOfInterests: int
    fallbackChannelId: int
    minPlaybacks: int
    maxPlaybacks: int
    allowedRecommendationsKsql: str
    playbackInterestsCalculationPeriodDays: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            topicIds: str = NotImplemented,
            analysisMediaTypeIds: str = NotImplemented,
            userInterestPlayThresholdInPercentages: int = NotImplemented,
            numberOfInterests: int = NotImplemented,
            fallbackChannelId: int = NotImplemented,
            minPlaybacks: int = NotImplemented,
            maxPlaybacks: int = NotImplemented,
            allowedRecommendationsKsql: str = NotImplemented,
            playbackInterestsCalculationPeriodDays: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getTopicIds(self) -> str: ...
    def setTopicIds(self, newTopicIds: str) -> None: ...
    def getAnalysisMediaTypeIds(self) -> str: ...
    def setAnalysisMediaTypeIds(self, newAnalysisMediaTypeIds: str) -> None: ...
    def getUserInterestPlayThresholdInPercentages(self) -> int: ...
    def setUserInterestPlayThresholdInPercentages(self, newUserInterestPlayThresholdInPercentages: int) -> None: ...
    def getNumberOfInterests(self) -> int: ...
    def setNumberOfInterests(self, newNumberOfInterests: int) -> None: ...
    def getFallbackChannelId(self) -> int: ...
    def setFallbackChannelId(self, newFallbackChannelId: int) -> None: ...
    def getMinPlaybacks(self) -> int: ...
    def setMinPlaybacks(self, newMinPlaybacks: int) -> None: ...
    def getMaxPlaybacks(self) -> int: ...
    def setMaxPlaybacks(self, newMaxPlaybacks: int) -> None: ...
    def getAllowedRecommendationsKsql(self) -> str: ...
    def setAllowedRecommendationsKsql(self, newAllowedRecommendationsKsql: str) -> None: ...
    def getPlaybackInterestsCalculationPeriodDays(self) -> int: ...
    def setPlaybackInterestsCalculationPeriodDays(self, newPlaybackInterestsCalculationPeriodDays: int) -> None: ...

class KalturaWatchBasedRecommendationsProfileListResponse(KalturaListResponse):
    objects: List[KalturaWatchBasedRecommendationsProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaWatchBasedRecommendationsProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaWatchBasedRecommendationsProfile]: ...
    def setObjects(self, newObjects: List[KalturaWatchBasedRecommendationsProfile]) -> None: ...

class KalturaAssetFilePpvListResponse(KalturaListResponse):
    objects: List[KalturaAssetFilePpv]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetFilePpv] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetFilePpv]: ...
    def setObjects(self, newObjects: List[KalturaAssetFilePpv]) -> None: ...

class KalturaCollectionListResponse(KalturaListResponse):
    objects: List[KalturaCollection]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCollection] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCollection]: ...
    def setObjects(self, newObjects: List[KalturaCollection]) -> None: ...

class KalturaCoupon(KalturaObjectBase):
    couponsGroup: KalturaCouponsGroup
    status: KalturaCouponStatus
    totalUses: int
    leftUses: int
    couponCode: str
    def __init__(self,
            couponsGroup: KalturaCouponsGroup = NotImplemented,
            status: KalturaCouponStatus = NotImplemented,
            totalUses: int = NotImplemented,
            leftUses: int = NotImplemented,
            couponCode: str = NotImplemented): ...

    def getCouponsGroup(self) -> KalturaCouponsGroup: ...
    def getStatus(self) -> KalturaCouponStatus: ...
    def getTotalUses(self) -> int: ...
    def getLeftUses(self) -> int: ...
    def getCouponCode(self) -> str: ...

class KalturaCouponListResponse(KalturaListResponse):
    objects: List[KalturaCoupon]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCoupon] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCoupon]: ...
    def setObjects(self, newObjects: List[KalturaCoupon]) -> None: ...

class KalturaCouponsGroupListResponse(KalturaListResponse):
    objects: List[KalturaCouponsGroup]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCouponsGroup] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCouponsGroup]: ...
    def setObjects(self, newObjects: List[KalturaCouponsGroup]) -> None: ...

class KalturaDiscountDetails(KalturaObjectBase):
    id: int
    name: str
    multiCurrencyDiscount: List[KalturaDiscount]
    startDate: int
    endDate: int
    whenAlgoTimes: int
    whenAlgoType: int
    assetUserRuleId: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multiCurrencyDiscount: List[KalturaDiscount] = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            whenAlgoTimes: int = NotImplemented,
            whenAlgoType: int = NotImplemented,
            assetUserRuleId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getMultiCurrencyDiscount(self) -> List[KalturaDiscount]: ...
    def setMultiCurrencyDiscount(self, newMultiCurrencyDiscount: List[KalturaDiscount]) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getWhenAlgoTimes(self) -> int: ...
    def setWhenAlgoTimes(self, newWhenAlgoTimes: int) -> None: ...
    def getWhenAlgoType(self) -> int: ...
    def setWhenAlgoType(self, newWhenAlgoType: int) -> None: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...

class KalturaDiscountDetailsListResponse(KalturaListResponse):
    objects: List[KalturaDiscountDetails]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDiscountDetails] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDiscountDetails]: ...
    def setObjects(self, newObjects: List[KalturaDiscountDetails]) -> None: ...

class KalturaPromotionInfo(KalturaObjectBase):
    campaignId: int
    def __init__(self,
            campaignId: int = NotImplemented): ...

    def getCampaignId(self) -> int: ...
    def setCampaignId(self, newCampaignId: int) -> None: ...

class KalturaProductPrice(KalturaObjectBase):
    productId: str
    productType: KalturaTransactionType
    price: KalturaPrice
    fullPrice: KalturaPrice
    purchaseStatus: KalturaPurchaseStatus
    promotionInfo: KalturaPromotionInfo
    def __init__(self,
            productId: str = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            price: KalturaPrice = NotImplemented,
            fullPrice: KalturaPrice = NotImplemented,
            purchaseStatus: KalturaPurchaseStatus = NotImplemented,
            promotionInfo: KalturaPromotionInfo = NotImplemented): ...

    def getProductId(self) -> str: ...
    def setProductId(self, newProductId: str) -> None: ...
    def getProductType(self) -> KalturaTransactionType: ...
    def setProductType(self, newProductType: KalturaTransactionType) -> None: ...
    def getPrice(self) -> KalturaPrice: ...
    def setPrice(self, newPrice: KalturaPrice) -> None: ...
    def getFullPrice(self) -> KalturaPrice: ...
    def setFullPrice(self, newFullPrice: KalturaPrice) -> None: ...
    def getPurchaseStatus(self) -> KalturaPurchaseStatus: ...
    def setPurchaseStatus(self, newPurchaseStatus: KalturaPurchaseStatus) -> None: ...
    def getPromotionInfo(self) -> KalturaPromotionInfo: ...
    def setPromotionInfo(self, newPromotionInfo: KalturaPromotionInfo) -> None: ...

class KalturaCollectionPrice(KalturaProductPrice):
    def __init__(self,
            productId: str = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            price: KalturaPrice = NotImplemented,
            fullPrice: KalturaPrice = NotImplemented,
            purchaseStatus: KalturaPurchaseStatus = NotImplemented,
            promotionInfo: KalturaPromotionInfo = NotImplemented): ...
        pass

class KalturaPpvPrice(KalturaProductPrice):
    fileId: int
    ppvModuleId: str
    isSubscriptionOnly: bool
    subscriptionId: str
    collectionId: str
    prePaidId: str
    ppvDescriptions: List[KalturaTranslationToken]
    purchaseUserId: str
    purchasedMediaFileId: int
    relatedMediaFileIds: List[KalturaIntegerValue]
    startDate: int
    endDate: int
    discountEndDate: int
    firstDeviceName: str
    isInCancelationPeriod: bool
    ppvProductCode: str
    def __init__(self,
            productId: str = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            price: KalturaPrice = NotImplemented,
            fullPrice: KalturaPrice = NotImplemented,
            purchaseStatus: KalturaPurchaseStatus = NotImplemented,
            promotionInfo: KalturaPromotionInfo = NotImplemented,
            fileId: int = NotImplemented,
            ppvModuleId: str = NotImplemented,
            isSubscriptionOnly: bool = NotImplemented,
            subscriptionId: str = NotImplemented,
            collectionId: str = NotImplemented,
            prePaidId: str = NotImplemented,
            ppvDescriptions: List[KalturaTranslationToken] = NotImplemented,
            purchaseUserId: str = NotImplemented,
            purchasedMediaFileId: int = NotImplemented,
            relatedMediaFileIds: List[KalturaIntegerValue] = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            discountEndDate: int = NotImplemented,
            firstDeviceName: str = NotImplemented,
            isInCancelationPeriod: bool = NotImplemented,
            ppvProductCode: str = NotImplemented): ...

    def getFileId(self) -> int: ...
    def setFileId(self, newFileId: int) -> None: ...
    def getPpvModuleId(self) -> str: ...
    def setPpvModuleId(self, newPpvModuleId: str) -> None: ...
    def getIsSubscriptionOnly(self) -> bool: ...
    def setIsSubscriptionOnly(self, newIsSubscriptionOnly: bool) -> None: ...
    def getSubscriptionId(self) -> str: ...
    def setSubscriptionId(self, newSubscriptionId: str) -> None: ...
    def getCollectionId(self) -> str: ...
    def setCollectionId(self, newCollectionId: str) -> None: ...
    def getPrePaidId(self) -> str: ...
    def setPrePaidId(self, newPrePaidId: str) -> None: ...
    def getPpvDescriptions(self) -> List[KalturaTranslationToken]: ...
    def setPpvDescriptions(self, newPpvDescriptions: List[KalturaTranslationToken]) -> None: ...
    def getPurchaseUserId(self) -> str: ...
    def setPurchaseUserId(self, newPurchaseUserId: str) -> None: ...
    def getPurchasedMediaFileId(self) -> int: ...
    def setPurchasedMediaFileId(self, newPurchasedMediaFileId: int) -> None: ...
    def getRelatedMediaFileIds(self) -> List[KalturaIntegerValue]: ...
    def setRelatedMediaFileIds(self, newRelatedMediaFileIds: List[KalturaIntegerValue]) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getDiscountEndDate(self) -> int: ...
    def setDiscountEndDate(self, newDiscountEndDate: int) -> None: ...
    def getFirstDeviceName(self) -> str: ...
    def setFirstDeviceName(self, newFirstDeviceName: str) -> None: ...
    def getIsInCancelationPeriod(self) -> bool: ...
    def setIsInCancelationPeriod(self, newIsInCancelationPeriod: bool) -> None: ...
    def getPpvProductCode(self) -> str: ...
    def setPpvProductCode(self, newPpvProductCode: str) -> None: ...

class KalturaProgramAssetGroupOfferPrice(KalturaProductPrice):
    def __init__(self,
            productId: str = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            price: KalturaPrice = NotImplemented,
            fullPrice: KalturaPrice = NotImplemented,
            purchaseStatus: KalturaPurchaseStatus = NotImplemented,
            promotionInfo: KalturaPromotionInfo = NotImplemented): ...
        pass

class KalturaSubscriptionPrice(KalturaProductPrice):
    endDate: int
    def __init__(self,
            productId: str = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            price: KalturaPrice = NotImplemented,
            fullPrice: KalturaPrice = NotImplemented,
            purchaseStatus: KalturaPurchaseStatus = NotImplemented,
            promotionInfo: KalturaPromotionInfo = NotImplemented,
            endDate: int = NotImplemented): ...

    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...

class KalturaPpv(KalturaObjectBase):
    id: str
    name: str
    price: KalturaPriceDetails
    priceDetailsId: int
    fileTypes: List[KalturaIntegerValue]
    fileTypesIds: str
    discountModule: KalturaDiscountModule
    discountId: int
    couponsGroup: KalturaCouponsGroup
    couponsGroupId: int
    descriptions: List[KalturaTranslationToken]
    productCode: str
    isSubscriptionOnly: bool
    firstDeviceLimitation: bool
    usageModule: KalturaUsageModule
    usageModuleId: int
    adsPolicy: KalturaAdsPolicy
    isActive: bool
    updateDate: int
    createDate: int
    virtualAssetId: int
    assetUserRuleId: int
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            price: KalturaPriceDetails = NotImplemented,
            priceDetailsId: int = NotImplemented,
            fileTypes: List[KalturaIntegerValue] = NotImplemented,
            fileTypesIds: str = NotImplemented,
            discountModule: KalturaDiscountModule = NotImplemented,
            discountId: int = NotImplemented,
            couponsGroup: KalturaCouponsGroup = NotImplemented,
            couponsGroupId: int = NotImplemented,
            descriptions: List[KalturaTranslationToken] = NotImplemented,
            productCode: str = NotImplemented,
            isSubscriptionOnly: bool = NotImplemented,
            firstDeviceLimitation: bool = NotImplemented,
            usageModule: KalturaUsageModule = NotImplemented,
            usageModuleId: int = NotImplemented,
            adsPolicy: KalturaAdsPolicy = NotImplemented,
            isActive: bool = NotImplemented,
            updateDate: int = NotImplemented,
            createDate: int = NotImplemented,
            virtualAssetId: int = NotImplemented,
            assetUserRuleId: int = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getPrice(self) -> KalturaPriceDetails: ...
    def getPriceDetailsId(self) -> int: ...
    def setPriceDetailsId(self, newPriceDetailsId: int) -> None: ...
    def getFileTypes(self) -> List[KalturaIntegerValue]: ...
    def getFileTypesIds(self) -> str: ...
    def setFileTypesIds(self, newFileTypesIds: str) -> None: ...
    def getDiscountModule(self) -> KalturaDiscountModule: ...
    def getDiscountId(self) -> int: ...
    def setDiscountId(self, newDiscountId: int) -> None: ...
    def getCouponsGroup(self) -> KalturaCouponsGroup: ...
    def getCouponsGroupId(self) -> int: ...
    def setCouponsGroupId(self, newCouponsGroupId: int) -> None: ...
    def getDescriptions(self) -> List[KalturaTranslationToken]: ...
    def setDescriptions(self, newDescriptions: List[KalturaTranslationToken]) -> None: ...
    def getProductCode(self) -> str: ...
    def setProductCode(self, newProductCode: str) -> None: ...
    def getIsSubscriptionOnly(self) -> bool: ...
    def setIsSubscriptionOnly(self, newIsSubscriptionOnly: bool) -> None: ...
    def getFirstDeviceLimitation(self) -> bool: ...
    def setFirstDeviceLimitation(self, newFirstDeviceLimitation: bool) -> None: ...
    def getUsageModule(self) -> KalturaUsageModule: ...
    def getUsageModuleId(self) -> int: ...
    def setUsageModuleId(self, newUsageModuleId: int) -> None: ...
    def getAdsPolicy(self) -> KalturaAdsPolicy: ...
    def setAdsPolicy(self, newAdsPolicy: KalturaAdsPolicy) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getUpdateDate(self) -> int: ...
    def getCreateDate(self) -> int: ...
    def getVirtualAssetId(self) -> int: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...

class KalturaPpvListResponse(KalturaListResponse):
    objects: List[KalturaPpv]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPpv] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPpv]: ...
    def setObjects(self, newObjects: List[KalturaPpv]) -> None: ...

class KalturaPreviewModuleListResponse(KalturaListResponse):
    objects: List[KalturaPreviewModule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPreviewModule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPreviewModule]: ...
    def setObjects(self, newObjects: List[KalturaPreviewModule]) -> None: ...

class KalturaPriceDetailsListResponse(KalturaListResponse):
    objects: List[KalturaPriceDetails]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPriceDetails] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPriceDetails]: ...
    def setObjects(self, newObjects: List[KalturaPriceDetails]) -> None: ...

class KalturaPricePlanListResponse(KalturaListResponse):
    objects: List[KalturaPricePlan]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPricePlan] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPricePlan]: ...
    def setObjects(self, newObjects: List[KalturaPricePlan]) -> None: ...

class KalturaProductPriceListResponse(KalturaListResponse):
    objects: List[KalturaProductPrice]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaProductPrice] = NotImplemented): ...

    def getObjects(self) -> List[KalturaProductPrice]: ...
    def setObjects(self, newObjects: List[KalturaProductPrice]) -> None: ...

class KalturaProductsPriceListResponse(KalturaListResponse):
    objects: List[KalturaProductPrice]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaProductPrice] = NotImplemented): ...

    def getObjects(self) -> List[KalturaProductPrice]: ...
    def setObjects(self, newObjects: List[KalturaProductPrice]) -> None: ...

class KalturaProgramAssetGroupOfferListResponse(KalturaListResponse):
    objects: List[KalturaProgramAssetGroupOffer]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaProgramAssetGroupOffer] = NotImplemented): ...

    def getObjects(self) -> List[KalturaProgramAssetGroupOffer]: ...
    def setObjects(self, newObjects: List[KalturaProgramAssetGroupOffer]) -> None: ...

class KalturaSubscriptionListResponse(KalturaListResponse):
    objects: List[KalturaSubscription]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSubscription] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSubscription]: ...
    def setObjects(self, newObjects: List[KalturaSubscription]) -> None: ...

class KalturaSubscriptionSet(KalturaObjectBase):
    id: int
    name: str
    type: KalturaSubscriptionSetType
    subscriptionIds: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaSubscriptionSetType = NotImplemented,
            subscriptionIds: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getType(self) -> KalturaSubscriptionSetType: ...
    def getSubscriptionIds(self) -> str: ...
    def setSubscriptionIds(self, newSubscriptionIds: str) -> None: ...

class KalturaSubscriptionSetListResponse(KalturaListResponse):
    objects: List[KalturaSubscriptionSet]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSubscriptionSet] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSubscriptionSet]: ...
    def setObjects(self, newObjects: List[KalturaSubscriptionSet]) -> None: ...

class KalturaSubscriptionDependencySet(KalturaSubscriptionSet):
    baseSubscriptionId: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaSubscriptionSetType = NotImplemented,
            subscriptionIds: str = NotImplemented,
            baseSubscriptionId: int = NotImplemented): ...

    def getBaseSubscriptionId(self) -> int: ...
    def setBaseSubscriptionId(self, newBaseSubscriptionId: int) -> None: ...

class KalturaSubscriptionSwitchSet(KalturaSubscriptionSet):
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaSubscriptionSetType = NotImplemented,
            subscriptionIds: str = NotImplemented): ...
        pass

class KalturaUsageModuleListResponse(KalturaListResponse):
    objects: List[KalturaUsageModule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUsageModule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUsageModule]: ...
    def setObjects(self, newObjects: List[KalturaUsageModule]) -> None: ...

class KalturaPartnerConfiguration(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaPartnerConfigurationListResponse(KalturaListResponse):
    objects: List[KalturaPartnerConfiguration]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPartnerConfiguration] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPartnerConfiguration]: ...
    def setObjects(self, newObjects: List[KalturaPartnerConfiguration]) -> None: ...

class KalturaBasePartnerConfiguration(KalturaPartnerConfiguration):
    ksExpirationSeconds: int
    appTokenSessionMaxDurationSeconds: int
    anonymousKSExpirationSeconds: int
    refreshExpirationForPinLoginSeconds: int
    appTokenMaxExpirySeconds: int
    autoRefreshAppToken: bool
    uploadTokenExpirySeconds: int
    apptokenUserValidationDisabled: bool
    epgFeatureVersion: int
    def __init__(self,
            ksExpirationSeconds: int = NotImplemented,
            appTokenSessionMaxDurationSeconds: int = NotImplemented,
            anonymousKSExpirationSeconds: int = NotImplemented,
            refreshExpirationForPinLoginSeconds: int = NotImplemented,
            appTokenMaxExpirySeconds: int = NotImplemented,
            autoRefreshAppToken: bool = NotImplemented,
            uploadTokenExpirySeconds: int = NotImplemented,
            apptokenUserValidationDisabled: bool = NotImplemented,
            epgFeatureVersion: int = NotImplemented): ...

    def getKsExpirationSeconds(self) -> int: ...
    def setKsExpirationSeconds(self, newKsExpirationSeconds: int) -> None: ...
    def getAppTokenSessionMaxDurationSeconds(self) -> int: ...
    def setAppTokenSessionMaxDurationSeconds(self, newAppTokenSessionMaxDurationSeconds: int) -> None: ...
    def getAnonymousKSExpirationSeconds(self) -> int: ...
    def setAnonymousKSExpirationSeconds(self, newAnonymousKSExpirationSeconds: int) -> None: ...
    def getRefreshExpirationForPinLoginSeconds(self) -> int: ...
    def setRefreshExpirationForPinLoginSeconds(self, newRefreshExpirationForPinLoginSeconds: int) -> None: ...
    def getAppTokenMaxExpirySeconds(self) -> int: ...
    def setAppTokenMaxExpirySeconds(self, newAppTokenMaxExpirySeconds: int) -> None: ...
    def getAutoRefreshAppToken(self) -> bool: ...
    def setAutoRefreshAppToken(self, newAutoRefreshAppToken: bool) -> None: ...
    def getUploadTokenExpirySeconds(self) -> int: ...
    def setUploadTokenExpirySeconds(self, newUploadTokenExpirySeconds: int) -> None: ...
    def getApptokenUserValidationDisabled(self) -> bool: ...
    def setApptokenUserValidationDisabled(self, newApptokenUserValidationDisabled: bool) -> None: ...
    def getEpgFeatureVersion(self) -> int: ...
    def setEpgFeatureVersion(self, newEpgFeatureVersion: int) -> None: ...

class KalturaBillingPartnerConfig(KalturaPartnerConfiguration):
    value: str
    type: KalturaPartnerConfigurationType
    def __init__(self,
            value: str = NotImplemented,
            type: KalturaPartnerConfigurationType = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...
    def getType(self) -> KalturaPartnerConfigurationType: ...
    def setType(self, newType: KalturaPartnerConfigurationType) -> None: ...

class KalturaCategoryManagement(KalturaObjectBase):
    defaultTreeId: int
    deviceFamilyToCategoryTree: map
    def __init__(self,
            defaultTreeId: int = NotImplemented,
            deviceFamilyToCategoryTree: map = NotImplemented): ...

    def getDefaultTreeId(self) -> int: ...
    def setDefaultTreeId(self, newDefaultTreeId: int) -> None: ...
    def getDeviceFamilyToCategoryTree(self) -> map: ...
    def setDeviceFamilyToCategoryTree(self, newDeviceFamilyToCategoryTree: map) -> None: ...

class KalturaCatalogPartnerConfig(KalturaPartnerConfiguration):
    singleMultilingualMode: bool
    categoryManagement: KalturaCategoryManagement
    epgMultilingualFallbackSupport: bool
    uploadExportDatalake: bool
    shopMarkerMetaId: int
    def __init__(self,
            singleMultilingualMode: bool = NotImplemented,
            categoryManagement: KalturaCategoryManagement = NotImplemented,
            epgMultilingualFallbackSupport: bool = NotImplemented,
            uploadExportDatalake: bool = NotImplemented,
            shopMarkerMetaId: int = NotImplemented): ...

    def getSingleMultilingualMode(self) -> bool: ...
    def setSingleMultilingualMode(self, newSingleMultilingualMode: bool) -> None: ...
    def getCategoryManagement(self) -> KalturaCategoryManagement: ...
    def setCategoryManagement(self, newCategoryManagement: KalturaCategoryManagement) -> None: ...
    def getEpgMultilingualFallbackSupport(self) -> bool: ...
    def setEpgMultilingualFallbackSupport(self, newEpgMultilingualFallbackSupport: bool) -> None: ...
    def getUploadExportDatalake(self) -> bool: ...
    def setUploadExportDatalake(self, newUploadExportDatalake: bool) -> None: ...
    def getShopMarkerMetaId(self) -> int: ...
    def setShopMarkerMetaId(self, newShopMarkerMetaId: int) -> None: ...

class KalturaCloudUploadSettingsConfiguration(KalturaPartnerConfiguration):
    defaultAllowedFileExtensions: str
    customAllowedFileExtensions: str
    def __init__(self,
            defaultAllowedFileExtensions: str = NotImplemented,
            customAllowedFileExtensions: str = NotImplemented): ...

    def getDefaultAllowedFileExtensions(self) -> str: ...
    def getCustomAllowedFileExtensions(self) -> str: ...
    def setCustomAllowedFileExtensions(self, newCustomAllowedFileExtensions: str) -> None: ...

class KalturaBookmarkEventThreshold(KalturaObjectBase):
    transactionType: KalturaTransactionType
    threshold: int
    def __init__(self,
            transactionType: KalturaTransactionType = NotImplemented,
            threshold: int = NotImplemented): ...

    def getTransactionType(self) -> KalturaTransactionType: ...
    def setTransactionType(self, newTransactionType: KalturaTransactionType) -> None: ...
    def getThreshold(self) -> int: ...
    def setThreshold(self, newThreshold: int) -> None: ...

class KalturaCommercePartnerConfig(KalturaPartnerConfiguration):
    bookmarkEventThresholds: List[KalturaBookmarkEventThreshold]
    keepSubscriptionAddOns: bool
    programAssetEntitlementPaddingStart: int
    programAssetEntitlementPaddingEnd: int
    def __init__(self,
            bookmarkEventThresholds: List[KalturaBookmarkEventThreshold] = NotImplemented,
            keepSubscriptionAddOns: bool = NotImplemented,
            programAssetEntitlementPaddingStart: int = NotImplemented,
            programAssetEntitlementPaddingEnd: int = NotImplemented): ...

    def getBookmarkEventThresholds(self) -> List[KalturaBookmarkEventThreshold]: ...
    def setBookmarkEventThresholds(self, newBookmarkEventThresholds: List[KalturaBookmarkEventThreshold]) -> None: ...
    def getKeepSubscriptionAddOns(self) -> bool: ...
    def setKeepSubscriptionAddOns(self, newKeepSubscriptionAddOns: bool) -> None: ...
    def getProgramAssetEntitlementPaddingStart(self) -> int: ...
    def setProgramAssetEntitlementPaddingStart(self, newProgramAssetEntitlementPaddingStart: int) -> None: ...
    def getProgramAssetEntitlementPaddingEnd(self) -> int: ...
    def setProgramAssetEntitlementPaddingEnd(self, newProgramAssetEntitlementPaddingEnd: int) -> None: ...

class KalturaConcurrencyPartnerConfig(KalturaPartnerConfiguration):
    deviceFamilyIds: str
    evictionPolicy: KalturaEvictionPolicyType
    concurrencyThresholdInSeconds: int
    revokeOnDeviceDelete: bool
    excludeFreeContentFromConcurrency: bool
    def __init__(self,
            deviceFamilyIds: str = NotImplemented,
            evictionPolicy: KalturaEvictionPolicyType = NotImplemented,
            concurrencyThresholdInSeconds: int = NotImplemented,
            revokeOnDeviceDelete: bool = NotImplemented,
            excludeFreeContentFromConcurrency: bool = NotImplemented): ...

    def getDeviceFamilyIds(self) -> str: ...
    def setDeviceFamilyIds(self, newDeviceFamilyIds: str) -> None: ...
    def getEvictionPolicy(self) -> KalturaEvictionPolicyType: ...
    def setEvictionPolicy(self, newEvictionPolicy: KalturaEvictionPolicyType) -> None: ...
    def getConcurrencyThresholdInSeconds(self) -> int: ...
    def setConcurrencyThresholdInSeconds(self, newConcurrencyThresholdInSeconds: int) -> None: ...
    def getRevokeOnDeviceDelete(self) -> bool: ...
    def setRevokeOnDeviceDelete(self, newRevokeOnDeviceDelete: bool) -> None: ...
    def getExcludeFreeContentFromConcurrency(self) -> bool: ...
    def setExcludeFreeContentFromConcurrency(self, newExcludeFreeContentFromConcurrency: bool) -> None: ...

class KalturaCustomFieldsPartnerConfiguration(KalturaPartnerConfiguration):
    metaSystemNameInsteadOfAliasList: str
    def __init__(self,
            metaSystemNameInsteadOfAliasList: str = NotImplemented): ...

    def getMetaSystemNameInsteadOfAliasList(self) -> str: ...
    def setMetaSystemNameInsteadOfAliasList(self, newMetaSystemNameInsteadOfAliasList: str) -> None: ...

class KalturaDefaultParentalSettingsPartnerConfig(KalturaPartnerConfiguration):
    defaultMoviesParentalRuleId: int
    defaultTvSeriesParentalRuleId: int
    defaultParentalPin: str
    defaultPurchasePin: str
    defaultPurchaseSettings: int
    def __init__(self,
            defaultMoviesParentalRuleId: int = NotImplemented,
            defaultTvSeriesParentalRuleId: int = NotImplemented,
            defaultParentalPin: str = NotImplemented,
            defaultPurchasePin: str = NotImplemented,
            defaultPurchaseSettings: int = NotImplemented): ...

    def getDefaultMoviesParentalRuleId(self) -> int: ...
    def setDefaultMoviesParentalRuleId(self, newDefaultMoviesParentalRuleId: int) -> None: ...
    def getDefaultTvSeriesParentalRuleId(self) -> int: ...
    def setDefaultTvSeriesParentalRuleId(self, newDefaultTvSeriesParentalRuleId: int) -> None: ...
    def getDefaultParentalPin(self) -> str: ...
    def setDefaultParentalPin(self, newDefaultParentalPin: str) -> None: ...
    def getDefaultPurchasePin(self) -> str: ...
    def setDefaultPurchasePin(self, newDefaultPurchasePin: str) -> None: ...
    def getDefaultPurchaseSettings(self) -> int: ...
    def setDefaultPurchaseSettings(self, newDefaultPurchaseSettings: int) -> None: ...

class KalturaRollingDeviceRemovalData(KalturaObjectBase):
    rollingDeviceRemovalPolicy: KalturaRollingDevicePolicy
    rollingDeviceRemovalFamilyIds: str
    def __init__(self,
            rollingDeviceRemovalPolicy: KalturaRollingDevicePolicy = NotImplemented,
            rollingDeviceRemovalFamilyIds: str = NotImplemented): ...

    def getRollingDeviceRemovalPolicy(self) -> KalturaRollingDevicePolicy: ...
    def setRollingDeviceRemovalPolicy(self, newRollingDeviceRemovalPolicy: KalturaRollingDevicePolicy) -> None: ...
    def getRollingDeviceRemovalFamilyIds(self) -> str: ...
    def setRollingDeviceRemovalFamilyIds(self, newRollingDeviceRemovalFamilyIds: str) -> None: ...

class KalturaGeneralPartnerConfig(KalturaPartnerConfiguration):
    partnerName: str
    mainLanguage: int
    secondaryLanguages: str
    deleteMediaPolicy: KalturaDeleteMediaPolicy
    mainCurrency: int
    secondaryCurrencies: str
    downgradePolicy: KalturaDowngradePolicy
    downgradePriorityFamilyIds: str
    mailSettings: str
    dateFormat: str
    householdLimitationModule: int
    enableRegionFiltering: bool
    defaultRegion: int
    rollingDeviceData: KalturaRollingDeviceRemovalData
    linearWatchHistoryThreshold: int
    finishedPercentThreshold: int
    suspensionProfileInheritanceType: KalturaSuspensionProfileInheritanceType
    allowDeviceMobility: bool
    enableMultiLcns: bool
    def __init__(self,
            partnerName: str = NotImplemented,
            mainLanguage: int = NotImplemented,
            secondaryLanguages: str = NotImplemented,
            deleteMediaPolicy: KalturaDeleteMediaPolicy = NotImplemented,
            mainCurrency: int = NotImplemented,
            secondaryCurrencies: str = NotImplemented,
            downgradePolicy: KalturaDowngradePolicy = NotImplemented,
            downgradePriorityFamilyIds: str = NotImplemented,
            mailSettings: str = NotImplemented,
            dateFormat: str = NotImplemented,
            householdLimitationModule: int = NotImplemented,
            enableRegionFiltering: bool = NotImplemented,
            defaultRegion: int = NotImplemented,
            rollingDeviceData: KalturaRollingDeviceRemovalData = NotImplemented,
            linearWatchHistoryThreshold: int = NotImplemented,
            finishedPercentThreshold: int = NotImplemented,
            suspensionProfileInheritanceType: KalturaSuspensionProfileInheritanceType = NotImplemented,
            allowDeviceMobility: bool = NotImplemented,
            enableMultiLcns: bool = NotImplemented): ...

    def getPartnerName(self) -> str: ...
    def setPartnerName(self, newPartnerName: str) -> None: ...
    def getMainLanguage(self) -> int: ...
    def setMainLanguage(self, newMainLanguage: int) -> None: ...
    def getSecondaryLanguages(self) -> str: ...
    def setSecondaryLanguages(self, newSecondaryLanguages: str) -> None: ...
    def getDeleteMediaPolicy(self) -> KalturaDeleteMediaPolicy: ...
    def setDeleteMediaPolicy(self, newDeleteMediaPolicy: KalturaDeleteMediaPolicy) -> None: ...
    def getMainCurrency(self) -> int: ...
    def setMainCurrency(self, newMainCurrency: int) -> None: ...
    def getSecondaryCurrencies(self) -> str: ...
    def setSecondaryCurrencies(self, newSecondaryCurrencies: str) -> None: ...
    def getDowngradePolicy(self) -> KalturaDowngradePolicy: ...
    def setDowngradePolicy(self, newDowngradePolicy: KalturaDowngradePolicy) -> None: ...
    def getDowngradePriorityFamilyIds(self) -> str: ...
    def setDowngradePriorityFamilyIds(self, newDowngradePriorityFamilyIds: str) -> None: ...
    def getMailSettings(self) -> str: ...
    def setMailSettings(self, newMailSettings: str) -> None: ...
    def getDateFormat(self) -> str: ...
    def setDateFormat(self, newDateFormat: str) -> None: ...
    def getHouseholdLimitationModule(self) -> int: ...
    def setHouseholdLimitationModule(self, newHouseholdLimitationModule: int) -> None: ...
    def getEnableRegionFiltering(self) -> bool: ...
    def setEnableRegionFiltering(self, newEnableRegionFiltering: bool) -> None: ...
    def getDefaultRegion(self) -> int: ...
    def setDefaultRegion(self, newDefaultRegion: int) -> None: ...
    def getRollingDeviceData(self) -> KalturaRollingDeviceRemovalData: ...
    def setRollingDeviceData(self, newRollingDeviceData: KalturaRollingDeviceRemovalData) -> None: ...
    def getLinearWatchHistoryThreshold(self) -> int: ...
    def setLinearWatchHistoryThreshold(self, newLinearWatchHistoryThreshold: int) -> None: ...
    def getFinishedPercentThreshold(self) -> int: ...
    def setFinishedPercentThreshold(self, newFinishedPercentThreshold: int) -> None: ...
    def getSuspensionProfileInheritanceType(self) -> KalturaSuspensionProfileInheritanceType: ...
    def setSuspensionProfileInheritanceType(self, newSuspensionProfileInheritanceType: KalturaSuspensionProfileInheritanceType) -> None: ...
    def getAllowDeviceMobility(self) -> bool: ...
    def setAllowDeviceMobility(self, newAllowDeviceMobility: bool) -> None: ...
    def getEnableMultiLcns(self) -> bool: ...
    def setEnableMultiLcns(self, newEnableMultiLcns: bool) -> None: ...

class KalturaObjectVirtualAssetInfo(KalturaObjectBase):
    assetStructId: int
    metaId: int
    type: KalturaObjectVirtualAssetInfoType
    extendedTypes: map
    def __init__(self,
            assetStructId: int = NotImplemented,
            metaId: int = NotImplemented,
            type: KalturaObjectVirtualAssetInfoType = NotImplemented,
            extendedTypes: map = NotImplemented): ...

    def getAssetStructId(self) -> int: ...
    def setAssetStructId(self, newAssetStructId: int) -> None: ...
    def getMetaId(self) -> int: ...
    def setMetaId(self, newMetaId: int) -> None: ...
    def getType(self) -> KalturaObjectVirtualAssetInfoType: ...
    def setType(self, newType: KalturaObjectVirtualAssetInfoType) -> None: ...
    def getExtendedTypes(self) -> map: ...
    def setExtendedTypes(self, newExtendedTypes: map) -> None: ...

class KalturaObjectVirtualAssetPartnerConfig(KalturaPartnerConfiguration):
    objectVirtualAssets: List[KalturaObjectVirtualAssetInfo]
    def __init__(self,
            objectVirtualAssets: List[KalturaObjectVirtualAssetInfo] = NotImplemented): ...

    def getObjectVirtualAssets(self) -> List[KalturaObjectVirtualAssetInfo]: ...
    def setObjectVirtualAssets(self, newObjectVirtualAssets: List[KalturaObjectVirtualAssetInfo]) -> None: ...

class KalturaResetPasswordPartnerConfigTemplate(KalturaObjectBase):
    id: str
    label: str
    isDefault: bool
    def __init__(self,
            id: str = NotImplemented,
            label: str = NotImplemented,
            isDefault: bool = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getLabel(self) -> str: ...
    def setLabel(self, newLabel: str) -> None: ...
    def getIsDefault(self) -> bool: ...
    def setIsDefault(self, newIsDefault: bool) -> None: ...

class KalturaResetPasswordPartnerConfig(KalturaObjectBase):
    templateListLabel: str
    templates: List[KalturaResetPasswordPartnerConfigTemplate]
    def __init__(self,
            templateListLabel: str = NotImplemented,
            templates: List[KalturaResetPasswordPartnerConfigTemplate] = NotImplemented): ...

    def getTemplateListLabel(self) -> str: ...
    def setTemplateListLabel(self, newTemplateListLabel: str) -> None: ...
    def getTemplates(self) -> List[KalturaResetPasswordPartnerConfigTemplate]: ...
    def setTemplates(self, newTemplates: List[KalturaResetPasswordPartnerConfigTemplate]) -> None: ...

class KalturaOpcPartnerConfiguration(KalturaPartnerConfiguration):
    resetPassword: KalturaResetPasswordPartnerConfig
    def __init__(self,
            resetPassword: KalturaResetPasswordPartnerConfig = NotImplemented): ...

    def getResetPassword(self) -> KalturaResetPasswordPartnerConfig: ...
    def setResetPassword(self, newResetPassword: KalturaResetPasswordPartnerConfig) -> None: ...

class KalturaDuration(KalturaObjectBase):
    unit: KalturaDurationUnit
    value: int
    code: int
    def __init__(self,
            unit: KalturaDurationUnit = NotImplemented,
            value: int = NotImplemented,
            code: int = NotImplemented): ...

    def getUnit(self) -> KalturaDurationUnit: ...
    def setUnit(self, newUnit: KalturaDurationUnit) -> None: ...
    def getValue(self) -> int: ...
    def setValue(self, newValue: int) -> None: ...
    def getCode(self) -> int: ...

class KalturaUnifiedBillingCycle(KalturaObjectBase):
    name: str
    duration: KalturaDuration
    paymentGatewayId: int
    ignorePartialBilling: bool
    def __init__(self,
            name: str = NotImplemented,
            duration: KalturaDuration = NotImplemented,
            paymentGatewayId: int = NotImplemented,
            ignorePartialBilling: bool = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDuration(self) -> KalturaDuration: ...
    def setDuration(self, newDuration: KalturaDuration) -> None: ...
    def getPaymentGatewayId(self) -> int: ...
    def setPaymentGatewayId(self, newPaymentGatewayId: int) -> None: ...
    def getIgnorePartialBilling(self) -> bool: ...
    def setIgnorePartialBilling(self, newIgnorePartialBilling: bool) -> None: ...

class KalturaPaymentPartnerConfig(KalturaPartnerConfiguration):
    unifiedBillingCycles: List[KalturaUnifiedBillingCycle]
    def __init__(self,
            unifiedBillingCycles: List[KalturaUnifiedBillingCycle] = NotImplemented): ...

    def getUnifiedBillingCycles(self) -> List[KalturaUnifiedBillingCycle]: ...
    def setUnifiedBillingCycles(self, newUnifiedBillingCycles: List[KalturaUnifiedBillingCycle]) -> None: ...

class KalturaDefaultPlaybackAdapters(KalturaObjectBase):
    mediaAdapterId: int
    epgAdapterId: int
    recordingAdapterId: int
    def __init__(self,
            mediaAdapterId: int = NotImplemented,
            epgAdapterId: int = NotImplemented,
            recordingAdapterId: int = NotImplemented): ...

    def getMediaAdapterId(self) -> int: ...
    def setMediaAdapterId(self, newMediaAdapterId: int) -> None: ...
    def getEpgAdapterId(self) -> int: ...
    def setEpgAdapterId(self, newEpgAdapterId: int) -> None: ...
    def getRecordingAdapterId(self) -> int: ...
    def setRecordingAdapterId(self, newRecordingAdapterId: int) -> None: ...

class KalturaPlaybackPartnerConfig(KalturaPartnerConfiguration):
    defaultAdapters: KalturaDefaultPlaybackAdapters
    def __init__(self,
            defaultAdapters: KalturaDefaultPlaybackAdapters = NotImplemented): ...

    def getDefaultAdapters(self) -> KalturaDefaultPlaybackAdapters: ...
    def setDefaultAdapters(self, newDefaultAdapters: KalturaDefaultPlaybackAdapters) -> None: ...

class KalturaEncryption(KalturaObjectBase):
    encryptionType: KalturaEncryptionType
    def __init__(self,
            encryptionType: KalturaEncryptionType = NotImplemented): ...

    def getEncryptionType(self) -> KalturaEncryptionType: ...
    def setEncryptionType(self, newEncryptionType: KalturaEncryptionType) -> None: ...

class KalturaDataEncryption(KalturaObjectBase):
    username: KalturaEncryption
    def __init__(self,
            username: KalturaEncryption = NotImplemented): ...

    def getUsername(self) -> KalturaEncryption: ...
    def setUsername(self, newUsername: KalturaEncryption) -> None: ...

class KalturaSecurityPartnerConfig(KalturaPartnerConfiguration):
    encryption: KalturaDataEncryption
    def __init__(self,
            encryption: KalturaDataEncryption = NotImplemented): ...

    def getEncryption(self) -> KalturaDataEncryption: ...
    def setEncryption(self, newEncryption: KalturaDataEncryption) -> None: ...

class KalturaPersonalList(KalturaObjectBase):
    id: int
    name: str
    createDate: int
    ksql: str
    partnerListType: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            createDate: int = NotImplemented,
            ksql: str = NotImplemented,
            partnerListType: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def getKsql(self) -> str: ...
    def setKsql(self, newKsql: str) -> None: ...
    def getPartnerListType(self) -> int: ...
    def setPartnerListType(self, newPartnerListType: int) -> None: ...

class KalturaPersonalListListResponse(KalturaListResponse):
    objects: List[KalturaPersonalList]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPersonalList] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPersonalList]: ...
    def setObjects(self, newObjects: List[KalturaPersonalList]) -> None: ...

class KalturaEngagementAdapterBase(KalturaObjectBase):
    id: int
    name: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaEngagementAdapter(KalturaEngagementAdapterBase):
    isActive: bool
    adapterUrl: str
    providerUrl: str
    engagementAdapterSettings: map
    sharedSecret: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: bool = NotImplemented,
            adapterUrl: str = NotImplemented,
            providerUrl: str = NotImplemented,
            engagementAdapterSettings: map = NotImplemented,
            sharedSecret: str = NotImplemented): ...

    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getProviderUrl(self) -> str: ...
    def setProviderUrl(self, newProviderUrl: str) -> None: ...
    def getEngagementAdapterSettings(self) -> map: ...
    def setEngagementAdapterSettings(self, newEngagementAdapterSettings: map) -> None: ...
    def getSharedSecret(self) -> str: ...

class KalturaEngagementAdapterListResponse(KalturaListResponse):
    objects: List[KalturaEngagementAdapter]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaEngagementAdapter] = NotImplemented): ...

    def getObjects(self) -> List[KalturaEngagementAdapter]: ...
    def setObjects(self, newObjects: List[KalturaEngagementAdapter]) -> None: ...

class KalturaEngagement(KalturaObjectBase):
    id: int
    totalNumberOfRecipients: int
    type: KalturaEngagementType
    adapterId: int
    adapterDynamicData: str
    intervalSeconds: int
    userList: str
    sendTimeInSeconds: int
    couponGroupId: int
    def __init__(self,
            id: int = NotImplemented,
            totalNumberOfRecipients: int = NotImplemented,
            type: KalturaEngagementType = NotImplemented,
            adapterId: int = NotImplemented,
            adapterDynamicData: str = NotImplemented,
            intervalSeconds: int = NotImplemented,
            userList: str = NotImplemented,
            sendTimeInSeconds: int = NotImplemented,
            couponGroupId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getTotalNumberOfRecipients(self) -> int: ...
    def getType(self) -> KalturaEngagementType: ...
    def setType(self, newType: KalturaEngagementType) -> None: ...
    def getAdapterId(self) -> int: ...
    def setAdapterId(self, newAdapterId: int) -> None: ...
    def getAdapterDynamicData(self) -> str: ...
    def setAdapterDynamicData(self, newAdapterDynamicData: str) -> None: ...
    def getIntervalSeconds(self) -> int: ...
    def setIntervalSeconds(self, newIntervalSeconds: int) -> None: ...
    def getUserList(self) -> str: ...
    def setUserList(self, newUserList: str) -> None: ...
    def getSendTimeInSeconds(self) -> int: ...
    def setSendTimeInSeconds(self, newSendTimeInSeconds: int) -> None: ...
    def getCouponGroupId(self) -> int: ...
    def setCouponGroupId(self, newCouponGroupId: int) -> None: ...

class KalturaEngagementListResponse(KalturaListResponse):
    objects: List[KalturaEngagement]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaEngagement] = NotImplemented): ...

    def getObjects(self) -> List[KalturaEngagement]: ...
    def setObjects(self, newObjects: List[KalturaEngagement]) -> None: ...

class KalturaFollowDataBase(KalturaObjectBase):
    announcementId: int
    status: int
    title: str
    timestamp: int
    followPhrase: str
    def __init__(self,
            announcementId: int = NotImplemented,
            status: int = NotImplemented,
            title: str = NotImplemented,
            timestamp: int = NotImplemented,
            followPhrase: str = NotImplemented): ...

    def getAnnouncementId(self) -> int: ...
    def getStatus(self) -> int: ...
    def getTitle(self) -> str: ...
    def getTimestamp(self) -> int: ...
    def getFollowPhrase(self) -> str: ...

class KalturaFollowTvSeries(KalturaFollowDataBase):
    assetId: int
    def __init__(self,
            announcementId: int = NotImplemented,
            status: int = NotImplemented,
            title: str = NotImplemented,
            timestamp: int = NotImplemented,
            followPhrase: str = NotImplemented,
            assetId: int = NotImplemented): ...

    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...

class KalturaFollowTvSeriesListResponse(KalturaListResponse):
    objects: List[KalturaFollowTvSeries]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaFollowTvSeries] = NotImplemented): ...

    def getObjects(self) -> List[KalturaFollowTvSeries]: ...
    def setObjects(self, newObjects: List[KalturaFollowTvSeries]) -> None: ...

class KalturaInboxMessage(KalturaObjectBase):
    id: str
    message: str
    status: KalturaInboxMessageStatus
    type: KalturaInboxMessageType
    createdAt: int
    url: str
    campaignId: int
    def __init__(self,
            id: str = NotImplemented,
            message: str = NotImplemented,
            status: KalturaInboxMessageStatus = NotImplemented,
            type: KalturaInboxMessageType = NotImplemented,
            createdAt: int = NotImplemented,
            url: str = NotImplemented,
            campaignId: int = NotImplemented): ...

    def getId(self) -> str: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getStatus(self) -> KalturaInboxMessageStatus: ...
    def getType(self) -> KalturaInboxMessageType: ...
    def setType(self, newType: KalturaInboxMessageType) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getCampaignId(self) -> int: ...

class KalturaInboxMessageListResponse(KalturaListResponse):
    objects: List[KalturaInboxMessage]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaInboxMessage] = NotImplemented): ...

    def getObjects(self) -> List[KalturaInboxMessage]: ...
    def setObjects(self, newObjects: List[KalturaInboxMessage]) -> None: ...

class KalturaFeed(KalturaObjectBase):
    assetId: int
    def __init__(self,
            assetId: int = NotImplemented): ...

    def getAssetId(self) -> int: ...

class KalturaPersonalFeed(KalturaFeed):
    def __init__(self,
            assetId: int = NotImplemented): ...
        pass

class KalturaPersonalFeedListResponse(KalturaListResponse):
    objects: List[KalturaPersonalFeed]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPersonalFeed] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPersonalFeed]: ...
    def setObjects(self, newObjects: List[KalturaPersonalFeed]) -> None: ...

class KalturaReminder(KalturaObjectBase):
    name: str
    id: int
    type: KalturaReminderType
    def __init__(self,
            name: str = NotImplemented,
            id: int = NotImplemented,
            type: KalturaReminderType = NotImplemented): ...

    def getName(self) -> str: ...
    def getId(self) -> int: ...
    def getType(self) -> KalturaReminderType: ...
    def setType(self, newType: KalturaReminderType) -> None: ...

class KalturaReminderListResponse(KalturaListResponse):
    objects: List[KalturaReminder]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaReminder] = NotImplemented): ...

    def getObjects(self) -> List[KalturaReminder]: ...
    def setObjects(self, newObjects: List[KalturaReminder]) -> None: ...

class KalturaAssetReminder(KalturaReminder):
    assetId: int
    def __init__(self,
            name: str = NotImplemented,
            id: int = NotImplemented,
            type: KalturaReminderType = NotImplemented,
            assetId: int = NotImplemented): ...

    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...

class KalturaSeriesReminder(KalturaReminder):
    seriesId: str
    seasonNumber: int
    epgChannelId: int
    def __init__(self,
            name: str = NotImplemented,
            id: int = NotImplemented,
            type: KalturaReminderType = NotImplemented,
            seriesId: str = NotImplemented,
            seasonNumber: int = NotImplemented,
            epgChannelId: int = NotImplemented): ...

    def getSeriesId(self) -> str: ...
    def setSeriesId(self, newSeriesId: str) -> None: ...
    def getSeasonNumber(self) -> int: ...
    def setSeasonNumber(self, newSeasonNumber: int) -> None: ...
    def getEpgChannelId(self) -> int: ...
    def setEpgChannelId(self, newEpgChannelId: int) -> None: ...

class KalturaSmsAdapterProfileListResponse(KalturaListResponse):
    objects: List[KalturaSmsAdapterProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSmsAdapterProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSmsAdapterProfile]: ...
    def setObjects(self, newObjects: List[KalturaSmsAdapterProfile]) -> None: ...

class KalturaTopic(KalturaObjectBase):
    id: str
    name: str
    subscribersAmount: str
    automaticIssueNotification: KalturaTopicAutomaticIssueNotification
    lastMessageSentDateSec: int
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            subscribersAmount: str = NotImplemented,
            automaticIssueNotification: KalturaTopicAutomaticIssueNotification = NotImplemented,
            lastMessageSentDateSec: int = NotImplemented): ...

    def getId(self) -> str: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSubscribersAmount(self) -> str: ...
    def setSubscribersAmount(self, newSubscribersAmount: str) -> None: ...
    def getAutomaticIssueNotification(self) -> KalturaTopicAutomaticIssueNotification: ...
    def setAutomaticIssueNotification(self, newAutomaticIssueNotification: KalturaTopicAutomaticIssueNotification) -> None: ...
    def getLastMessageSentDateSec(self) -> int: ...
    def setLastMessageSentDateSec(self, newLastMessageSentDateSec: int) -> None: ...

class KalturaTopicListResponse(KalturaListResponse):
    objects: List[KalturaTopic]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaTopic] = NotImplemented): ...

    def getObjects(self) -> List[KalturaTopic]: ...
    def setObjects(self, newObjects: List[KalturaTopic]) -> None: ...

class KalturaTopicNotification(KalturaObjectBase):
    id: int
    name: str
    description: str
    subscribeReference: KalturaSubscribeReference
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            subscribeReference: KalturaSubscribeReference = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getSubscribeReference(self) -> KalturaSubscribeReference: ...
    def setSubscribeReference(self, newSubscribeReference: KalturaSubscribeReference) -> None: ...

class KalturaTopicNotificationListResponse(KalturaListResponse):
    objects: List[KalturaTopicNotification]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaTopicNotification] = NotImplemented): ...

    def getObjects(self) -> List[KalturaTopicNotification]: ...
    def setObjects(self, newObjects: List[KalturaTopicNotification]) -> None: ...

class KalturaTrigger(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaDispatcher(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaTopicNotificationMessage(KalturaObjectBase):
    id: int
    message: str
    imageUrl: str
    topicNotificationId: int
    trigger: KalturaTrigger
    dispatchers: List[KalturaDispatcher]
    status: KalturaAnnouncementStatus
    def __init__(self,
            id: int = NotImplemented,
            message: str = NotImplemented,
            imageUrl: str = NotImplemented,
            topicNotificationId: int = NotImplemented,
            trigger: KalturaTrigger = NotImplemented,
            dispatchers: List[KalturaDispatcher] = NotImplemented,
            status: KalturaAnnouncementStatus = NotImplemented): ...

    def getId(self) -> int: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getImageUrl(self) -> str: ...
    def setImageUrl(self, newImageUrl: str) -> None: ...
    def getTopicNotificationId(self) -> int: ...
    def setTopicNotificationId(self, newTopicNotificationId: int) -> None: ...
    def getTrigger(self) -> KalturaTrigger: ...
    def setTrigger(self, newTrigger: KalturaTrigger) -> None: ...
    def getDispatchers(self) -> List[KalturaDispatcher]: ...
    def setDispatchers(self, newDispatchers: List[KalturaDispatcher]) -> None: ...
    def getStatus(self) -> KalturaAnnouncementStatus: ...

class KalturaTopicNotificationMessageListResponse(KalturaListResponse):
    objects: List[KalturaTopicNotificationMessage]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaTopicNotificationMessage] = NotImplemented): ...

    def getObjects(self) -> List[KalturaTopicNotificationMessage]: ...
    def setObjects(self, newObjects: List[KalturaTopicNotificationMessage]) -> None: ...

class KalturaDateTrigger(KalturaTrigger):
    date: int
    def __init__(self,
            date: int = NotImplemented): ...

    def getDate(self) -> int: ...
    def setDate(self, newDate: int) -> None: ...

class KalturaSubscriptionTrigger(KalturaTrigger):
    type: KalturaSubscriptionTriggerType
    offset: int
    def __init__(self,
            type: KalturaSubscriptionTriggerType = NotImplemented,
            offset: int = NotImplemented): ...

    def getType(self) -> KalturaSubscriptionTriggerType: ...
    def setType(self, newType: KalturaSubscriptionTriggerType) -> None: ...
    def getOffset(self) -> int: ...
    def setOffset(self, newOffset: int) -> None: ...

class KalturaSmsDispatcher(KalturaDispatcher):
    def __init__(self): ...
        pass

class KalturaMailDispatcher(KalturaDispatcher):
    bodyTemplate: str
    subjectTemplate: str
    def __init__(self,
            bodyTemplate: str = NotImplemented,
            subjectTemplate: str = NotImplemented): ...

    def getBodyTemplate(self) -> str: ...
    def setBodyTemplate(self, newBodyTemplate: str) -> None: ...
    def getSubjectTemplate(self) -> str: ...
    def setSubjectTemplate(self, newSubjectTemplate: str) -> None: ...

class KalturaIngestEpg(KalturaObjectBase):
    ingestId: int
    ingestName: str
    ingestFilenameExtension: str
    createdDate: int
    ingestedByUserId: int
    completedDate: int
    ingestProfileId: int
    status: KalturaIngestStatus
    def __init__(self,
            ingestId: int = NotImplemented,
            ingestName: str = NotImplemented,
            ingestFilenameExtension: str = NotImplemented,
            createdDate: int = NotImplemented,
            ingestedByUserId: int = NotImplemented,
            completedDate: int = NotImplemented,
            ingestProfileId: int = NotImplemented,
            status: KalturaIngestStatus = NotImplemented): ...

    def getIngestId(self) -> int: ...
    def getIngestName(self) -> str: ...
    def setIngestName(self, newIngestName: str) -> None: ...
    def getIngestFilenameExtension(self) -> str: ...
    def setIngestFilenameExtension(self, newIngestFilenameExtension: str) -> None: ...
    def getCreatedDate(self) -> int: ...
    def setCreatedDate(self, newCreatedDate: int) -> None: ...
    def getIngestedByUserId(self) -> int: ...
    def setIngestedByUserId(self, newIngestedByUserId: int) -> None: ...
    def getCompletedDate(self) -> int: ...
    def setCompletedDate(self, newCompletedDate: int) -> None: ...
    def getIngestProfileId(self) -> int: ...
    def setIngestProfileId(self, newIngestProfileId: int) -> None: ...
    def getStatus(self) -> KalturaIngestStatus: ...
    def setStatus(self, newStatus: KalturaIngestStatus) -> None: ...

class KalturaIngestStatusEpgListResponse(KalturaListResponse):
    objects: List[KalturaIngestEpg]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaIngestEpg] = NotImplemented): ...

    def getObjects(self) -> List[KalturaIngestEpg]: ...
    def setObjects(self, newObjects: List[KalturaIngestEpg]) -> None: ...

class KalturaEpgIngestErrorMessage(KalturaObjectBase):
    message: str
    code: str
    args: map
    def __init__(self,
            message: str = NotImplemented,
            code: str = NotImplemented,
            args: map = NotImplemented): ...

    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...
    def getArgs(self) -> map: ...
    def setArgs(self, newArgs: map) -> None: ...

class KalturaAggregatedIngestInfo(KalturaObjectBase):
    resultsCount: int
    totalFailureCount: int
    partialFailureCount: int
    warningsCount: int
    def __init__(self,
            resultsCount: int = NotImplemented,
            totalFailureCount: int = NotImplemented,
            partialFailureCount: int = NotImplemented,
            warningsCount: int = NotImplemented): ...

    def getResultsCount(self) -> int: ...
    def setResultsCount(self, newResultsCount: int) -> None: ...
    def getTotalFailureCount(self) -> int: ...
    def setTotalFailureCount(self, newTotalFailureCount: int) -> None: ...
    def getPartialFailureCount(self) -> int: ...
    def setPartialFailureCount(self, newPartialFailureCount: int) -> None: ...
    def getWarningsCount(self) -> int: ...
    def setWarningsCount(self, newWarningsCount: int) -> None: ...

class KalturaChannelAggregatedIngestInfo(KalturaObjectBase):
    linearChannelId: int
    aggregatedErrors: KalturaAggregatedIngestInfo
    def __init__(self,
            linearChannelId: int = NotImplemented,
            aggregatedErrors: KalturaAggregatedIngestInfo = NotImplemented): ...

    def getLinearChannelId(self) -> int: ...
    def setLinearChannelId(self, newLinearChannelId: int) -> None: ...
    def getAggregatedErrors(self) -> KalturaAggregatedIngestInfo: ...
    def setAggregatedErrors(self, newAggregatedErrors: KalturaAggregatedIngestInfo) -> None: ...

class KalturaDateAggregatedIngestInfo(KalturaObjectBase):
    date: int
    aggregatedErrors: KalturaAggregatedIngestInfo
    def __init__(self,
            date: int = NotImplemented,
            aggregatedErrors: KalturaAggregatedIngestInfo = NotImplemented): ...

    def getDate(self) -> int: ...
    def setDate(self, newDate: int) -> None: ...
    def getAggregatedErrors(self) -> KalturaAggregatedIngestInfo: ...
    def setAggregatedErrors(self, newAggregatedErrors: KalturaAggregatedIngestInfo) -> None: ...

class KalturaIngestEpgDetailsAggregation(KalturaObjectBase):
    linearChannels: List[KalturaChannelAggregatedIngestInfo]
    dates: List[KalturaDateAggregatedIngestInfo]
    all: KalturaAggregatedIngestInfo
    def __init__(self,
            linearChannels: List[KalturaChannelAggregatedIngestInfo] = NotImplemented,
            dates: List[KalturaDateAggregatedIngestInfo] = NotImplemented,
            all: KalturaAggregatedIngestInfo = NotImplemented): ...

    def getLinearChannels(self) -> List[KalturaChannelAggregatedIngestInfo]: ...
    def setLinearChannels(self, newLinearChannels: List[KalturaChannelAggregatedIngestInfo]) -> None: ...
    def getDates(self) -> List[KalturaDateAggregatedIngestInfo]: ...
    def setDates(self, newDates: List[KalturaDateAggregatedIngestInfo]) -> None: ...
    def getAll(self) -> KalturaAggregatedIngestInfo: ...
    def setAll(self, newAll: KalturaAggregatedIngestInfo) -> None: ...

class KalturaIngestEpgDetails(KalturaIngestEpg):
    errors: List[KalturaEpgIngestErrorMessage]
    aggregations: KalturaIngestEpgDetailsAggregation
    def __init__(self,
            ingestId: int = NotImplemented,
            ingestName: str = NotImplemented,
            ingestFilenameExtension: str = NotImplemented,
            createdDate: int = NotImplemented,
            ingestedByUserId: int = NotImplemented,
            completedDate: int = NotImplemented,
            ingestProfileId: int = NotImplemented,
            status: KalturaIngestStatus = NotImplemented,
            errors: List[KalturaEpgIngestErrorMessage] = NotImplemented,
            aggregations: KalturaIngestEpgDetailsAggregation = NotImplemented): ...

    def getErrors(self) -> List[KalturaEpgIngestErrorMessage]: ...
    def setErrors(self, newErrors: List[KalturaEpgIngestErrorMessage]) -> None: ...
    def getAggregations(self) -> KalturaIngestEpgDetailsAggregation: ...
    def setAggregations(self, newAggregations: KalturaIngestEpgDetailsAggregation) -> None: ...

class KalturaIngestEpgProgramResult(KalturaObjectBase):
    programId: int
    externalProgramId: str
    linearChannelId: int
    indexInFile: int
    startDate: int
    endDate: int
    status: KalturaIngestEpgProgramStatus
    errors: List[KalturaEpgIngestErrorMessage]
    warnings: List[KalturaMessage]
    def __init__(self,
            programId: int = NotImplemented,
            externalProgramId: str = NotImplemented,
            linearChannelId: int = NotImplemented,
            indexInFile: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            status: KalturaIngestEpgProgramStatus = NotImplemented,
            errors: List[KalturaEpgIngestErrorMessage] = NotImplemented,
            warnings: List[KalturaMessage] = NotImplemented): ...

    def getProgramId(self) -> int: ...
    def setProgramId(self, newProgramId: int) -> None: ...
    def getExternalProgramId(self) -> str: ...
    def setExternalProgramId(self, newExternalProgramId: str) -> None: ...
    def getLinearChannelId(self) -> int: ...
    def setLinearChannelId(self, newLinearChannelId: int) -> None: ...
    def getIndexInFile(self) -> int: ...
    def setIndexInFile(self, newIndexInFile: int) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getStatus(self) -> KalturaIngestEpgProgramStatus: ...
    def setStatus(self, newStatus: KalturaIngestEpgProgramStatus) -> None: ...
    def getErrors(self) -> List[KalturaEpgIngestErrorMessage]: ...
    def setErrors(self, newErrors: List[KalturaEpgIngestErrorMessage]) -> None: ...
    def getWarnings(self) -> List[KalturaMessage]: ...
    def setWarnings(self, newWarnings: List[KalturaMessage]) -> None: ...

class KalturaIngestStatusEpgProgramResultListResponse(KalturaListResponse):
    objects: List[KalturaIngestEpgProgramResult]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaIngestEpgProgramResult] = NotImplemented): ...

    def getObjects(self) -> List[KalturaIngestEpgProgramResult]: ...
    def setObjects(self, newObjects: List[KalturaIngestEpgProgramResult]) -> None: ...

class KalturaDurationListResponse(KalturaListResponse):
    objects: List[KalturaDuration]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDuration] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDuration]: ...
    def setObjects(self, newObjects: List[KalturaDuration]) -> None: ...

class KalturaDynamicListListResponse(KalturaListResponse):
    objects: List[KalturaDynamicList]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDynamicList] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDynamicList]: ...
    def setObjects(self, newObjects: List[KalturaDynamicList]) -> None: ...

class KalturaIntegerValueListResponse(KalturaListResponse):
    objects: List[KalturaIntegerValue]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaIntegerValue] = NotImplemented): ...

    def getObjects(self) -> List[KalturaIntegerValue]: ...
    def setObjects(self, newObjects: List[KalturaIntegerValue]) -> None: ...

class KalturaReport(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaReportListResponse(KalturaListResponse):
    objects: List[KalturaReport]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaReport] = NotImplemented): ...

    def getObjects(self) -> List[KalturaReport]: ...
    def setObjects(self, newObjects: List[KalturaReport]) -> None: ...

class KalturaPushParams(KalturaObjectBase):
    token: str
    externalToken: str
    def __init__(self,
            token: str = NotImplemented,
            externalToken: str = NotImplemented): ...

    def getToken(self) -> str: ...
    def setToken(self, newToken: str) -> None: ...
    def getExternalToken(self) -> str: ...
    def setExternalToken(self, newExternalToken: str) -> None: ...

class KalturaDeviceReport(KalturaReport):
    partnerId: int
    configurationGroupId: str
    udid: str
    pushParameters: KalturaPushParams
    versionNumber: str
    versionPlatform: KalturaPlatform
    versionAppName: str
    lastAccessIP: str
    lastAccessDate: int
    userAgent: str
    operationSystem: str
    def __init__(self,
            partnerId: int = NotImplemented,
            configurationGroupId: str = NotImplemented,
            udid: str = NotImplemented,
            pushParameters: KalturaPushParams = NotImplemented,
            versionNumber: str = NotImplemented,
            versionPlatform: KalturaPlatform = NotImplemented,
            versionAppName: str = NotImplemented,
            lastAccessIP: str = NotImplemented,
            lastAccessDate: int = NotImplemented,
            userAgent: str = NotImplemented,
            operationSystem: str = NotImplemented): ...

    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getConfigurationGroupId(self) -> str: ...
    def setConfigurationGroupId(self, newConfigurationGroupId: str) -> None: ...
    def getUdid(self) -> str: ...
    def setUdid(self, newUdid: str) -> None: ...
    def getPushParameters(self) -> KalturaPushParams: ...
    def setPushParameters(self, newPushParameters: KalturaPushParams) -> None: ...
    def getVersionNumber(self) -> str: ...
    def setVersionNumber(self, newVersionNumber: str) -> None: ...
    def getVersionPlatform(self) -> KalturaPlatform: ...
    def setVersionPlatform(self, newVersionPlatform: KalturaPlatform) -> None: ...
    def getVersionAppName(self) -> str: ...
    def setVersionAppName(self, newVersionAppName: str) -> None: ...
    def getLastAccessIP(self) -> str: ...
    def setLastAccessIP(self, newLastAccessIP: str) -> None: ...
    def getLastAccessDate(self) -> int: ...
    def setLastAccessDate(self, newLastAccessDate: int) -> None: ...
    def getUserAgent(self) -> str: ...
    def setUserAgent(self, newUserAgent: str) -> None: ...
    def getOperationSystem(self) -> str: ...
    def setOperationSystem(self, newOperationSystem: str) -> None: ...

class KalturaHomeNetwork(KalturaObjectBase):
    externalId: str
    name: str
    description: str
    isActive: bool
    def __init__(self,
            externalId: str = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            isActive: bool = NotImplemented): ...

    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...

class KalturaHomeNetworkListResponse(KalturaListResponse):
    objects: List[KalturaHomeNetwork]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHomeNetwork] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHomeNetwork]: ...
    def setObjects(self, newObjects: List[KalturaHomeNetwork]) -> None: ...

class KalturaHouseholdCouponListResponse(KalturaListResponse):
    objects: List[KalturaHouseholdCoupon]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHouseholdCoupon] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHouseholdCoupon]: ...
    def setObjects(self, newObjects: List[KalturaHouseholdCoupon]) -> None: ...

class KalturaHouseholdDeviceListResponse(KalturaListResponse):
    objects: List[KalturaHouseholdDevice]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHouseholdDevice] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHouseholdDevice]: ...
    def setObjects(self, newObjects: List[KalturaHouseholdDevice]) -> None: ...

class KalturaDeviceFamilyBase(KalturaObjectBase):
    id: int
    name: str
    type: KalturaDeviceFamilyType
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeviceFamilyType = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getType(self) -> KalturaDeviceFamilyType: ...

class KalturaHouseholdDeviceFamilyLimitations(KalturaDeviceFamilyBase):
    frequency: int
    deviceLimit: int
    concurrentLimit: int
    isDefaultDeviceLimit: bool
    isDefaultConcurrentLimit: bool
    isDefaultFrequencyLimit: bool
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeviceFamilyType = NotImplemented,
            frequency: int = NotImplemented,
            deviceLimit: int = NotImplemented,
            concurrentLimit: int = NotImplemented,
            isDefaultDeviceLimit: bool = NotImplemented,
            isDefaultConcurrentLimit: bool = NotImplemented,
            isDefaultFrequencyLimit: bool = NotImplemented): ...

    def getFrequency(self) -> int: ...
    def setFrequency(self, newFrequency: int) -> None: ...
    def getDeviceLimit(self) -> int: ...
    def setDeviceLimit(self, newDeviceLimit: int) -> None: ...
    def getConcurrentLimit(self) -> int: ...
    def setConcurrentLimit(self, newConcurrentLimit: int) -> None: ...
    def getIsDefaultDeviceLimit(self) -> bool: ...
    def getIsDefaultConcurrentLimit(self) -> bool: ...
    def getIsDefaultFrequencyLimit(self) -> bool: ...

class KalturaHouseholdLimitations(KalturaObjectBase):
    id: int
    name: str
    concurrentLimit: int
    deviceLimit: int
    deviceFrequency: int
    deviceFrequencyDescription: str
    userFrequency: int
    userFrequencyDescription: str
    npvrQuotaInSeconds: int
    usersLimit: int
    deviceFamiliesLimitations: List[KalturaHouseholdDeviceFamilyLimitations]
    description: str
    associatedDeviceFamiliesIdsIn: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            concurrentLimit: int = NotImplemented,
            deviceLimit: int = NotImplemented,
            deviceFrequency: int = NotImplemented,
            deviceFrequencyDescription: str = NotImplemented,
            userFrequency: int = NotImplemented,
            userFrequencyDescription: str = NotImplemented,
            npvrQuotaInSeconds: int = NotImplemented,
            usersLimit: int = NotImplemented,
            deviceFamiliesLimitations: List[KalturaHouseholdDeviceFamilyLimitations] = NotImplemented,
            description: str = NotImplemented,
            associatedDeviceFamiliesIdsIn: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getConcurrentLimit(self) -> int: ...
    def setConcurrentLimit(self, newConcurrentLimit: int) -> None: ...
    def getDeviceLimit(self) -> int: ...
    def setDeviceLimit(self, newDeviceLimit: int) -> None: ...
    def getDeviceFrequency(self) -> int: ...
    def setDeviceFrequency(self, newDeviceFrequency: int) -> None: ...
    def getDeviceFrequencyDescription(self) -> str: ...
    def getUserFrequency(self) -> int: ...
    def setUserFrequency(self, newUserFrequency: int) -> None: ...
    def getUserFrequencyDescription(self) -> str: ...
    def getNpvrQuotaInSeconds(self) -> int: ...
    def getUsersLimit(self) -> int: ...
    def setUsersLimit(self, newUsersLimit: int) -> None: ...
    def getDeviceFamiliesLimitations(self) -> List[KalturaHouseholdDeviceFamilyLimitations]: ...
    def setDeviceFamiliesLimitations(self, newDeviceFamiliesLimitations: List[KalturaHouseholdDeviceFamilyLimitations]) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getAssociatedDeviceFamiliesIdsIn(self) -> str: ...
    def setAssociatedDeviceFamiliesIdsIn(self, newAssociatedDeviceFamiliesIdsIn: str) -> None: ...

class KalturaHouseholdLimitationsListResponse(KalturaListResponse):
    objects: List[KalturaHouseholdLimitations]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHouseholdLimitations] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHouseholdLimitations]: ...
    def setObjects(self, newObjects: List[KalturaHouseholdLimitations]) -> None: ...

class KalturaDeviceFamily(KalturaDeviceFamilyBase):
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeviceFamilyType = NotImplemented): ...
        pass

class KalturaHousehold(KalturaObjectBase):
    id: int
    name: str
    description: str
    externalId: str
    householdLimitationsId: int
    devicesLimit: int
    usersLimit: int
    concurrentLimit: int
    regionId: int
    state: KalturaHouseholdState
    isFrequencyEnabled: bool
    frequencyNextDeviceAction: int
    frequencyNextUserAction: int
    restriction: KalturaHouseholdRestriction
    roleId: int
    createDate: int
    updateDate: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            externalId: str = NotImplemented,
            householdLimitationsId: int = NotImplemented,
            devicesLimit: int = NotImplemented,
            usersLimit: int = NotImplemented,
            concurrentLimit: int = NotImplemented,
            regionId: int = NotImplemented,
            state: KalturaHouseholdState = NotImplemented,
            isFrequencyEnabled: bool = NotImplemented,
            frequencyNextDeviceAction: int = NotImplemented,
            frequencyNextUserAction: int = NotImplemented,
            restriction: KalturaHouseholdRestriction = NotImplemented,
            roleId: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getHouseholdLimitationsId(self) -> int: ...
    def getDevicesLimit(self) -> int: ...
    def getUsersLimit(self) -> int: ...
    def getConcurrentLimit(self) -> int: ...
    def getRegionId(self) -> int: ...
    def setRegionId(self, newRegionId: int) -> None: ...
    def getState(self) -> KalturaHouseholdState: ...
    def getIsFrequencyEnabled(self) -> bool: ...
    def getFrequencyNextDeviceAction(self) -> int: ...
    def getFrequencyNextUserAction(self) -> int: ...
    def getRestriction(self) -> KalturaHouseholdRestriction: ...
    def getRoleId(self) -> int: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...

class KalturaHouseholdListResponse(KalturaListResponse):
    objects: List[KalturaHousehold]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHousehold] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHousehold]: ...
    def setObjects(self, newObjects: List[KalturaHousehold]) -> None: ...

class KalturaHouseholdUser(KalturaObjectBase):
    householdId: int
    userId: str
    isMaster: bool
    householdMasterUsername: str
    status: KalturaHouseholdUserStatus
    isDefault: bool
    def __init__(self,
            householdId: int = NotImplemented,
            userId: str = NotImplemented,
            isMaster: bool = NotImplemented,
            householdMasterUsername: str = NotImplemented,
            status: KalturaHouseholdUserStatus = NotImplemented,
            isDefault: bool = NotImplemented): ...

    def getHouseholdId(self) -> int: ...
    def setHouseholdId(self, newHouseholdId: int) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getIsMaster(self) -> bool: ...
    def setIsMaster(self, newIsMaster: bool) -> None: ...
    def getHouseholdMasterUsername(self) -> str: ...
    def setHouseholdMasterUsername(self, newHouseholdMasterUsername: str) -> None: ...
    def getStatus(self) -> KalturaHouseholdUserStatus: ...
    def getIsDefault(self) -> bool: ...

class KalturaHouseholdUserListResponse(KalturaListResponse):
    objects: List[KalturaHouseholdUser]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHouseholdUser] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHouseholdUser]: ...
    def setObjects(self, newObjects: List[KalturaHouseholdUser]) -> None: ...

class KalturaConfigurationGroupDevice(KalturaObjectBase):
    configurationGroupId: str
    partnerId: int
    udid: str
    def __init__(self,
            configurationGroupId: str = NotImplemented,
            partnerId: int = NotImplemented,
            udid: str = NotImplemented): ...

    def getConfigurationGroupId(self) -> str: ...
    def setConfigurationGroupId(self, newConfigurationGroupId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getUdid(self) -> str: ...
    def setUdid(self, newUdid: str) -> None: ...

class KalturaConfigurationGroupDeviceListResponse(KalturaListResponse):
    objects: List[KalturaConfigurationGroupDevice]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaConfigurationGroupDevice] = NotImplemented): ...

    def getObjects(self) -> List[KalturaConfigurationGroupDevice]: ...
    def setObjects(self, newObjects: List[KalturaConfigurationGroupDevice]) -> None: ...

class KalturaConfigurationIdentifier(KalturaObjectBase):
    id: str
    name: str
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaConfigurationGroup(KalturaObjectBase):
    id: str
    name: str
    partnerId: int
    isDefault: bool
    tags: List[KalturaStringValue]
    numberOfDevices: int
    configurationIdentifiers: List[KalturaConfigurationIdentifier]
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            partnerId: int = NotImplemented,
            isDefault: bool = NotImplemented,
            tags: List[KalturaStringValue] = NotImplemented,
            numberOfDevices: int = NotImplemented,
            configurationIdentifiers: List[KalturaConfigurationIdentifier] = NotImplemented): ...

    def getId(self) -> str: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getIsDefault(self) -> bool: ...
    def setIsDefault(self, newIsDefault: bool) -> None: ...
    def getTags(self) -> List[KalturaStringValue]: ...
    def getNumberOfDevices(self) -> int: ...
    def getConfigurationIdentifiers(self) -> List[KalturaConfigurationIdentifier]: ...

class KalturaConfigurationGroupListResponse(KalturaListResponse):
    objects: List[KalturaConfigurationGroup]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaConfigurationGroup] = NotImplemented): ...

    def getObjects(self) -> List[KalturaConfigurationGroup]: ...
    def setObjects(self, newObjects: List[KalturaConfigurationGroup]) -> None: ...

class KalturaConfigurationGroupTag(KalturaObjectBase):
    configurationGroupId: str
    partnerId: int
    tag: str
    def __init__(self,
            configurationGroupId: str = NotImplemented,
            partnerId: int = NotImplemented,
            tag: str = NotImplemented): ...

    def getConfigurationGroupId(self) -> str: ...
    def setConfigurationGroupId(self, newConfigurationGroupId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getTag(self) -> str: ...
    def setTag(self, newTag: str) -> None: ...

class KalturaConfigurationGroupTagListResponse(KalturaListResponse):
    objects: List[KalturaConfigurationGroupTag]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaConfigurationGroupTag] = NotImplemented): ...

    def getObjects(self) -> List[KalturaConfigurationGroupTag]: ...
    def setObjects(self, newObjects: List[KalturaConfigurationGroupTag]) -> None: ...

class KalturaConfigurations(KalturaObjectBase):
    id: str
    partnerId: int
    configurationGroupId: str
    appName: str
    clientVersion: str
    platform: KalturaPlatform
    externalPushId: str
    isForceUpdate: bool
    content: str
    def __init__(self,
            id: str = NotImplemented,
            partnerId: int = NotImplemented,
            configurationGroupId: str = NotImplemented,
            appName: str = NotImplemented,
            clientVersion: str = NotImplemented,
            platform: KalturaPlatform = NotImplemented,
            externalPushId: str = NotImplemented,
            isForceUpdate: bool = NotImplemented,
            content: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getPartnerId(self) -> int: ...
    def getConfigurationGroupId(self) -> str: ...
    def setConfigurationGroupId(self, newConfigurationGroupId: str) -> None: ...
    def getAppName(self) -> str: ...
    def setAppName(self, newAppName: str) -> None: ...
    def getClientVersion(self) -> str: ...
    def setClientVersion(self, newClientVersion: str) -> None: ...
    def getPlatform(self) -> KalturaPlatform: ...
    def setPlatform(self, newPlatform: KalturaPlatform) -> None: ...
    def getExternalPushId(self) -> str: ...
    def setExternalPushId(self, newExternalPushId: str) -> None: ...
    def getIsForceUpdate(self) -> bool: ...
    def setIsForceUpdate(self, newIsForceUpdate: bool) -> None: ...
    def getContent(self) -> str: ...
    def setContent(self, newContent: str) -> None: ...

class KalturaConfigurationsListResponse(KalturaListResponse):
    objects: List[KalturaConfigurations]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaConfigurations] = NotImplemented): ...

    def getObjects(self) -> List[KalturaConfigurations]: ...
    def setObjects(self, newObjects: List[KalturaConfigurations]) -> None: ...

class KalturaBillingTransaction(KalturaObjectBase):
    recieptCode: str
    purchasedItemName: str
    purchasedItemCode: str
    itemType: KalturaBillingItemsType
    billingAction: KalturaBillingAction
    price: KalturaPrice
    actionDate: int
    startDate: int
    endDate: int
    paymentMethod: KalturaPaymentMethodType
    paymentMethodExtraDetails: str
    isRecurring: bool
    billingProviderRef: int
    purchaseId: int
    remarks: str
    billingPriceType: KalturaBillingPriceType
    externalTransactionId: str
    def __init__(self,
            recieptCode: str = NotImplemented,
            purchasedItemName: str = NotImplemented,
            purchasedItemCode: str = NotImplemented,
            itemType: KalturaBillingItemsType = NotImplemented,
            billingAction: KalturaBillingAction = NotImplemented,
            price: KalturaPrice = NotImplemented,
            actionDate: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            paymentMethod: KalturaPaymentMethodType = NotImplemented,
            paymentMethodExtraDetails: str = NotImplemented,
            isRecurring: bool = NotImplemented,
            billingProviderRef: int = NotImplemented,
            purchaseId: int = NotImplemented,
            remarks: str = NotImplemented,
            billingPriceType: KalturaBillingPriceType = NotImplemented,
            externalTransactionId: str = NotImplemented): ...

    def getRecieptCode(self) -> str: ...
    def getPurchasedItemName(self) -> str: ...
    def getPurchasedItemCode(self) -> str: ...
    def getItemType(self) -> KalturaBillingItemsType: ...
    def getBillingAction(self) -> KalturaBillingAction: ...
    def getPrice(self) -> KalturaPrice: ...
    def getActionDate(self) -> int: ...
    def getStartDate(self) -> int: ...
    def getEndDate(self) -> int: ...
    def getPaymentMethod(self) -> KalturaPaymentMethodType: ...
    def getPaymentMethodExtraDetails(self) -> str: ...
    def getIsRecurring(self) -> bool: ...
    def getBillingProviderRef(self) -> int: ...
    def getPurchaseId(self) -> int: ...
    def getRemarks(self) -> str: ...
    def getBillingPriceType(self) -> KalturaBillingPriceType: ...
    def getExternalTransactionId(self) -> str: ...

class KalturaBillingTransactionListResponse(KalturaListResponse):
    objects: List[KalturaBillingTransaction]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaBillingTransaction] = NotImplemented): ...

    def getObjects(self) -> List[KalturaBillingTransaction]: ...
    def setObjects(self, newObjects: List[KalturaBillingTransaction]) -> None: ...

class KalturaCDVRAdapterProfile(KalturaObjectBase):
    id: int
    name: str
    isActive: bool
    adapterUrl: str
    settings: map
    externalIdentifier: str
    sharedSecret: str
    dynamicLinksSupport: bool
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: bool = NotImplemented,
            adapterUrl: str = NotImplemented,
            settings: map = NotImplemented,
            externalIdentifier: str = NotImplemented,
            sharedSecret: str = NotImplemented,
            dynamicLinksSupport: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getSettings(self) -> map: ...
    def setSettings(self, newSettings: map) -> None: ...
    def getExternalIdentifier(self) -> str: ...
    def setExternalIdentifier(self, newExternalIdentifier: str) -> None: ...
    def getSharedSecret(self) -> str: ...
    def getDynamicLinksSupport(self) -> bool: ...
    def setDynamicLinksSupport(self, newDynamicLinksSupport: bool) -> None: ...

class KalturaCDVRAdapterProfileListResponse(KalturaListResponse):
    objects: List[KalturaCDVRAdapterProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCDVRAdapterProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCDVRAdapterProfile]: ...
    def setObjects(self, newObjects: List[KalturaCDVRAdapterProfile]) -> None: ...

class KalturaEntitlement(KalturaObjectBase):
    id: int
    productId: str
    currentUses: int
    endDate: int
    currentDate: int
    lastViewDate: int
    purchaseDate: int
    paymentMethod: KalturaPaymentMethodType
    deviceUdid: str
    deviceName: str
    isCancelationWindowEnabled: bool
    maxUses: int
    userId: str
    householdId: int
    isPending: bool
    def __init__(self,
            id: int = NotImplemented,
            productId: str = NotImplemented,
            currentUses: int = NotImplemented,
            endDate: int = NotImplemented,
            currentDate: int = NotImplemented,
            lastViewDate: int = NotImplemented,
            purchaseDate: int = NotImplemented,
            paymentMethod: KalturaPaymentMethodType = NotImplemented,
            deviceUdid: str = NotImplemented,
            deviceName: str = NotImplemented,
            isCancelationWindowEnabled: bool = NotImplemented,
            maxUses: int = NotImplemented,
            userId: str = NotImplemented,
            householdId: int = NotImplemented,
            isPending: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getProductId(self) -> str: ...
    def getCurrentUses(self) -> int: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getCurrentDate(self) -> int: ...
    def getLastViewDate(self) -> int: ...
    def getPurchaseDate(self) -> int: ...
    def getPaymentMethod(self) -> KalturaPaymentMethodType: ...
    def getDeviceUdid(self) -> str: ...
    def getDeviceName(self) -> str: ...
    def getIsCancelationWindowEnabled(self) -> bool: ...
    def getMaxUses(self) -> int: ...
    def getUserId(self) -> str: ...
    def getHouseholdId(self) -> int: ...
    def getIsPending(self) -> bool: ...
    def setIsPending(self, newIsPending: bool) -> None: ...

class KalturaEntitlementListResponse(KalturaListResponse):
    objects: List[KalturaEntitlement]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaEntitlement] = NotImplemented): ...

    def getObjects(self) -> List[KalturaEntitlement]: ...
    def setObjects(self, newObjects: List[KalturaEntitlement]) -> None: ...

class KalturaCollectionEntitlement(KalturaEntitlement):
    def __init__(self,
            id: int = NotImplemented,
            productId: str = NotImplemented,
            currentUses: int = NotImplemented,
            endDate: int = NotImplemented,
            currentDate: int = NotImplemented,
            lastViewDate: int = NotImplemented,
            purchaseDate: int = NotImplemented,
            paymentMethod: KalturaPaymentMethodType = NotImplemented,
            deviceUdid: str = NotImplemented,
            deviceName: str = NotImplemented,
            isCancelationWindowEnabled: bool = NotImplemented,
            maxUses: int = NotImplemented,
            userId: str = NotImplemented,
            householdId: int = NotImplemented,
            isPending: bool = NotImplemented): ...
        pass

class KalturaPpvEntitlement(KalturaEntitlement):
    mediaFileId: int
    mediaId: int
    def __init__(self,
            id: int = NotImplemented,
            productId: str = NotImplemented,
            currentUses: int = NotImplemented,
            endDate: int = NotImplemented,
            currentDate: int = NotImplemented,
            lastViewDate: int = NotImplemented,
            purchaseDate: int = NotImplemented,
            paymentMethod: KalturaPaymentMethodType = NotImplemented,
            deviceUdid: str = NotImplemented,
            deviceName: str = NotImplemented,
            isCancelationWindowEnabled: bool = NotImplemented,
            maxUses: int = NotImplemented,
            userId: str = NotImplemented,
            householdId: int = NotImplemented,
            isPending: bool = NotImplemented,
            mediaFileId: int = NotImplemented,
            mediaId: int = NotImplemented): ...

    def getMediaFileId(self) -> int: ...
    def getMediaId(self) -> int: ...

class KalturaProgramAssetGroupOfferEntitlement(KalturaEntitlement):
    def __init__(self,
            id: int = NotImplemented,
            productId: str = NotImplemented,
            currentUses: int = NotImplemented,
            endDate: int = NotImplemented,
            currentDate: int = NotImplemented,
            lastViewDate: int = NotImplemented,
            purchaseDate: int = NotImplemented,
            paymentMethod: KalturaPaymentMethodType = NotImplemented,
            deviceUdid: str = NotImplemented,
            deviceName: str = NotImplemented,
            isCancelationWindowEnabled: bool = NotImplemented,
            maxUses: int = NotImplemented,
            userId: str = NotImplemented,
            householdId: int = NotImplemented,
            isPending: bool = NotImplemented): ...
        pass

class KalturaEntitlementDiscountDetails(KalturaObjectBase):
    amount: float
    startDate: int
    endDate: int
    def __init__(self,
            amount: float = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented): ...

    def getAmount(self) -> float: ...
    def getStartDate(self) -> int: ...
    def getEndDate(self) -> int: ...

class KalturaEntitlementPriceDetails(KalturaObjectBase):
    fullPrice: KalturaPrice
    discountDetails: List[KalturaEntitlementDiscountDetails]
    def __init__(self,
            fullPrice: KalturaPrice = NotImplemented,
            discountDetails: List[KalturaEntitlementDiscountDetails] = NotImplemented): ...

    def getFullPrice(self) -> KalturaPrice: ...
    def getDiscountDetails(self) -> List[KalturaEntitlementDiscountDetails]: ...

class KalturaSubscriptionEntitlement(KalturaEntitlement):
    nextRenewalDate: int
    isRenewableForPurchase: bool
    isRenewable: bool
    isInGracePeriod: bool
    paymentGatewayId: int
    paymentMethodId: int
    scheduledSubscriptionId: int
    unifiedPaymentId: int
    isSuspended: bool
    priceDetails: KalturaEntitlementPriceDetails
    isFlexiblePricePlan: bool
    def __init__(self,
            id: int = NotImplemented,
            productId: str = NotImplemented,
            currentUses: int = NotImplemented,
            endDate: int = NotImplemented,
            currentDate: int = NotImplemented,
            lastViewDate: int = NotImplemented,
            purchaseDate: int = NotImplemented,
            paymentMethod: KalturaPaymentMethodType = NotImplemented,
            deviceUdid: str = NotImplemented,
            deviceName: str = NotImplemented,
            isCancelationWindowEnabled: bool = NotImplemented,
            maxUses: int = NotImplemented,
            userId: str = NotImplemented,
            householdId: int = NotImplemented,
            isPending: bool = NotImplemented,
            nextRenewalDate: int = NotImplemented,
            isRenewableForPurchase: bool = NotImplemented,
            isRenewable: bool = NotImplemented,
            isInGracePeriod: bool = NotImplemented,
            paymentGatewayId: int = NotImplemented,
            paymentMethodId: int = NotImplemented,
            scheduledSubscriptionId: int = NotImplemented,
            unifiedPaymentId: int = NotImplemented,
            isSuspended: bool = NotImplemented,
            priceDetails: KalturaEntitlementPriceDetails = NotImplemented,
            isFlexiblePricePlan: bool = NotImplemented): ...

    def getNextRenewalDate(self) -> int: ...
    def getIsRenewableForPurchase(self) -> bool: ...
    def getIsRenewable(self) -> bool: ...
    def getIsInGracePeriod(self) -> bool: ...
    def getPaymentGatewayId(self) -> int: ...
    def setPaymentGatewayId(self, newPaymentGatewayId: int) -> None: ...
    def getPaymentMethodId(self) -> int: ...
    def setPaymentMethodId(self, newPaymentMethodId: int) -> None: ...
    def getScheduledSubscriptionId(self) -> int: ...
    def getUnifiedPaymentId(self) -> int: ...
    def getIsSuspended(self) -> bool: ...
    def getPriceDetails(self) -> KalturaEntitlementPriceDetails: ...
    def getIsFlexiblePricePlan(self) -> bool: ...

class KalturaEntitlementDiscountDetailsIdentifier(KalturaEntitlementDiscountDetails):
    id: int
    def __init__(self,
            amount: float = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            id: int = NotImplemented): ...

    def getId(self) -> int: ...

class KalturaCampaignEntitlementDiscountDetails(KalturaEntitlementDiscountDetailsIdentifier):
    def __init__(self,
            amount: float = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            id: int = NotImplemented): ...
        pass

class KalturaCompensationEntitlementDiscountDetails(KalturaEntitlementDiscountDetailsIdentifier):
    def __init__(self,
            amount: float = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            id: int = NotImplemented): ...
        pass

class KalturaDiscountEntitlementDiscountDetails(KalturaEntitlementDiscountDetailsIdentifier):
    def __init__(self,
            amount: float = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            id: int = NotImplemented): ...
        pass

class KalturaTrailEntitlementDiscountDetails(KalturaEntitlementDiscountDetailsIdentifier):
    def __init__(self,
            amount: float = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            id: int = NotImplemented): ...
        pass

class KalturaCouponEntitlementDiscountDetails(KalturaEntitlementDiscountDetails):
    couponCode: str
    endlessCoupon: bool
    def __init__(self,
            amount: float = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            couponCode: str = NotImplemented,
            endlessCoupon: bool = NotImplemented): ...

    def getCouponCode(self) -> str: ...
    def getEndlessCoupon(self) -> bool: ...

class KalturaHouseholdPremiumServiceListResponse(KalturaListResponse):
    objects: List[KalturaHouseholdPremiumService]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHouseholdPremiumService] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHouseholdPremiumService]: ...
    def setObjects(self, newObjects: List[KalturaHouseholdPremiumService]) -> None: ...

class KalturaRecording(KalturaObjectBase):
    id: int
    status: KalturaRecordingStatus
    assetId: int
    type: KalturaRecordingType
    viewableUntilDate: int
    isProtected: bool
    createDate: int
    updateDate: int
    duration: int
    def __init__(self,
            id: int = NotImplemented,
            status: KalturaRecordingStatus = NotImplemented,
            assetId: int = NotImplemented,
            type: KalturaRecordingType = NotImplemented,
            viewableUntilDate: int = NotImplemented,
            isProtected: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            duration: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getStatus(self) -> KalturaRecordingStatus: ...
    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...
    def getType(self) -> KalturaRecordingType: ...
    def setType(self, newType: KalturaRecordingType) -> None: ...
    def getViewableUntilDate(self) -> int: ...
    def setViewableUntilDate(self, newViewableUntilDate: int) -> None: ...
    def getIsProtected(self) -> bool: ...
    def setIsProtected(self, newIsProtected: bool) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getDuration(self) -> int: ...

class KalturaExternalRecording(KalturaRecording):
    externalId: str
    metaData: map
    expiryDate: int
    def __init__(self,
            id: int = NotImplemented,
            status: KalturaRecordingStatus = NotImplemented,
            assetId: int = NotImplemented,
            type: KalturaRecordingType = NotImplemented,
            viewableUntilDate: int = NotImplemented,
            isProtected: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            duration: int = NotImplemented,
            externalId: str = NotImplemented,
            metaData: map = NotImplemented,
            expiryDate: int = NotImplemented): ...

    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getMetaData(self) -> map: ...
    def setMetaData(self, newMetaData: map) -> None: ...
    def getExpiryDate(self) -> int: ...

class KalturaImmediateRecording(KalturaRecording):
    endPadding: int
    absoluteStart: int
    absoluteEnd: int
    def __init__(self,
            id: int = NotImplemented,
            status: KalturaRecordingStatus = NotImplemented,
            assetId: int = NotImplemented,
            type: KalturaRecordingType = NotImplemented,
            viewableUntilDate: int = NotImplemented,
            isProtected: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            duration: int = NotImplemented,
            endPadding: int = NotImplemented,
            absoluteStart: int = NotImplemented,
            absoluteEnd: int = NotImplemented): ...

    def getEndPadding(self) -> int: ...
    def setEndPadding(self, newEndPadding: int) -> None: ...
    def getAbsoluteStart(self) -> int: ...
    def getAbsoluteEnd(self) -> int: ...

class KalturaPaddedRecording(KalturaRecording):
    startPadding: int
    endPadding: int
    startPaddingIsPersonal: bool
    endPaddingIsPersonal: bool
    def __init__(self,
            id: int = NotImplemented,
            status: KalturaRecordingStatus = NotImplemented,
            assetId: int = NotImplemented,
            type: KalturaRecordingType = NotImplemented,
            viewableUntilDate: int = NotImplemented,
            isProtected: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            duration: int = NotImplemented,
            startPadding: int = NotImplemented,
            endPadding: int = NotImplemented,
            startPaddingIsPersonal: bool = NotImplemented,
            endPaddingIsPersonal: bool = NotImplemented): ...

    def getStartPadding(self) -> int: ...
    def setStartPadding(self, newStartPadding: int) -> None: ...
    def getEndPadding(self) -> int: ...
    def setEndPadding(self, newEndPadding: int) -> None: ...
    def getStartPaddingIsPersonal(self) -> bool: ...
    def getEndPaddingIsPersonal(self) -> bool: ...

class KalturaRecordingListResponse(KalturaListResponse):
    objects: List[KalturaRecording]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaRecording] = NotImplemented): ...

    def getObjects(self) -> List[KalturaRecording]: ...
    def setObjects(self, newObjects: List[KalturaRecording]) -> None: ...

class KalturaSeriesRecordingOption(KalturaObjectBase):
    minSeasonNumber: int
    minEpisodeNumber: int
    chronologicalRecordStartTime: KalturaChronologicalRecordStartTime
    def __init__(self,
            minSeasonNumber: int = NotImplemented,
            minEpisodeNumber: int = NotImplemented,
            chronologicalRecordStartTime: KalturaChronologicalRecordStartTime = NotImplemented): ...

    def getMinSeasonNumber(self) -> int: ...
    def setMinSeasonNumber(self, newMinSeasonNumber: int) -> None: ...
    def getMinEpisodeNumber(self) -> int: ...
    def setMinEpisodeNumber(self, newMinEpisodeNumber: int) -> None: ...
    def getChronologicalRecordStartTime(self) -> KalturaChronologicalRecordStartTime: ...
    def setChronologicalRecordStartTime(self, newChronologicalRecordStartTime: KalturaChronologicalRecordStartTime) -> None: ...

class KalturaSeriesRecording(KalturaObjectBase):
    id: int
    epgId: int
    channelId: int
    seriesId: str
    seasonNumber: int
    type: KalturaRecordingType
    createDate: int
    updateDate: int
    excludedSeasons: List[KalturaIntegerValue]
    seriesRecordingOption: KalturaSeriesRecordingOption
    def __init__(self,
            id: int = NotImplemented,
            epgId: int = NotImplemented,
            channelId: int = NotImplemented,
            seriesId: str = NotImplemented,
            seasonNumber: int = NotImplemented,
            type: KalturaRecordingType = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            excludedSeasons: List[KalturaIntegerValue] = NotImplemented,
            seriesRecordingOption: KalturaSeriesRecordingOption = NotImplemented): ...

    def getId(self) -> int: ...
    def getEpgId(self) -> int: ...
    def setEpgId(self, newEpgId: int) -> None: ...
    def getChannelId(self) -> int: ...
    def setChannelId(self, newChannelId: int) -> None: ...
    def getSeriesId(self) -> str: ...
    def setSeriesId(self, newSeriesId: str) -> None: ...
    def getSeasonNumber(self) -> int: ...
    def setSeasonNumber(self, newSeasonNumber: int) -> None: ...
    def getType(self) -> KalturaRecordingType: ...
    def setType(self, newType: KalturaRecordingType) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getExcludedSeasons(self) -> List[KalturaIntegerValue]: ...
    def getSeriesRecordingOption(self) -> KalturaSeriesRecordingOption: ...
    def setSeriesRecordingOption(self, newSeriesRecordingOption: KalturaSeriesRecordingOption) -> None: ...

class KalturaSeriesRecordingListResponse(KalturaListResponse):
    objects: List[KalturaSeriesRecording]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSeriesRecording] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSeriesRecording]: ...
    def setObjects(self, newObjects: List[KalturaSeriesRecording]) -> None: ...

class KalturaExternalSeriesRecording(KalturaSeriesRecording):
    metaData: map
    def __init__(self,
            id: int = NotImplemented,
            epgId: int = NotImplemented,
            channelId: int = NotImplemented,
            seriesId: str = NotImplemented,
            seasonNumber: int = NotImplemented,
            type: KalturaRecordingType = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            excludedSeasons: List[KalturaIntegerValue] = NotImplemented,
            seriesRecordingOption: KalturaSeriesRecordingOption = NotImplemented,
            metaData: map = NotImplemented): ...

    def getMetaData(self) -> map: ...
    def setMetaData(self, newMetaData: map) -> None: ...

class KalturaAssetCommentListResponse(KalturaListResponse):
    objects: List[KalturaAssetComment]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetComment] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetComment]: ...
    def setObjects(self, newObjects: List[KalturaAssetComment]) -> None: ...

class KalturaAssetCount(KalturaObjectBase):
    value: str
    count: int
    subs: List[KalturaAssetsCount]
    def __init__(self,
            value: str = NotImplemented,
            count: int = NotImplemented,
            subs: List[KalturaAssetsCount] = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...
    def getCount(self) -> int: ...
    def setCount(self, newCount: int) -> None: ...
    def getSubs(self) -> List[KalturaAssetsCount]: ...
    def setSubs(self, newSubs: List[KalturaAssetsCount]) -> None: ...

class KalturaAssetsCount(KalturaObjectBase):
    field: str
    objects: List[KalturaAssetCount]
    def __init__(self,
            field: str = NotImplemented,
            objects: List[KalturaAssetCount] = NotImplemented): ...

    def getField(self) -> str: ...
    def setField(self, newField: str) -> None: ...
    def getObjects(self) -> List[KalturaAssetCount]: ...
    def setObjects(self, newObjects: List[KalturaAssetCount]) -> None: ...

class KalturaAssetCountListResponse(KalturaListResponse):
    assetsCount: int
    objects: List[KalturaAssetsCount]
    def __init__(self,
            totalCount: int = NotImplemented,
            assetsCount: int = NotImplemented,
            objects: List[KalturaAssetsCount] = NotImplemented): ...

    def getAssetsCount(self) -> int: ...
    def setAssetsCount(self, newAssetsCount: int) -> None: ...
    def getObjects(self) -> List[KalturaAssetsCount]: ...
    def setObjects(self, newObjects: List[KalturaAssetsCount]) -> None: ...

class KalturaAssetHistory(KalturaObjectBase):
    assetId: int
    assetType: KalturaAssetType
    position: int
    duration: int
    watchedDate: int
    finishedWatching: bool
    def __init__(self,
            assetId: int = NotImplemented,
            assetType: KalturaAssetType = NotImplemented,
            position: int = NotImplemented,
            duration: int = NotImplemented,
            watchedDate: int = NotImplemented,
            finishedWatching: bool = NotImplemented): ...

    def getAssetId(self) -> int: ...
    def getAssetType(self) -> KalturaAssetType: ...
    def getPosition(self) -> int: ...
    def getDuration(self) -> int: ...
    def getWatchedDate(self) -> int: ...
    def getFinishedWatching(self) -> bool: ...

class KalturaAssetHistoryListResponse(KalturaListResponse):
    objects: List[KalturaAssetHistory]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetHistory] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetHistory]: ...
    def setObjects(self, newObjects: List[KalturaAssetHistory]) -> None: ...

class KalturaRelatedEntity(KalturaObjectBase):
    id: str
    type: KalturaRelatedEntityType
    def __init__(self,
            id: str = NotImplemented,
            type: KalturaRelatedEntityType = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getType(self) -> KalturaRelatedEntityType: ...
    def setType(self, newType: KalturaRelatedEntityType) -> None: ...

class KalturaRelatedEntityArray(KalturaObjectBase):
    objects: List[KalturaRelatedEntity]
    def __init__(self,
            objects: List[KalturaRelatedEntity] = NotImplemented): ...

    def getObjects(self) -> List[KalturaRelatedEntity]: ...
    def setObjects(self, newObjects: List[KalturaRelatedEntity]) -> None: ...

class KalturaAsset(KalturaObjectBase):
    id: int
    type: int
    name: str
    multilingualName: List[KalturaTranslationToken]
    description: str
    multilingualDescription: List[KalturaTranslationToken]
    images: List[KalturaMediaImage]
    mediaFiles: List[KalturaMediaFile]
    metas: map
    tags: map
    relatedEntities: map
    startDate: int
    endDate: int
    createDate: int
    updateDate: int
    externalId: str
    indexStatus: KalturaAssetIndexStatus
    def __init__(self,
            id: int = NotImplemented,
            type: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            images: List[KalturaMediaImage] = NotImplemented,
            mediaFiles: List[KalturaMediaFile] = NotImplemented,
            metas: map = NotImplemented,
            tags: map = NotImplemented,
            relatedEntities: map = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            externalId: str = NotImplemented,
            indexStatus: KalturaAssetIndexStatus = NotImplemented): ...

    def getId(self) -> int: ...
    def getType(self) -> int: ...
    def setType(self, newType: int) -> None: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getDescription(self) -> str: ...
    def getMultilingualDescription(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualDescription(self, newMultilingualDescription: List[KalturaTranslationToken]) -> None: ...
    def getImages(self) -> List[KalturaMediaImage]: ...
    def getMediaFiles(self) -> List[KalturaMediaFile]: ...
    def getMetas(self) -> map: ...
    def setMetas(self, newMetas: map) -> None: ...
    def getTags(self) -> map: ...
    def setTags(self, newTags: map) -> None: ...
    def getRelatedEntities(self) -> map: ...
    def setRelatedEntities(self, newRelatedEntities: map) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getIndexStatus(self) -> KalturaAssetIndexStatus: ...

class KalturaAssetListResponse(KalturaListResponse):
    objects: List[KalturaAsset]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAsset] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAsset]: ...
    def setObjects(self, newObjects: List[KalturaAsset]) -> None: ...

class KalturaLiveToVodInfoAsset(KalturaObjectBase):
    linearAssetId: int
    epgId: str
    epgChannelId: int
    crid: str
    originalStartDate: int
    originalEndDate: int
    paddingBeforeProgramStarts: int
    paddingAfterProgramEnds: int
    def __init__(self,
            linearAssetId: int = NotImplemented,
            epgId: str = NotImplemented,
            epgChannelId: int = NotImplemented,
            crid: str = NotImplemented,
            originalStartDate: int = NotImplemented,
            originalEndDate: int = NotImplemented,
            paddingBeforeProgramStarts: int = NotImplemented,
            paddingAfterProgramEnds: int = NotImplemented): ...

    def getLinearAssetId(self) -> int: ...
    def setLinearAssetId(self, newLinearAssetId: int) -> None: ...
    def getEpgId(self) -> str: ...
    def setEpgId(self, newEpgId: str) -> None: ...
    def getEpgChannelId(self) -> int: ...
    def setEpgChannelId(self, newEpgChannelId: int) -> None: ...
    def getCrid(self) -> str: ...
    def setCrid(self, newCrid: str) -> None: ...
    def getOriginalStartDate(self) -> int: ...
    def setOriginalStartDate(self, newOriginalStartDate: int) -> None: ...
    def getOriginalEndDate(self) -> int: ...
    def setOriginalEndDate(self, newOriginalEndDate: int) -> None: ...
    def getPaddingBeforeProgramStarts(self) -> int: ...
    def setPaddingBeforeProgramStarts(self, newPaddingBeforeProgramStarts: int) -> None: ...
    def getPaddingAfterProgramEnds(self) -> int: ...
    def setPaddingAfterProgramEnds(self, newPaddingAfterProgramEnds: int) -> None: ...

class KalturaMediaAsset(KalturaAsset):
    externalIds: str
    entryId: str
    deviceRuleId: int
    geoBlockRuleId: int
    status: bool
    inheritancePolicy: KalturaAssetInheritancePolicy
    liveToVod: KalturaLiveToVodInfoAsset
    def __init__(self,
            id: int = NotImplemented,
            type: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            images: List[KalturaMediaImage] = NotImplemented,
            mediaFiles: List[KalturaMediaFile] = NotImplemented,
            metas: map = NotImplemented,
            tags: map = NotImplemented,
            relatedEntities: map = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            externalId: str = NotImplemented,
            indexStatus: KalturaAssetIndexStatus = NotImplemented,
            externalIds: str = NotImplemented,
            entryId: str = NotImplemented,
            deviceRuleId: int = NotImplemented,
            geoBlockRuleId: int = NotImplemented,
            status: bool = NotImplemented,
            inheritancePolicy: KalturaAssetInheritancePolicy = NotImplemented,
            liveToVod: KalturaLiveToVodInfoAsset = NotImplemented): ...

    def getExternalIds(self) -> str: ...
    def setExternalIds(self, newExternalIds: str) -> None: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getDeviceRuleId(self) -> int: ...
    def setDeviceRuleId(self, newDeviceRuleId: int) -> None: ...
    def getGeoBlockRuleId(self) -> int: ...
    def setGeoBlockRuleId(self, newGeoBlockRuleId: int) -> None: ...
    def getStatus(self) -> bool: ...
    def setStatus(self, newStatus: bool) -> None: ...
    def getInheritancePolicy(self) -> KalturaAssetInheritancePolicy: ...
    def setInheritancePolicy(self, newInheritancePolicy: KalturaAssetInheritancePolicy) -> None: ...
    def getLiveToVod(self) -> KalturaLiveToVodInfoAsset: ...
    def setLiveToVod(self, newLiveToVod: KalturaLiveToVodInfoAsset) -> None: ...

class KalturaLiveAsset(KalturaMediaAsset):
    enableCdvrState: KalturaTimeShiftedTvState
    enableCatchUpState: KalturaTimeShiftedTvState
    enableStartOverState: KalturaTimeShiftedTvState
    bufferCatchUpSetting: int
    paddingBeforeProgramStarts: int
    paddingAfterProgramEnds: int
    bufferTrickPlaySetting: int
    enableRecordingPlaybackNonEntitledChannelState: KalturaTimeShiftedTvState
    enableTrickPlayState: KalturaTimeShiftedTvState
    externalEpgIngestId: str
    externalCdvrId: str
    enableCdvr: bool
    enableCatchUp: bool
    enableStartOver: bool
    catchUpBuffer: int
    trickPlayBuffer: int
    enableRecordingPlaybackNonEntitledChannel: bool
    enableTrickPlay: bool
    channelType: KalturaLinearChannelType
    def __init__(self,
            id: int = NotImplemented,
            type: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            images: List[KalturaMediaImage] = NotImplemented,
            mediaFiles: List[KalturaMediaFile] = NotImplemented,
            metas: map = NotImplemented,
            tags: map = NotImplemented,
            relatedEntities: map = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            externalId: str = NotImplemented,
            indexStatus: KalturaAssetIndexStatus = NotImplemented,
            externalIds: str = NotImplemented,
            entryId: str = NotImplemented,
            deviceRuleId: int = NotImplemented,
            geoBlockRuleId: int = NotImplemented,
            status: bool = NotImplemented,
            inheritancePolicy: KalturaAssetInheritancePolicy = NotImplemented,
            liveToVod: KalturaLiveToVodInfoAsset = NotImplemented,
            enableCdvrState: KalturaTimeShiftedTvState = NotImplemented,
            enableCatchUpState: KalturaTimeShiftedTvState = NotImplemented,
            enableStartOverState: KalturaTimeShiftedTvState = NotImplemented,
            bufferCatchUpSetting: int = NotImplemented,
            paddingBeforeProgramStarts: int = NotImplemented,
            paddingAfterProgramEnds: int = NotImplemented,
            bufferTrickPlaySetting: int = NotImplemented,
            enableRecordingPlaybackNonEntitledChannelState: KalturaTimeShiftedTvState = NotImplemented,
            enableTrickPlayState: KalturaTimeShiftedTvState = NotImplemented,
            externalEpgIngestId: str = NotImplemented,
            externalCdvrId: str = NotImplemented,
            enableCdvr: bool = NotImplemented,
            enableCatchUp: bool = NotImplemented,
            enableStartOver: bool = NotImplemented,
            catchUpBuffer: int = NotImplemented,
            trickPlayBuffer: int = NotImplemented,
            enableRecordingPlaybackNonEntitledChannel: bool = NotImplemented,
            enableTrickPlay: bool = NotImplemented,
            channelType: KalturaLinearChannelType = NotImplemented): ...

    def getEnableCdvrState(self) -> KalturaTimeShiftedTvState: ...
    def setEnableCdvrState(self, newEnableCdvrState: KalturaTimeShiftedTvState) -> None: ...
    def getEnableCatchUpState(self) -> KalturaTimeShiftedTvState: ...
    def setEnableCatchUpState(self, newEnableCatchUpState: KalturaTimeShiftedTvState) -> None: ...
    def getEnableStartOverState(self) -> KalturaTimeShiftedTvState: ...
    def setEnableStartOverState(self, newEnableStartOverState: KalturaTimeShiftedTvState) -> None: ...
    def getBufferCatchUpSetting(self) -> int: ...
    def setBufferCatchUpSetting(self, newBufferCatchUpSetting: int) -> None: ...
    def getPaddingBeforeProgramStarts(self) -> int: ...
    def setPaddingBeforeProgramStarts(self, newPaddingBeforeProgramStarts: int) -> None: ...
    def getPaddingAfterProgramEnds(self) -> int: ...
    def setPaddingAfterProgramEnds(self, newPaddingAfterProgramEnds: int) -> None: ...
    def getBufferTrickPlaySetting(self) -> int: ...
    def setBufferTrickPlaySetting(self, newBufferTrickPlaySetting: int) -> None: ...
    def getEnableRecordingPlaybackNonEntitledChannelState(self) -> KalturaTimeShiftedTvState: ...
    def setEnableRecordingPlaybackNonEntitledChannelState(self, newEnableRecordingPlaybackNonEntitledChannelState: KalturaTimeShiftedTvState) -> None: ...
    def getEnableTrickPlayState(self) -> KalturaTimeShiftedTvState: ...
    def setEnableTrickPlayState(self, newEnableTrickPlayState: KalturaTimeShiftedTvState) -> None: ...
    def getExternalEpgIngestId(self) -> str: ...
    def setExternalEpgIngestId(self, newExternalEpgIngestId: str) -> None: ...
    def getExternalCdvrId(self) -> str: ...
    def setExternalCdvrId(self, newExternalCdvrId: str) -> None: ...
    def getEnableCdvr(self) -> bool: ...
    def getEnableCatchUp(self) -> bool: ...
    def getEnableStartOver(self) -> bool: ...
    def getCatchUpBuffer(self) -> int: ...
    def getTrickPlayBuffer(self) -> int: ...
    def getEnableRecordingPlaybackNonEntitledChannel(self) -> bool: ...
    def getEnableTrickPlay(self) -> bool: ...
    def getChannelType(self) -> KalturaLinearChannelType: ...
    def setChannelType(self, newChannelType: KalturaLinearChannelType) -> None: ...

class KalturaLineupChannelAsset(KalturaLiveAsset):
    lcn: int
    def __init__(self,
            id: int = NotImplemented,
            type: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            images: List[KalturaMediaImage] = NotImplemented,
            mediaFiles: List[KalturaMediaFile] = NotImplemented,
            metas: map = NotImplemented,
            tags: map = NotImplemented,
            relatedEntities: map = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            externalId: str = NotImplemented,
            indexStatus: KalturaAssetIndexStatus = NotImplemented,
            externalIds: str = NotImplemented,
            entryId: str = NotImplemented,
            deviceRuleId: int = NotImplemented,
            geoBlockRuleId: int = NotImplemented,
            status: bool = NotImplemented,
            inheritancePolicy: KalturaAssetInheritancePolicy = NotImplemented,
            liveToVod: KalturaLiveToVodInfoAsset = NotImplemented,
            enableCdvrState: KalturaTimeShiftedTvState = NotImplemented,
            enableCatchUpState: KalturaTimeShiftedTvState = NotImplemented,
            enableStartOverState: KalturaTimeShiftedTvState = NotImplemented,
            bufferCatchUpSetting: int = NotImplemented,
            paddingBeforeProgramStarts: int = NotImplemented,
            paddingAfterProgramEnds: int = NotImplemented,
            bufferTrickPlaySetting: int = NotImplemented,
            enableRecordingPlaybackNonEntitledChannelState: KalturaTimeShiftedTvState = NotImplemented,
            enableTrickPlayState: KalturaTimeShiftedTvState = NotImplemented,
            externalEpgIngestId: str = NotImplemented,
            externalCdvrId: str = NotImplemented,
            enableCdvr: bool = NotImplemented,
            enableCatchUp: bool = NotImplemented,
            enableStartOver: bool = NotImplemented,
            catchUpBuffer: int = NotImplemented,
            trickPlayBuffer: int = NotImplemented,
            enableRecordingPlaybackNonEntitledChannel: bool = NotImplemented,
            enableTrickPlay: bool = NotImplemented,
            channelType: KalturaLinearChannelType = NotImplemented,
            lcn: int = NotImplemented): ...

    def getLcn(self) -> int: ...
    def setLcn(self, newLcn: int) -> None: ...

class KalturaProgramAsset(KalturaAsset):
    epgChannelId: int
    epgId: str
    relatedMediaId: int
    crid: str
    linearAssetId: int
    enableCdvr: bool
    enableCatchUp: bool
    enableStartOver: bool
    enableTrickPlay: bool
    externalOfferIds: str
    def __init__(self,
            id: int = NotImplemented,
            type: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            images: List[KalturaMediaImage] = NotImplemented,
            mediaFiles: List[KalturaMediaFile] = NotImplemented,
            metas: map = NotImplemented,
            tags: map = NotImplemented,
            relatedEntities: map = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            externalId: str = NotImplemented,
            indexStatus: KalturaAssetIndexStatus = NotImplemented,
            epgChannelId: int = NotImplemented,
            epgId: str = NotImplemented,
            relatedMediaId: int = NotImplemented,
            crid: str = NotImplemented,
            linearAssetId: int = NotImplemented,
            enableCdvr: bool = NotImplemented,
            enableCatchUp: bool = NotImplemented,
            enableStartOver: bool = NotImplemented,
            enableTrickPlay: bool = NotImplemented,
            externalOfferIds: str = NotImplemented): ...

    def getEpgChannelId(self) -> int: ...
    def getEpgId(self) -> str: ...
    def getRelatedMediaId(self) -> int: ...
    def setRelatedMediaId(self, newRelatedMediaId: int) -> None: ...
    def getCrid(self) -> str: ...
    def setCrid(self, newCrid: str) -> None: ...
    def getLinearAssetId(self) -> int: ...
    def setLinearAssetId(self, newLinearAssetId: int) -> None: ...
    def getEnableCdvr(self) -> bool: ...
    def setEnableCdvr(self, newEnableCdvr: bool) -> None: ...
    def getEnableCatchUp(self) -> bool: ...
    def setEnableCatchUp(self, newEnableCatchUp: bool) -> None: ...
    def getEnableStartOver(self) -> bool: ...
    def setEnableStartOver(self, newEnableStartOver: bool) -> None: ...
    def getEnableTrickPlay(self) -> bool: ...
    def setEnableTrickPlay(self, newEnableTrickPlay: bool) -> None: ...
    def getExternalOfferIds(self) -> str: ...
    def setExternalOfferIds(self, newExternalOfferIds: str) -> None: ...

class KalturaRecordingAsset(KalturaProgramAsset):
    recordingId: str
    recordingType: KalturaRecordingType
    viewableUntilDate: int
    multiRecord: bool
    def __init__(self,
            id: int = NotImplemented,
            type: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            images: List[KalturaMediaImage] = NotImplemented,
            mediaFiles: List[KalturaMediaFile] = NotImplemented,
            metas: map = NotImplemented,
            tags: map = NotImplemented,
            relatedEntities: map = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            externalId: str = NotImplemented,
            indexStatus: KalturaAssetIndexStatus = NotImplemented,
            epgChannelId: int = NotImplemented,
            epgId: str = NotImplemented,
            relatedMediaId: int = NotImplemented,
            crid: str = NotImplemented,
            linearAssetId: int = NotImplemented,
            enableCdvr: bool = NotImplemented,
            enableCatchUp: bool = NotImplemented,
            enableStartOver: bool = NotImplemented,
            enableTrickPlay: bool = NotImplemented,
            externalOfferIds: str = NotImplemented,
            recordingId: str = NotImplemented,
            recordingType: KalturaRecordingType = NotImplemented,
            viewableUntilDate: int = NotImplemented,
            multiRecord: bool = NotImplemented): ...

    def getRecordingId(self) -> str: ...
    def setRecordingId(self, newRecordingId: str) -> None: ...
    def getRecordingType(self) -> KalturaRecordingType: ...
    def setRecordingType(self, newRecordingType: KalturaRecordingType) -> None: ...
    def getViewableUntilDate(self) -> int: ...
    def setViewableUntilDate(self, newViewableUntilDate: int) -> None: ...
    def getMultiRecord(self) -> bool: ...
    def setMultiRecord(self, newMultiRecord: bool) -> None: ...

class KalturaEpg(KalturaProgramAsset):
    def __init__(self,
            id: int = NotImplemented,
            type: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            description: str = NotImplemented,
            multilingualDescription: List[KalturaTranslationToken] = NotImplemented,
            images: List[KalturaMediaImage] = NotImplemented,
            mediaFiles: List[KalturaMediaFile] = NotImplemented,
            metas: map = NotImplemented,
            tags: map = NotImplemented,
            relatedEntities: map = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            externalId: str = NotImplemented,
            indexStatus: KalturaAssetIndexStatus = NotImplemented,
            epgChannelId: int = NotImplemented,
            epgId: str = NotImplemented,
            relatedMediaId: int = NotImplemented,
            crid: str = NotImplemented,
            linearAssetId: int = NotImplemented,
            enableCdvr: bool = NotImplemented,
            enableCatchUp: bool = NotImplemented,
            enableStartOver: bool = NotImplemented,
            enableTrickPlay: bool = NotImplemented,
            externalOfferIds: str = NotImplemented): ...
        pass

class KalturaAssetStatisticsListResponse(KalturaListResponse):
    objects: List[KalturaAssetStatistics]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetStatistics] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetStatistics]: ...
    def setObjects(self, newObjects: List[KalturaAssetStatistics]) -> None: ...

class KalturaAssetStruct(KalturaObjectBase):
    id: int
    name: str
    multilingualName: List[KalturaTranslationToken]
    systemName: str
    isProtected: bool
    metaIds: str
    createDate: int
    updateDate: int
    features: str
    pluralName: str
    parentId: int
    connectingMetaId: int
    connectedParentMetaId: int
    dynamicData: map
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            systemName: str = NotImplemented,
            isProtected: bool = NotImplemented,
            metaIds: str = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            features: str = NotImplemented,
            pluralName: str = NotImplemented,
            parentId: int = NotImplemented,
            connectingMetaId: int = NotImplemented,
            connectedParentMetaId: int = NotImplemented,
            dynamicData: map = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getIsProtected(self) -> bool: ...
    def setIsProtected(self, newIsProtected: bool) -> None: ...
    def getMetaIds(self) -> str: ...
    def setMetaIds(self, newMetaIds: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getFeatures(self) -> str: ...
    def setFeatures(self, newFeatures: str) -> None: ...
    def getPluralName(self) -> str: ...
    def setPluralName(self, newPluralName: str) -> None: ...
    def getParentId(self) -> int: ...
    def setParentId(self, newParentId: int) -> None: ...
    def getConnectingMetaId(self) -> int: ...
    def setConnectingMetaId(self, newConnectingMetaId: int) -> None: ...
    def getConnectedParentMetaId(self) -> int: ...
    def setConnectedParentMetaId(self, newConnectedParentMetaId: int) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...

class KalturaAssetStructListResponse(KalturaListResponse):
    objects: List[KalturaAssetStruct]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetStruct] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetStruct]: ...
    def setObjects(self, newObjects: List[KalturaAssetStruct]) -> None: ...

class KalturaAssetStructMeta(KalturaObjectBase):
    assetStructId: int
    metaId: int
    ingestReferencePath: str
    protectFromIngest: bool
    defaultIngestValue: str
    createDate: int
    updateDate: int
    isInherited: bool
    isLocationTag: bool
    suppressedOrder: int
    aliasName: str
    def __init__(self,
            assetStructId: int = NotImplemented,
            metaId: int = NotImplemented,
            ingestReferencePath: str = NotImplemented,
            protectFromIngest: bool = NotImplemented,
            defaultIngestValue: str = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            isInherited: bool = NotImplemented,
            isLocationTag: bool = NotImplemented,
            suppressedOrder: int = NotImplemented,
            aliasName: str = NotImplemented): ...

    def getAssetStructId(self) -> int: ...
    def getMetaId(self) -> int: ...
    def getIngestReferencePath(self) -> str: ...
    def setIngestReferencePath(self, newIngestReferencePath: str) -> None: ...
    def getProtectFromIngest(self) -> bool: ...
    def setProtectFromIngest(self, newProtectFromIngest: bool) -> None: ...
    def getDefaultIngestValue(self) -> str: ...
    def setDefaultIngestValue(self, newDefaultIngestValue: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getIsInherited(self) -> bool: ...
    def setIsInherited(self, newIsInherited: bool) -> None: ...
    def getIsLocationTag(self) -> bool: ...
    def setIsLocationTag(self, newIsLocationTag: bool) -> None: ...
    def getSuppressedOrder(self) -> int: ...
    def setSuppressedOrder(self, newSuppressedOrder: int) -> None: ...
    def getAliasName(self) -> str: ...
    def setAliasName(self, newAliasName: str) -> None: ...

class KalturaAssetStructMetaListResponse(KalturaListResponse):
    objects: List[KalturaAssetStructMeta]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetStructMeta] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetStructMeta]: ...
    def setObjects(self, newObjects: List[KalturaAssetStructMeta]) -> None: ...

class KalturaBookmarkListResponse(KalturaListResponse):
    objects: List[KalturaBookmark]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaBookmark] = NotImplemented): ...

    def getObjects(self) -> List[KalturaBookmark]: ...
    def setObjects(self, newObjects: List[KalturaBookmark]) -> None: ...

class KalturaCategoryItemListResponse(KalturaListResponse):
    objects: List[KalturaCategoryItem]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCategoryItem] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCategoryItem]: ...
    def setObjects(self, newObjects: List[KalturaCategoryItem]) -> None: ...

class KalturaCategoryVersionListResponse(KalturaListResponse):
    objects: List[KalturaCategoryVersion]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCategoryVersion] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCategoryVersion]: ...
    def setObjects(self, newObjects: List[KalturaCategoryVersion]) -> None: ...

class KalturaChannelListResponse(KalturaListResponse):
    objects: List[KalturaChannel]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaChannel] = NotImplemented): ...

    def getObjects(self) -> List[KalturaChannel]: ...
    def setObjects(self, newObjects: List[KalturaChannel]) -> None: ...

class KalturaImage(KalturaObjectBase):
    id: int
    version: str
    imageTypeId: int
    imageTypeName: str
    imageObjectId: int
    imageObjectType: KalturaImageObjectType
    status: KalturaImageStatus
    url: str
    contentId: str
    isDefault: bool
    def __init__(self,
            id: int = NotImplemented,
            version: str = NotImplemented,
            imageTypeId: int = NotImplemented,
            imageTypeName: str = NotImplemented,
            imageObjectId: int = NotImplemented,
            imageObjectType: KalturaImageObjectType = NotImplemented,
            status: KalturaImageStatus = NotImplemented,
            url: str = NotImplemented,
            contentId: str = NotImplemented,
            isDefault: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getVersion(self) -> str: ...
    def getImageTypeId(self) -> int: ...
    def setImageTypeId(self, newImageTypeId: int) -> None: ...
    def getImageTypeName(self) -> str: ...
    def setImageTypeName(self, newImageTypeName: str) -> None: ...
    def getImageObjectId(self) -> int: ...
    def setImageObjectId(self, newImageObjectId: int) -> None: ...
    def getImageObjectType(self) -> KalturaImageObjectType: ...
    def setImageObjectType(self, newImageObjectType: KalturaImageObjectType) -> None: ...
    def getStatus(self) -> KalturaImageStatus: ...
    def getUrl(self) -> str: ...
    def getContentId(self) -> str: ...
    def getIsDefault(self) -> bool: ...

class KalturaImageListResponse(KalturaListResponse):
    objects: List[KalturaImage]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaImage] = NotImplemented): ...

    def getObjects(self) -> List[KalturaImage]: ...
    def setObjects(self, newObjects: List[KalturaImage]) -> None: ...

class KalturaImageType(KalturaObjectBase):
    id: int
    name: str
    systemName: str
    ratioId: int
    helpText: str
    defaultImageId: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            ratioId: int = NotImplemented,
            helpText: str = NotImplemented,
            defaultImageId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getRatioId(self) -> int: ...
    def setRatioId(self, newRatioId: int) -> None: ...
    def getHelpText(self) -> str: ...
    def setHelpText(self, newHelpText: str) -> None: ...
    def getDefaultImageId(self) -> int: ...
    def setDefaultImageId(self, newDefaultImageId: int) -> None: ...

class KalturaImageTypeListResponse(KalturaListResponse):
    objects: List[KalturaImageType]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaImageType] = NotImplemented): ...

    def getObjects(self) -> List[KalturaImageType]: ...
    def setObjects(self, newObjects: List[KalturaImageType]) -> None: ...

class KalturaLabel(KalturaObjectBase):
    id: int
    value: str
    entityAttribute: KalturaEntityAttribute
    def __init__(self,
            id: int = NotImplemented,
            value: str = NotImplemented,
            entityAttribute: KalturaEntityAttribute = NotImplemented): ...

    def getId(self) -> int: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...
    def getEntityAttribute(self) -> KalturaEntityAttribute: ...
    def setEntityAttribute(self, newEntityAttribute: KalturaEntityAttribute) -> None: ...

class KalturaLabelListResponse(KalturaListResponse):
    objects: List[KalturaLabel]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaLabel] = NotImplemented): ...

    def getObjects(self) -> List[KalturaLabel]: ...
    def setObjects(self, newObjects: List[KalturaLabel]) -> None: ...

class KalturaLineupChannelAssetListResponse(KalturaListResponse):
    objects: List[KalturaLineupChannelAsset]
    lineupExternalId: str
    parentLineupExternalId: str
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaLineupChannelAsset] = NotImplemented,
            lineupExternalId: str = NotImplemented,
            parentLineupExternalId: str = NotImplemented): ...

    def getObjects(self) -> List[KalturaLineupChannelAsset]: ...
    def setObjects(self, newObjects: List[KalturaLineupChannelAsset]) -> None: ...
    def getLineupExternalId(self) -> str: ...
    def setLineupExternalId(self, newLineupExternalId: str) -> None: ...
    def getParentLineupExternalId(self) -> str: ...
    def setParentLineupExternalId(self, newParentLineupExternalId: str) -> None: ...

class KalturaMediaFileDynamicData(KalturaObjectBase):
    id: int
    mediaFileTypeId: int
    mediaFileTypeKeyName: str
    value: str
    def __init__(self,
            id: int = NotImplemented,
            mediaFileTypeId: int = NotImplemented,
            mediaFileTypeKeyName: str = NotImplemented,
            value: str = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getMediaFileTypeId(self) -> int: ...
    def setMediaFileTypeId(self, newMediaFileTypeId: int) -> None: ...
    def getMediaFileTypeKeyName(self) -> str: ...
    def setMediaFileTypeKeyName(self, newMediaFileTypeKeyName: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaMediaFileDynamicDataListResponse(KalturaListResponse):
    objects: List[KalturaMediaFileDynamicData]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaMediaFileDynamicData] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMediaFileDynamicData]: ...
    def setObjects(self, newObjects: List[KalturaMediaFileDynamicData]) -> None: ...

class KalturaMediaFileListResponse(KalturaListResponse):
    objects: List[KalturaMediaFile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaMediaFile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMediaFile]: ...
    def setObjects(self, newObjects: List[KalturaMediaFile]) -> None: ...

class KalturaMediaFileType(KalturaObjectBase):
    id: int
    name: str
    description: str
    status: bool
    createDate: int
    updateDate: int
    isTrailer: bool
    streamerType: KalturaMediaFileStreamerType
    drmProfileId: int
    quality: KalturaMediaFileTypeQuality
    videoCodecs: str
    audioCodecs: str
    dynamicDataKeys: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            status: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            isTrailer: bool = NotImplemented,
            streamerType: KalturaMediaFileStreamerType = NotImplemented,
            drmProfileId: int = NotImplemented,
            quality: KalturaMediaFileTypeQuality = NotImplemented,
            videoCodecs: str = NotImplemented,
            audioCodecs: str = NotImplemented,
            dynamicDataKeys: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getStatus(self) -> bool: ...
    def setStatus(self, newStatus: bool) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getIsTrailer(self) -> bool: ...
    def setIsTrailer(self, newIsTrailer: bool) -> None: ...
    def getStreamerType(self) -> KalturaMediaFileStreamerType: ...
    def setStreamerType(self, newStreamerType: KalturaMediaFileStreamerType) -> None: ...
    def getDrmProfileId(self) -> int: ...
    def setDrmProfileId(self, newDrmProfileId: int) -> None: ...
    def getQuality(self) -> KalturaMediaFileTypeQuality: ...
    def setQuality(self, newQuality: KalturaMediaFileTypeQuality) -> None: ...
    def getVideoCodecs(self) -> str: ...
    def setVideoCodecs(self, newVideoCodecs: str) -> None: ...
    def getAudioCodecs(self) -> str: ...
    def setAudioCodecs(self, newAudioCodecs: str) -> None: ...
    def getDynamicDataKeys(self) -> str: ...
    def setDynamicDataKeys(self, newDynamicDataKeys: str) -> None: ...

class KalturaMediaFileTypeListResponse(KalturaListResponse):
    objects: List[KalturaMediaFileType]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaMediaFileType] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMediaFileType]: ...
    def setObjects(self, newObjects: List[KalturaMediaFileType]) -> None: ...

class KalturaRatio(KalturaObjectBase):
    id: int
    name: str
    height: int
    width: int
    precisionPrecentage: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            height: int = NotImplemented,
            width: int = NotImplemented,
            precisionPrecentage: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...
    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getPrecisionPrecentage(self) -> int: ...
    def setPrecisionPrecentage(self, newPrecisionPrecentage: int) -> None: ...

class KalturaRatioListResponse(KalturaListResponse):
    objects: List[KalturaRatio]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaRatio] = NotImplemented): ...

    def getObjects(self) -> List[KalturaRatio]: ...
    def setObjects(self, newObjects: List[KalturaRatio]) -> None: ...

class KalturaStreamingDevice(KalturaObjectBase):
    asset: KalturaSlimAsset
    userId: str
    udid: str
    def __init__(self,
            asset: KalturaSlimAsset = NotImplemented,
            userId: str = NotImplemented,
            udid: str = NotImplemented): ...

    def getAsset(self) -> KalturaSlimAsset: ...
    def getUserId(self) -> str: ...
    def getUdid(self) -> str: ...
    def setUdid(self, newUdid: str) -> None: ...

class KalturaStreamingDeviceListResponse(KalturaListResponse):
    objects: List[KalturaStreamingDevice]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaStreamingDevice] = NotImplemented): ...

    def getObjects(self) -> List[KalturaStreamingDevice]: ...
    def setObjects(self, newObjects: List[KalturaStreamingDevice]) -> None: ...

class KalturaTag(KalturaObjectBase):
    id: int
    type: int
    tag: str
    multilingualTag: List[KalturaTranslationToken]
    def __init__(self,
            id: int = NotImplemented,
            type: int = NotImplemented,
            tag: str = NotImplemented,
            multilingualTag: List[KalturaTranslationToken] = NotImplemented): ...

    def getId(self) -> int: ...
    def getType(self) -> int: ...
    def setType(self, newType: int) -> None: ...
    def getTag(self) -> str: ...
    def getMultilingualTag(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualTag(self, newMultilingualTag: List[KalturaTranslationToken]) -> None: ...

class KalturaTagListResponse(KalturaListResponse):
    objects: List[KalturaTag]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaTag] = NotImplemented): ...

    def getObjects(self) -> List[KalturaTag]: ...
    def setObjects(self, newObjects: List[KalturaTag]) -> None: ...

class KalturaSearchPriorityCriteria(KalturaObjectBase):
    type: KalturaSearchPriorityCriteriaType
    value: str
    def __init__(self,
            type: KalturaSearchPriorityCriteriaType = NotImplemented,
            value: str = NotImplemented): ...

    def getType(self) -> KalturaSearchPriorityCriteriaType: ...
    def setType(self, newType: KalturaSearchPriorityCriteriaType) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaSearchPriorityGroup(KalturaObjectBase):
    id: int
    name: str
    multilingualName: List[KalturaTranslationToken]
    criteria: KalturaSearchPriorityCriteria
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            criteria: KalturaSearchPriorityCriteria = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getCriteria(self) -> KalturaSearchPriorityCriteria: ...
    def setCriteria(self, newCriteria: KalturaSearchPriorityCriteria) -> None: ...

class KalturaSearchPriorityGroupListResponse(KalturaListResponse):
    objects: List[KalturaSearchPriorityGroup]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSearchPriorityGroup] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSearchPriorityGroup]: ...
    def setObjects(self, newObjects: List[KalturaSearchPriorityGroup]) -> None: ...

class KalturaSuspendSettings(KalturaObjectBase):
    revokeEntitlements: bool
    stopRenew: bool
    def __init__(self,
            revokeEntitlements: bool = NotImplemented,
            stopRenew: bool = NotImplemented): ...

    def getRevokeEntitlements(self) -> bool: ...
    def setRevokeEntitlements(self, newRevokeEntitlements: bool) -> None: ...
    def getStopRenew(self) -> bool: ...
    def setStopRenew(self, newStopRenew: bool) -> None: ...

class KalturaHouseholdPaymentGateway(KalturaObjectBase):
    id: int
    name: str
    isDefault: bool
    selectedBy: KalturaHouseholdPaymentGatewaySelectedBy
    suspendSettings: KalturaSuspendSettings
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isDefault: bool = NotImplemented,
            selectedBy: KalturaHouseholdPaymentGatewaySelectedBy = NotImplemented,
            suspendSettings: KalturaSuspendSettings = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsDefault(self) -> bool: ...
    def setIsDefault(self, newIsDefault: bool) -> None: ...
    def getSelectedBy(self) -> KalturaHouseholdPaymentGatewaySelectedBy: ...
    def setSelectedBy(self, newSelectedBy: KalturaHouseholdPaymentGatewaySelectedBy) -> None: ...
    def getSuspendSettings(self) -> KalturaSuspendSettings: ...

class KalturaHouseholdPaymentGatewayListResponse(KalturaListResponse):
    objects: List[KalturaHouseholdPaymentGateway]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHouseholdPaymentGateway] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHouseholdPaymentGateway]: ...
    def setObjects(self, newObjects: List[KalturaHouseholdPaymentGateway]) -> None: ...

class KalturaHouseholdPaymentMethod(KalturaObjectBase):
    id: int
    externalId: str
    paymentGatewayId: int
    details: str
    isDefault: bool
    paymentMethodProfileId: int
    def __init__(self,
            id: int = NotImplemented,
            externalId: str = NotImplemented,
            paymentGatewayId: int = NotImplemented,
            details: str = NotImplemented,
            isDefault: bool = NotImplemented,
            paymentMethodProfileId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getPaymentGatewayId(self) -> int: ...
    def setPaymentGatewayId(self, newPaymentGatewayId: int) -> None: ...
    def getDetails(self) -> str: ...
    def setDetails(self, newDetails: str) -> None: ...
    def getIsDefault(self) -> bool: ...
    def getPaymentMethodProfileId(self) -> int: ...
    def setPaymentMethodProfileId(self, newPaymentMethodProfileId: int) -> None: ...

class KalturaHouseholdPaymentMethodListResponse(KalturaListResponse):
    objects: List[KalturaHouseholdPaymentMethod]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaHouseholdPaymentMethod] = NotImplemented): ...

    def getObjects(self) -> List[KalturaHouseholdPaymentMethod]: ...
    def setObjects(self, newObjects: List[KalturaHouseholdPaymentMethod]) -> None: ...

class KalturaPaymentGatewayBaseProfile(KalturaObjectBase):
    id: int
    name: str
    isDefault: bool
    selectedBy: KalturaHouseholdPaymentGatewaySelectedBy
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isDefault: bool = NotImplemented,
            selectedBy: KalturaHouseholdPaymentGatewaySelectedBy = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsDefault(self) -> bool: ...
    def setIsDefault(self, newIsDefault: bool) -> None: ...
    def getSelectedBy(self) -> KalturaHouseholdPaymentGatewaySelectedBy: ...
    def setSelectedBy(self, newSelectedBy: KalturaHouseholdPaymentGatewaySelectedBy) -> None: ...

class KalturaPaymentGatewayProfile(KalturaPaymentGatewayBaseProfile):
    isActive: int
    adapterUrl: str
    transactUrl: str
    statusUrl: str
    renewUrl: str
    paymentGatewaySettings: map
    externalIdentifier: str
    pendingInterval: int
    pendingRetries: int
    sharedSecret: str
    renewIntervalMinutes: int
    renewStartMinutes: int
    externalVerification: bool
    isAsyncPolicy: bool
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isDefault: bool = NotImplemented,
            selectedBy: KalturaHouseholdPaymentGatewaySelectedBy = NotImplemented,
            isActive: int = NotImplemented,
            adapterUrl: str = NotImplemented,
            transactUrl: str = NotImplemented,
            statusUrl: str = NotImplemented,
            renewUrl: str = NotImplemented,
            paymentGatewaySettings: map = NotImplemented,
            externalIdentifier: str = NotImplemented,
            pendingInterval: int = NotImplemented,
            pendingRetries: int = NotImplemented,
            sharedSecret: str = NotImplemented,
            renewIntervalMinutes: int = NotImplemented,
            renewStartMinutes: int = NotImplemented,
            externalVerification: bool = NotImplemented,
            isAsyncPolicy: bool = NotImplemented): ...

    def getIsActive(self) -> int: ...
    def setIsActive(self, newIsActive: int) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getTransactUrl(self) -> str: ...
    def setTransactUrl(self, newTransactUrl: str) -> None: ...
    def getStatusUrl(self) -> str: ...
    def setStatusUrl(self, newStatusUrl: str) -> None: ...
    def getRenewUrl(self) -> str: ...
    def setRenewUrl(self, newRenewUrl: str) -> None: ...
    def getPaymentGatewaySettings(self) -> map: ...
    def setPaymentGatewaySettings(self, newPaymentGatewaySettings: map) -> None: ...
    def getExternalIdentifier(self) -> str: ...
    def setExternalIdentifier(self, newExternalIdentifier: str) -> None: ...
    def getPendingInterval(self) -> int: ...
    def setPendingInterval(self, newPendingInterval: int) -> None: ...
    def getPendingRetries(self) -> int: ...
    def setPendingRetries(self, newPendingRetries: int) -> None: ...
    def getSharedSecret(self) -> str: ...
    def setSharedSecret(self, newSharedSecret: str) -> None: ...
    def getRenewIntervalMinutes(self) -> int: ...
    def setRenewIntervalMinutes(self, newRenewIntervalMinutes: int) -> None: ...
    def getRenewStartMinutes(self) -> int: ...
    def setRenewStartMinutes(self, newRenewStartMinutes: int) -> None: ...
    def getExternalVerification(self) -> bool: ...
    def setExternalVerification(self, newExternalVerification: bool) -> None: ...
    def getIsAsyncPolicy(self) -> bool: ...
    def setIsAsyncPolicy(self, newIsAsyncPolicy: bool) -> None: ...

class KalturaPaymentGatewayProfileListResponse(KalturaListResponse):
    objects: List[KalturaPaymentGatewayProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPaymentGatewayProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPaymentGatewayProfile]: ...
    def setObjects(self, newObjects: List[KalturaPaymentGatewayProfile]) -> None: ...

class KalturaPaymentMethodProfile(KalturaObjectBase):
    id: int
    paymentGatewayId: int
    name: str
    allowMultiInstance: bool
    def __init__(self,
            id: int = NotImplemented,
            paymentGatewayId: int = NotImplemented,
            name: str = NotImplemented,
            allowMultiInstance: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getPaymentGatewayId(self) -> int: ...
    def setPaymentGatewayId(self, newPaymentGatewayId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getAllowMultiInstance(self) -> bool: ...
    def setAllowMultiInstance(self, newAllowMultiInstance: bool) -> None: ...

class KalturaPaymentMethodProfileListResponse(KalturaListResponse):
    objects: List[KalturaPaymentMethodProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPaymentMethodProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPaymentMethodProfile]: ...
    def setObjects(self, newObjects: List[KalturaPaymentMethodProfile]) -> None: ...

class KalturaProductMarkup(KalturaObjectBase):
    productId: int
    productType: KalturaTransactionType
    isEntitled: bool
    def __init__(self,
            productId: int = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            isEntitled: bool = NotImplemented): ...

    def getProductId(self) -> int: ...
    def getProductType(self) -> KalturaTransactionType: ...
    def getIsEntitled(self) -> bool: ...

class KalturaAssetPersonalMarkup(KalturaObjectBase):
    assetId: int
    assetType: KalturaAssetType
    products: List[KalturaProductMarkup]
    def __init__(self,
            assetId: int = NotImplemented,
            assetType: KalturaAssetType = NotImplemented,
            products: List[KalturaProductMarkup] = NotImplemented): ...

    def getAssetId(self) -> int: ...
    def getAssetType(self) -> KalturaAssetType: ...
    def getProducts(self) -> List[KalturaProductMarkup]: ...
    def setProducts(self, newProducts: List[KalturaProductMarkup]) -> None: ...

class KalturaAssetPersonalMarkupListResponse(KalturaListResponse):
    objects: List[KalturaAssetPersonalMarkup]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetPersonalMarkup] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetPersonalMarkup]: ...
    def setObjects(self, newObjects: List[KalturaAssetPersonalMarkup]) -> None: ...

class KalturaAssetRuleListResponse(KalturaListResponse):
    objects: List[KalturaAssetRule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetRule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetRule]: ...
    def setObjects(self, newObjects: List[KalturaAssetRule]) -> None: ...

class KalturaAssetUserRuleListResponse(KalturaListResponse):
    objects: List[KalturaAssetUserRule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAssetUserRule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAssetUserRule]: ...
    def setObjects(self, newObjects: List[KalturaAssetUserRule]) -> None: ...

class KalturaBusinessModuleRuleListResponse(KalturaListResponse):
    objects: List[KalturaBusinessModuleRule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaBusinessModuleRule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaBusinessModuleRule]: ...
    def setObjects(self, newObjects: List[KalturaBusinessModuleRule]) -> None: ...

class KalturaCampaignListResponse(KalturaListResponse):
    objects: List[KalturaCampaign]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCampaign] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCampaign]: ...
    def setObjects(self, newObjects: List[KalturaCampaign]) -> None: ...

class KalturaCDNAdapterProfile(KalturaObjectBase):
    id: int
    name: str
    isActive: bool
    adapterUrl: str
    baseUrl: str
    settings: map
    systemName: str
    sharedSecret: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: bool = NotImplemented,
            adapterUrl: str = NotImplemented,
            baseUrl: str = NotImplemented,
            settings: map = NotImplemented,
            systemName: str = NotImplemented,
            sharedSecret: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getBaseUrl(self) -> str: ...
    def setBaseUrl(self, newBaseUrl: str) -> None: ...
    def getSettings(self) -> map: ...
    def setSettings(self, newSettings: map) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getSharedSecret(self) -> str: ...

class KalturaCDNAdapterProfileListResponse(KalturaListResponse):
    objects: List[KalturaCDNAdapterProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCDNAdapterProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCDNAdapterProfile]: ...
    def setObjects(self, newObjects: List[KalturaCDNAdapterProfile]) -> None: ...

class KalturaCountryListResponse(KalturaListResponse):
    objects: List[KalturaCountry]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCountry] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCountry]: ...
    def setObjects(self, newObjects: List[KalturaCountry]) -> None: ...

class KalturaCurrency(KalturaObjectBase):
    id: int
    name: str
    code: str
    sign: str
    isDefault: bool
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            code: str = NotImplemented,
            sign: str = NotImplemented,
            isDefault: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...
    def getSign(self) -> str: ...
    def setSign(self, newSign: str) -> None: ...
    def getIsDefault(self) -> bool: ...
    def setIsDefault(self, newIsDefault: bool) -> None: ...

class KalturaCurrencyListResponse(KalturaListResponse):
    objects: List[KalturaCurrency]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCurrency] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCurrency]: ...
    def setObjects(self, newObjects: List[KalturaCurrency]) -> None: ...

class KalturaDeviceBrand(KalturaObjectBase):
    id: int
    name: str
    deviceFamilyid: int
    type: KalturaDeviceBrandType
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            deviceFamilyid: int = NotImplemented,
            type: KalturaDeviceBrandType = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDeviceFamilyid(self) -> int: ...
    def setDeviceFamilyid(self, newDeviceFamilyid: int) -> None: ...
    def getType(self) -> KalturaDeviceBrandType: ...

class KalturaDeviceBrandListResponse(KalturaListResponse):
    objects: List[KalturaDeviceBrand]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDeviceBrand] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDeviceBrand]: ...
    def setObjects(self, newObjects: List[KalturaDeviceBrand]) -> None: ...

class KalturaDeviceFamilyListResponse(KalturaListResponse):
    objects: List[KalturaDeviceFamily]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDeviceFamily] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDeviceFamily]: ...
    def setObjects(self, newObjects: List[KalturaDeviceFamily]) -> None: ...

class KalturaDrmProfile(KalturaObjectBase):
    id: int
    name: str
    isActive: bool
    adapterUrl: str
    settings: str
    systemName: str
    sharedSecret: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: bool = NotImplemented,
            adapterUrl: str = NotImplemented,
            settings: str = NotImplemented,
            systemName: str = NotImplemented,
            sharedSecret: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getSettings(self) -> str: ...
    def setSettings(self, newSettings: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getSharedSecret(self) -> str: ...

class KalturaDrmProfileListResponse(KalturaListResponse):
    objects: List[KalturaDrmProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDrmProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDrmProfile]: ...
    def setObjects(self, newObjects: List[KalturaDrmProfile]) -> None: ...

class KalturaEventNotificationListResponse(KalturaListResponse):
    objects: List[KalturaEventNotification]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaEventNotification] = NotImplemented): ...

    def getObjects(self) -> List[KalturaEventNotification]: ...
    def setObjects(self, newObjects: List[KalturaEventNotification]) -> None: ...

class KalturaExportTask(KalturaObjectBase):
    id: int
    alias: str
    name: str
    dataType: KalturaExportDataType
    filter: str
    exportType: KalturaExportType
    frequency: int
    notificationUrl: str
    isActive: bool
    def __init__(self,
            id: int = NotImplemented,
            alias: str = NotImplemented,
            name: str = NotImplemented,
            dataType: KalturaExportDataType = NotImplemented,
            filter: str = NotImplemented,
            exportType: KalturaExportType = NotImplemented,
            frequency: int = NotImplemented,
            notificationUrl: str = NotImplemented,
            isActive: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getAlias(self) -> str: ...
    def setAlias(self, newAlias: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDataType(self) -> KalturaExportDataType: ...
    def setDataType(self, newDataType: KalturaExportDataType) -> None: ...
    def getFilter(self) -> str: ...
    def setFilter(self, newFilter: str) -> None: ...
    def getExportType(self) -> KalturaExportType: ...
    def setExportType(self, newExportType: KalturaExportType) -> None: ...
    def getFrequency(self) -> int: ...
    def setFrequency(self, newFrequency: int) -> None: ...
    def getNotificationUrl(self) -> str: ...
    def setNotificationUrl(self, newNotificationUrl: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...

class KalturaExportTaskListResponse(KalturaListResponse):
    objects: List[KalturaExportTask]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaExportTask] = NotImplemented): ...

    def getObjects(self) -> List[KalturaExportTask]: ...
    def setObjects(self, newObjects: List[KalturaExportTask]) -> None: ...

class KalturaChannelEnrichmentHolder(KalturaObjectBase):
    type: KalturaChannelEnrichment
    def __init__(self,
            type: KalturaChannelEnrichment = NotImplemented): ...

    def getType(self) -> KalturaChannelEnrichment: ...
    def setType(self, newType: KalturaChannelEnrichment) -> None: ...

class KalturaExternalChannelProfile(KalturaObjectBase):
    id: int
    name: str
    isActive: bool
    externalIdentifier: str
    filterExpression: str
    recommendationEngineId: int
    enrichments: List[KalturaChannelEnrichmentHolder]
    assetUserRuleId: int
    metaData: map
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: bool = NotImplemented,
            externalIdentifier: str = NotImplemented,
            filterExpression: str = NotImplemented,
            recommendationEngineId: int = NotImplemented,
            enrichments: List[KalturaChannelEnrichmentHolder] = NotImplemented,
            assetUserRuleId: int = NotImplemented,
            metaData: map = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getExternalIdentifier(self) -> str: ...
    def setExternalIdentifier(self, newExternalIdentifier: str) -> None: ...
    def getFilterExpression(self) -> str: ...
    def setFilterExpression(self, newFilterExpression: str) -> None: ...
    def getRecommendationEngineId(self) -> int: ...
    def setRecommendationEngineId(self, newRecommendationEngineId: int) -> None: ...
    def getEnrichments(self) -> List[KalturaChannelEnrichmentHolder]: ...
    def setEnrichments(self, newEnrichments: List[KalturaChannelEnrichmentHolder]) -> None: ...
    def getAssetUserRuleId(self) -> int: ...
    def setAssetUserRuleId(self, newAssetUserRuleId: int) -> None: ...
    def getMetaData(self) -> map: ...
    def setMetaData(self, newMetaData: map) -> None: ...

class KalturaExternalChannelProfileListResponse(KalturaListResponse):
    objects: List[KalturaExternalChannelProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaExternalChannelProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaExternalChannelProfile]: ...
    def setObjects(self, newObjects: List[KalturaExternalChannelProfile]) -> None: ...

class KalturaIngestProfile(KalturaObjectBase):
    id: int
    name: str
    externalId: str
    assetTypeId: int
    transformationAdapterUrl: str
    transformationAdapterSettings: map
    transformationAdapterSharedSecret: str
    defaultAutoFillPolicy: KalturaIngestProfileAutofillPolicy
    defaultOverlapPolicy: KalturaIngestProfileOverlapPolicy
    overlapChannels: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            externalId: str = NotImplemented,
            assetTypeId: int = NotImplemented,
            transformationAdapterUrl: str = NotImplemented,
            transformationAdapterSettings: map = NotImplemented,
            transformationAdapterSharedSecret: str = NotImplemented,
            defaultAutoFillPolicy: KalturaIngestProfileAutofillPolicy = NotImplemented,
            defaultOverlapPolicy: KalturaIngestProfileOverlapPolicy = NotImplemented,
            overlapChannels: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getAssetTypeId(self) -> int: ...
    def setAssetTypeId(self, newAssetTypeId: int) -> None: ...
    def getTransformationAdapterUrl(self) -> str: ...
    def setTransformationAdapterUrl(self, newTransformationAdapterUrl: str) -> None: ...
    def getTransformationAdapterSettings(self) -> map: ...
    def setTransformationAdapterSettings(self, newTransformationAdapterSettings: map) -> None: ...
    def getTransformationAdapterSharedSecret(self) -> str: ...
    def setTransformationAdapterSharedSecret(self, newTransformationAdapterSharedSecret: str) -> None: ...
    def getDefaultAutoFillPolicy(self) -> KalturaIngestProfileAutofillPolicy: ...
    def setDefaultAutoFillPolicy(self, newDefaultAutoFillPolicy: KalturaIngestProfileAutofillPolicy) -> None: ...
    def getDefaultOverlapPolicy(self) -> KalturaIngestProfileOverlapPolicy: ...
    def setDefaultOverlapPolicy(self, newDefaultOverlapPolicy: KalturaIngestProfileOverlapPolicy) -> None: ...
    def getOverlapChannels(self) -> str: ...
    def setOverlapChannels(self, newOverlapChannels: str) -> None: ...

class KalturaIngestProfileListResponse(KalturaListResponse):
    objects: List[KalturaIngestProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaIngestProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaIngestProfile]: ...
    def setObjects(self, newObjects: List[KalturaIngestProfile]) -> None: ...

class KalturaIotListResponse(KalturaListResponse):
    objects: List[KalturaIot]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaIot] = NotImplemented): ...

    def getObjects(self) -> List[KalturaIot]: ...
    def setObjects(self, newObjects: List[KalturaIot]) -> None: ...

class KalturaLanguage(KalturaObjectBase):
    id: int
    name: str
    systemName: str
    code: str
    direction: str
    isDefault: bool
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            code: str = NotImplemented,
            direction: str = NotImplemented,
            isDefault: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...
    def getDirection(self) -> str: ...
    def setDirection(self, newDirection: str) -> None: ...
    def getIsDefault(self) -> bool: ...
    def setIsDefault(self, newIsDefault: bool) -> None: ...

class KalturaLanguageListResponse(KalturaListResponse):
    objects: List[KalturaLanguage]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaLanguage] = NotImplemented): ...

    def getObjects(self) -> List[KalturaLanguage]: ...
    def setObjects(self, newObjects: List[KalturaLanguage]) -> None: ...

class KalturaMediaConcurrencyRule(KalturaObjectBase):
    id: str
    name: str
    concurrencyLimitationType: KalturaConcurrencyLimitationType
    limitation: int
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            concurrencyLimitationType: KalturaConcurrencyLimitationType = NotImplemented,
            limitation: int = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getConcurrencyLimitationType(self) -> KalturaConcurrencyLimitationType: ...
    def setConcurrencyLimitationType(self, newConcurrencyLimitationType: KalturaConcurrencyLimitationType) -> None: ...
    def getLimitation(self) -> int: ...
    def setLimitation(self, newLimitation: int) -> None: ...

class KalturaMediaConcurrencyRuleListResponse(KalturaListResponse):
    objects: List[KalturaMediaConcurrencyRule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaMediaConcurrencyRule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMediaConcurrencyRule]: ...
    def setObjects(self, newObjects: List[KalturaMediaConcurrencyRule]) -> None: ...

class KalturaMeta(KalturaObjectBase):
    id: str
    name: str
    multilingualName: List[KalturaTranslationToken]
    systemName: str
    dataType: KalturaMetaDataType
    multipleValue: bool
    isProtected: bool
    helpText: str
    features: str
    parentId: str
    createDate: int
    updateDate: int
    dynamicData: map
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            systemName: str = NotImplemented,
            dataType: KalturaMetaDataType = NotImplemented,
            multipleValue: bool = NotImplemented,
            isProtected: bool = NotImplemented,
            helpText: str = NotImplemented,
            features: str = NotImplemented,
            parentId: str = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            dynamicData: map = NotImplemented): ...

    def getId(self) -> str: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDataType(self) -> KalturaMetaDataType: ...
    def setDataType(self, newDataType: KalturaMetaDataType) -> None: ...
    def getMultipleValue(self) -> bool: ...
    def setMultipleValue(self, newMultipleValue: bool) -> None: ...
    def getIsProtected(self) -> bool: ...
    def setIsProtected(self, newIsProtected: bool) -> None: ...
    def getHelpText(self) -> str: ...
    def setHelpText(self, newHelpText: str) -> None: ...
    def getFeatures(self) -> str: ...
    def setFeatures(self, newFeatures: str) -> None: ...
    def getParentId(self) -> str: ...
    def setParentId(self, newParentId: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...

class KalturaMetaListResponse(KalturaListResponse):
    objects: List[KalturaMeta]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaMeta] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMeta]: ...
    def setObjects(self, newObjects: List[KalturaMeta]) -> None: ...

class KalturaOSSAdapterBaseProfile(KalturaObjectBase):
    id: int
    name: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaOSSAdapterProfile(KalturaOSSAdapterBaseProfile):
    isActive: bool
    adapterUrl: str
    ossAdapterSettings: map
    externalIdentifier: str
    sharedSecret: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: bool = NotImplemented,
            adapterUrl: str = NotImplemented,
            ossAdapterSettings: map = NotImplemented,
            externalIdentifier: str = NotImplemented,
            sharedSecret: str = NotImplemented): ...

    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getOssAdapterSettings(self) -> map: ...
    def setOssAdapterSettings(self, newOssAdapterSettings: map) -> None: ...
    def getExternalIdentifier(self) -> str: ...
    def setExternalIdentifier(self, newExternalIdentifier: str) -> None: ...
    def getSharedSecret(self) -> str: ...

class KalturaOSSAdapterProfileListResponse(KalturaListResponse):
    objects: List[KalturaOSSAdapterProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaOSSAdapterProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaOSSAdapterProfile]: ...
    def setObjects(self, newObjects: List[KalturaOSSAdapterProfile]) -> None: ...

class KalturaParentalRule(KalturaObjectBase):
    id: int
    name: str
    description: str
    order: int
    mediaTag: int
    epgTag: int
    blockAnonymousAccess: bool
    ruleType: KalturaParentalRuleType
    mediaTagValues: List[KalturaStringValue]
    epgTagValues: List[KalturaStringValue]
    isDefault: bool
    origin: KalturaRuleLevel
    isActive: bool
    createDate: int
    updateDate: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            order: int = NotImplemented,
            mediaTag: int = NotImplemented,
            epgTag: int = NotImplemented,
            blockAnonymousAccess: bool = NotImplemented,
            ruleType: KalturaParentalRuleType = NotImplemented,
            mediaTagValues: List[KalturaStringValue] = NotImplemented,
            epgTagValues: List[KalturaStringValue] = NotImplemented,
            isDefault: bool = NotImplemented,
            origin: KalturaRuleLevel = NotImplemented,
            isActive: bool = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getOrder(self) -> int: ...
    def setOrder(self, newOrder: int) -> None: ...
    def getMediaTag(self) -> int: ...
    def setMediaTag(self, newMediaTag: int) -> None: ...
    def getEpgTag(self) -> int: ...
    def setEpgTag(self, newEpgTag: int) -> None: ...
    def getBlockAnonymousAccess(self) -> bool: ...
    def setBlockAnonymousAccess(self, newBlockAnonymousAccess: bool) -> None: ...
    def getRuleType(self) -> KalturaParentalRuleType: ...
    def setRuleType(self, newRuleType: KalturaParentalRuleType) -> None: ...
    def getMediaTagValues(self) -> List[KalturaStringValue]: ...
    def setMediaTagValues(self, newMediaTagValues: List[KalturaStringValue]) -> None: ...
    def getEpgTagValues(self) -> List[KalturaStringValue]: ...
    def setEpgTagValues(self, newEpgTagValues: List[KalturaStringValue]) -> None: ...
    def getIsDefault(self) -> bool: ...
    def getOrigin(self) -> KalturaRuleLevel: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...

class KalturaParentalRuleListResponse(KalturaListResponse):
    objects: List[KalturaParentalRule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaParentalRule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaParentalRule]: ...
    def setObjects(self, newObjects: List[KalturaParentalRule]) -> None: ...

class KalturaPermissionItem(KalturaObjectBase):
    id: int
    name: str
    isExcluded: bool
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isExcluded: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsExcluded(self) -> bool: ...
    def setIsExcluded(self, newIsExcluded: bool) -> None: ...

class KalturaPermissionItemListResponse(KalturaListResponse):
    objects: List[KalturaPermissionItem]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPermissionItem] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPermissionItem]: ...
    def setObjects(self, newObjects: List[KalturaPermissionItem]) -> None: ...

class KalturaApiActionPermissionItem(KalturaPermissionItem):
    service: str
    action: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isExcluded: bool = NotImplemented,
            service: str = NotImplemented,
            action: str = NotImplemented): ...

    def getService(self) -> str: ...
    def setService(self, newService: str) -> None: ...
    def getAction(self) -> str: ...
    def setAction(self, newAction: str) -> None: ...

class KalturaApiArgumentPermissionItem(KalturaPermissionItem):
    service: str
    action: str
    parameter: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isExcluded: bool = NotImplemented,
            service: str = NotImplemented,
            action: str = NotImplemented,
            parameter: str = NotImplemented): ...

    def getService(self) -> str: ...
    def setService(self, newService: str) -> None: ...
    def getAction(self) -> str: ...
    def setAction(self, newAction: str) -> None: ...
    def getParameter(self) -> str: ...
    def setParameter(self, newParameter: str) -> None: ...

class KalturaApiParameterPermissionItem(KalturaPermissionItem):
    object: str
    parameter: str
    action: KalturaApiParameterPermissionItemAction
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isExcluded: bool = NotImplemented,
            object: str = NotImplemented,
            parameter: str = NotImplemented,
            action: KalturaApiParameterPermissionItemAction = NotImplemented): ...

    def getObject(self) -> str: ...
    def setObject(self, newObject: str) -> None: ...
    def getParameter(self) -> str: ...
    def setParameter(self, newParameter: str) -> None: ...
    def getAction(self) -> KalturaApiParameterPermissionItemAction: ...
    def setAction(self, newAction: KalturaApiParameterPermissionItemAction) -> None: ...

class KalturaApiPriviligesPermissionItem(KalturaPermissionItem):
    object: str
    parameter: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isExcluded: bool = NotImplemented,
            object: str = NotImplemented,
            parameter: str = NotImplemented): ...

    def getObject(self) -> str: ...
    def setObject(self, newObject: str) -> None: ...
    def getParameter(self) -> str: ...
    def setParameter(self, newParameter: str) -> None: ...

class KalturaPermission(KalturaObjectBase):
    id: int
    name: str
    friendlyName: str
    dependsOnPermissionNames: str
    type: KalturaPermissionType
    permissionItemsIds: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            friendlyName: str = NotImplemented,
            dependsOnPermissionNames: str = NotImplemented,
            type: KalturaPermissionType = NotImplemented,
            permissionItemsIds: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getFriendlyName(self) -> str: ...
    def setFriendlyName(self, newFriendlyName: str) -> None: ...
    def getDependsOnPermissionNames(self) -> str: ...
    def getType(self) -> KalturaPermissionType: ...
    def setType(self, newType: KalturaPermissionType) -> None: ...
    def getPermissionItemsIds(self) -> str: ...
    def setPermissionItemsIds(self, newPermissionItemsIds: str) -> None: ...

class KalturaPermissionListResponse(KalturaListResponse):
    objects: List[KalturaPermission]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPermission] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPermission]: ...
    def setObjects(self, newObjects: List[KalturaPermission]) -> None: ...

class KalturaGroupPermission(KalturaPermission):
    group: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            friendlyName: str = NotImplemented,
            dependsOnPermissionNames: str = NotImplemented,
            type: KalturaPermissionType = NotImplemented,
            permissionItemsIds: str = NotImplemented,
            group: str = NotImplemented): ...

    def getGroup(self) -> str: ...

class KalturaPlaybackProfile(KalturaObjectBase):
    id: int
    name: str
    isActive: bool
    adapterGrpcAddress: str
    adapterUrl: str
    settings: str
    systemName: str
    sharedSecret: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: bool = NotImplemented,
            adapterGrpcAddress: str = NotImplemented,
            adapterUrl: str = NotImplemented,
            settings: str = NotImplemented,
            systemName: str = NotImplemented,
            sharedSecret: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getAdapterGrpcAddress(self) -> str: ...
    def setAdapterGrpcAddress(self, newAdapterGrpcAddress: str) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getSettings(self) -> str: ...
    def setSettings(self, newSettings: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getSharedSecret(self) -> str: ...

class KalturaPlaybackProfileListResponse(KalturaListResponse):
    objects: List[KalturaPlaybackProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPlaybackProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPlaybackProfile]: ...
    def setObjects(self, newObjects: List[KalturaPlaybackProfile]) -> None: ...

class KalturaRecommendationProfile(KalturaObjectBase):
    id: int
    name: str
    isActive: bool
    adapterUrl: str
    recommendationEngineSettings: map
    externalIdentifier: str
    sharedSecret: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isActive: bool = NotImplemented,
            adapterUrl: str = NotImplemented,
            recommendationEngineSettings: map = NotImplemented,
            externalIdentifier: str = NotImplemented,
            sharedSecret: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getAdapterUrl(self) -> str: ...
    def setAdapterUrl(self, newAdapterUrl: str) -> None: ...
    def getRecommendationEngineSettings(self) -> map: ...
    def setRecommendationEngineSettings(self, newRecommendationEngineSettings: map) -> None: ...
    def getExternalIdentifier(self) -> str: ...
    def setExternalIdentifier(self, newExternalIdentifier: str) -> None: ...
    def getSharedSecret(self) -> str: ...

class KalturaRecommendationProfileListResponse(KalturaListResponse):
    objects: List[KalturaRecommendationProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaRecommendationProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaRecommendationProfile]: ...
    def setObjects(self, newObjects: List[KalturaRecommendationProfile]) -> None: ...

class KalturaRegionalChannel(KalturaObjectBase):
    linearChannelId: int
    channelNumber: int
    dynamicData: map
    def __init__(self,
            linearChannelId: int = NotImplemented,
            channelNumber: int = NotImplemented,
            dynamicData: map = NotImplemented): ...

    def getLinearChannelId(self) -> int: ...
    def setLinearChannelId(self, newLinearChannelId: int) -> None: ...
    def getChannelNumber(self) -> int: ...
    def setChannelNumber(self, newChannelNumber: int) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...

class KalturaRegion(KalturaObjectBase):
    id: int
    name: str
    externalId: str
    isDefault: bool
    linearChannels: List[KalturaRegionalChannel]
    parentId: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            externalId: str = NotImplemented,
            isDefault: bool = NotImplemented,
            linearChannels: List[KalturaRegionalChannel] = NotImplemented,
            parentId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getIsDefault(self) -> bool: ...
    def getLinearChannels(self) -> List[KalturaRegionalChannel]: ...
    def setLinearChannels(self, newLinearChannels: List[KalturaRegionalChannel]) -> None: ...
    def getParentId(self) -> int: ...
    def setParentId(self, newParentId: int) -> None: ...

class KalturaRegionListResponse(KalturaListResponse):
    objects: List[KalturaRegion]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaRegion] = NotImplemented): ...

    def getObjects(self) -> List[KalturaRegion]: ...
    def setObjects(self, newObjects: List[KalturaRegion]) -> None: ...

class KalturaRegionalChannelMultiLcns(KalturaRegionalChannel):
    lcns: str
    def __init__(self,
            linearChannelId: int = NotImplemented,
            channelNumber: int = NotImplemented,
            dynamicData: map = NotImplemented,
            lcns: str = NotImplemented): ...

    def getLcns(self) -> str: ...
    def setLcns(self, newLcns: str) -> None: ...

class KalturaRegistrySettings(KalturaObjectBase):
    key: str
    value: str
    def __init__(self,
            key: str = NotImplemented,
            value: str = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaRegistrySettingsListResponse(KalturaListResponse):
    objects: List[KalturaRegistrySettings]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaRegistrySettings] = NotImplemented): ...

    def getObjects(self) -> List[KalturaRegistrySettings]: ...
    def setObjects(self, newObjects: List[KalturaRegistrySettings]) -> None: ...

class KalturaSearchHistory(KalturaObjectBase):
    id: str
    name: str
    filter: str
    language: str
    createdAt: int
    service: str
    action: str
    deviceId: str
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            filter: str = NotImplemented,
            language: str = NotImplemented,
            createdAt: int = NotImplemented,
            service: str = NotImplemented,
            action: str = NotImplemented,
            deviceId: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getName(self) -> str: ...
    def getFilter(self) -> str: ...
    def getLanguage(self) -> str: ...
    def getCreatedAt(self) -> int: ...
    def getService(self) -> str: ...
    def getAction(self) -> str: ...
    def getDeviceId(self) -> str: ...

class KalturaSearchHistoryListResponse(KalturaListResponse):
    objects: List[KalturaSearchHistory]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSearchHistory] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSearchHistory]: ...
    def setObjects(self, newObjects: List[KalturaSearchHistory]) -> None: ...

class KalturaTvmRuleListResponse(KalturaListResponse):
    objects: List[KalturaTvmRule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaTvmRule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaTvmRule]: ...
    def setObjects(self, newObjects: List[KalturaTvmRule]) -> None: ...

class KalturaUserAssetRule(KalturaObjectBase):
    id: int
    ruleType: KalturaRuleType
    name: str
    description: str
    def __init__(self,
            id: int = NotImplemented,
            ruleType: KalturaRuleType = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getRuleType(self) -> KalturaRuleType: ...
    def setRuleType(self, newRuleType: KalturaRuleType) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaUserAssetRuleListResponse(KalturaListResponse):
    objects: List[KalturaUserAssetRule]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserAssetRule] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserAssetRule]: ...
    def setObjects(self, newObjects: List[KalturaUserAssetRule]) -> None: ...

class KalturaUserRole(KalturaObjectBase):
    id: int
    name: str
    permissionNames: str
    excludedPermissionNames: str
    type: KalturaUserRoleType
    profile: KalturaUserRoleProfile
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            permissionNames: str = NotImplemented,
            excludedPermissionNames: str = NotImplemented,
            type: KalturaUserRoleType = NotImplemented,
            profile: KalturaUserRoleProfile = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getPermissionNames(self) -> str: ...
    def setPermissionNames(self, newPermissionNames: str) -> None: ...
    def getExcludedPermissionNames(self) -> str: ...
    def setExcludedPermissionNames(self, newExcludedPermissionNames: str) -> None: ...
    def getType(self) -> KalturaUserRoleType: ...
    def getProfile(self) -> KalturaUserRoleProfile: ...
    def setProfile(self, newProfile: KalturaUserRoleProfile) -> None: ...

class KalturaUserRoleListResponse(KalturaListResponse):
    objects: List[KalturaUserRole]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserRole] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserRole]: ...
    def setObjects(self, newObjects: List[KalturaUserRole]) -> None: ...

class KalturaEpgListResponse(KalturaListResponse):
    objects: List[KalturaEpg]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaEpg] = NotImplemented): ...

    def getObjects(self) -> List[KalturaEpg]: ...
    def setObjects(self, newObjects: List[KalturaEpg]) -> None: ...

class KalturaAppToken(KalturaObjectBase):
    id: str
    expiry: int
    partnerId: int
    sessionDuration: int
    hashType: KalturaAppTokenHashType
    sessionPrivileges: str
    token: str
    sessionUserId: str
    createDate: int
    updateDate: int
    regionId: int
    def __init__(self,
            id: str = NotImplemented,
            expiry: int = NotImplemented,
            partnerId: int = NotImplemented,
            sessionDuration: int = NotImplemented,
            hashType: KalturaAppTokenHashType = NotImplemented,
            sessionPrivileges: str = NotImplemented,
            token: str = NotImplemented,
            sessionUserId: str = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            regionId: int = NotImplemented): ...

    def getId(self) -> str: ...
    def getExpiry(self) -> int: ...
    def setExpiry(self, newExpiry: int) -> None: ...
    def getPartnerId(self) -> int: ...
    def getSessionDuration(self) -> int: ...
    def setSessionDuration(self, newSessionDuration: int) -> None: ...
    def getHashType(self) -> KalturaAppTokenHashType: ...
    def setHashType(self, newHashType: KalturaAppTokenHashType) -> None: ...
    def getSessionPrivileges(self) -> str: ...
    def setSessionPrivileges(self, newSessionPrivileges: str) -> None: ...
    def getToken(self) -> str: ...
    def getSessionUserId(self) -> str: ...
    def setSessionUserId(self, newSessionUserId: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getRegionId(self) -> int: ...

class KalturaSession(KalturaObjectBase):
    ks: str
    partnerId: int
    userId: str
    expiry: int
    privileges: str
    udid: str
    createDate: int
    def __init__(self,
            ks: str = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            expiry: int = NotImplemented,
            privileges: str = NotImplemented,
            udid: str = NotImplemented,
            createDate: int = NotImplemented): ...

    def getKs(self) -> str: ...
    def setKs(self, newKs: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getExpiry(self) -> int: ...
    def setExpiry(self, newExpiry: int) -> None: ...
    def getPrivileges(self) -> str: ...
    def setPrivileges(self, newPrivileges: str) -> None: ...
    def getUdid(self) -> str: ...
    def setUdid(self, newUdid: str) -> None: ...
    def getCreateDate(self) -> int: ...
    def setCreateDate(self, newCreateDate: int) -> None: ...

class KalturaSessionInfo(KalturaSession):
    def __init__(self,
            ks: str = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            expiry: int = NotImplemented,
            privileges: str = NotImplemented,
            udid: str = NotImplemented,
            createDate: int = NotImplemented): ...
        pass

class KalturaRepresentativeSelectionPolicy(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaTopEntitledOrFreeRsp(KalturaRepresentativeSelectionPolicy):
    orderBy: KalturaBaseAssetOrder
    def __init__(self,
            orderBy: KalturaBaseAssetOrder = NotImplemented): ...

    def getOrderBy(self) -> KalturaBaseAssetOrder: ...
    def setOrderBy(self, newOrderBy: KalturaBaseAssetOrder) -> None: ...

class KalturaTopRsp(KalturaRepresentativeSelectionPolicy):
    orderBy: KalturaBaseAssetOrder
    def __init__(self,
            orderBy: KalturaBaseAssetOrder = NotImplemented): ...

    def getOrderBy(self) -> KalturaBaseAssetOrder: ...
    def setOrderBy(self, newOrderBy: KalturaBaseAssetOrder) -> None: ...

class KalturaTopSubscriptionEntitledOrFreeRsp(KalturaRepresentativeSelectionPolicy):
    orderBy: KalturaBaseAssetOrder
    def __init__(self,
            orderBy: KalturaBaseAssetOrder = NotImplemented): ...

    def getOrderBy(self) -> KalturaBaseAssetOrder: ...
    def setOrderBy(self, newOrderBy: KalturaBaseAssetOrder) -> None: ...

class KalturaTopSubscriptionEntitledRsp(KalturaRepresentativeSelectionPolicy):
    orderBy: KalturaBaseAssetOrder
    def __init__(self,
            orderBy: KalturaBaseAssetOrder = NotImplemented): ...

    def getOrderBy(self) -> KalturaBaseAssetOrder: ...
    def setOrderBy(self, newOrderBy: KalturaBaseAssetOrder) -> None: ...

class KalturaPlaybackContextOptions(KalturaObjectBase):
    mediaProtocol: str
    streamerType: str
    assetFileIds: str
    adapterData: map
    context: KalturaPlaybackContextType
    urlType: KalturaUrlType
    def __init__(self,
            mediaProtocol: str = NotImplemented,
            streamerType: str = NotImplemented,
            assetFileIds: str = NotImplemented,
            adapterData: map = NotImplemented,
            context: KalturaPlaybackContextType = NotImplemented,
            urlType: KalturaUrlType = NotImplemented): ...

    def getMediaProtocol(self) -> str: ...
    def setMediaProtocol(self, newMediaProtocol: str) -> None: ...
    def getStreamerType(self) -> str: ...
    def setStreamerType(self, newStreamerType: str) -> None: ...
    def getAssetFileIds(self) -> str: ...
    def setAssetFileIds(self, newAssetFileIds: str) -> None: ...
    def getAdapterData(self) -> map: ...
    def setAdapterData(self, newAdapterData: map) -> None: ...
    def getContext(self) -> KalturaPlaybackContextType: ...
    def setContext(self, newContext: KalturaPlaybackContextType) -> None: ...
    def getUrlType(self) -> KalturaUrlType: ...
    def setUrlType(self, newUrlType: KalturaUrlType) -> None: ...

class KalturaAccessControlMessage(KalturaObjectBase):
    message: str
    code: str
    def __init__(self,
            message: str = NotImplemented,
            code: str = NotImplemented): ...

    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...

class KalturaCaptionPlaybackPluginData(KalturaObjectBase):
    url: str
    language: str
    label: str
    format: str
    def __init__(self,
            url: str = NotImplemented,
            language: str = NotImplemented,
            label: str = NotImplemented,
            format: str = NotImplemented): ...

    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getLabel(self) -> str: ...
    def setLabel(self, newLabel: str) -> None: ...
    def getFormat(self) -> str: ...
    def setFormat(self, newFormat: str) -> None: ...

class KalturaPlaybackPluginData(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaPlaybackContext(KalturaObjectBase):
    sources: List[KalturaPlaybackSource]
    actions: List[KalturaRuleAction]
    messages: List[KalturaAccessControlMessage]
    playbackCaptions: List[KalturaCaptionPlaybackPluginData]
    plugins: List[KalturaPlaybackPluginData]
    def __init__(self,
            sources: List[KalturaPlaybackSource] = NotImplemented,
            actions: List[KalturaRuleAction] = NotImplemented,
            messages: List[KalturaAccessControlMessage] = NotImplemented,
            playbackCaptions: List[KalturaCaptionPlaybackPluginData] = NotImplemented,
            plugins: List[KalturaPlaybackPluginData] = NotImplemented): ...

    def getSources(self) -> List[KalturaPlaybackSource]: ...
    def setSources(self, newSources: List[KalturaPlaybackSource]) -> None: ...
    def getActions(self) -> List[KalturaRuleAction]: ...
    def setActions(self, newActions: List[KalturaRuleAction]) -> None: ...
    def getMessages(self) -> List[KalturaAccessControlMessage]: ...
    def setMessages(self, newMessages: List[KalturaAccessControlMessage]) -> None: ...
    def getPlaybackCaptions(self) -> List[KalturaCaptionPlaybackPluginData]: ...
    def setPlaybackCaptions(self, newPlaybackCaptions: List[KalturaCaptionPlaybackPluginData]) -> None: ...
    def getPlugins(self) -> List[KalturaPlaybackPluginData]: ...
    def setPlugins(self, newPlugins: List[KalturaPlaybackPluginData]) -> None: ...

class KalturaBumpersPlaybackPluginData(KalturaPlaybackPluginData):
    url: str
    streamertype: str
    def __init__(self,
            url: str = NotImplemented,
            streamertype: str = NotImplemented): ...

    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getStreamertype(self) -> str: ...
    def setStreamertype(self, newStreamertype: str) -> None: ...

class KalturaAdsSource(KalturaObjectBase):
    id: int
    type: str
    adsPolicy: KalturaAdsPolicy
    adsParam: str
    def __init__(self,
            id: int = NotImplemented,
            type: str = NotImplemented,
            adsPolicy: KalturaAdsPolicy = NotImplemented,
            adsParam: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getType(self) -> str: ...
    def setType(self, newType: str) -> None: ...
    def getAdsPolicy(self) -> KalturaAdsPolicy: ...
    def setAdsPolicy(self, newAdsPolicy: KalturaAdsPolicy) -> None: ...
    def getAdsParam(self) -> str: ...
    def setAdsParam(self, newAdsParam: str) -> None: ...

class KalturaAdsContext(KalturaObjectBase):
    sources: List[KalturaAdsSource]
    def __init__(self,
            sources: List[KalturaAdsSource] = NotImplemented): ...

    def getSources(self) -> List[KalturaAdsSource]: ...
    def setSources(self, newSources: List[KalturaAdsSource]) -> None: ...

class KalturaBulkUploadJobData(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBulkUploadExcelJobData(KalturaBulkUploadJobData):
    def __init__(self): ...
        pass

class KalturaBulkUploadIngestJobData(KalturaBulkUploadJobData):
    ingestProfileId: int
    disableEpgNotification: bool
    def __init__(self,
            ingestProfileId: int = NotImplemented,
            disableEpgNotification: bool = NotImplemented): ...

    def getIngestProfileId(self) -> int: ...
    def setIngestProfileId(self, newIngestProfileId: int) -> None: ...
    def getDisableEpgNotification(self) -> bool: ...
    def setDisableEpgNotification(self, newDisableEpgNotification: bool) -> None: ...

class KalturaBulkUploadObjectData(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBulkUploadAssetData(KalturaBulkUploadObjectData):
    typeId: int
    def __init__(self,
            typeId: int = NotImplemented): ...

    def getTypeId(self) -> int: ...
    def setTypeId(self, newTypeId: int) -> None: ...

class KalturaBulkUploadDynamicListData(KalturaBulkUploadObjectData):
    dynamicListId: int
    def __init__(self,
            dynamicListId: int = NotImplemented): ...

    def getDynamicListId(self) -> int: ...
    def setDynamicListId(self, newDynamicListId: int) -> None: ...

class KalturaBulkUploadUdidDynamicListData(KalturaBulkUploadDynamicListData):
    def __init__(self,
            dynamicListId: int = NotImplemented): ...
        pass

class KalturaBulkUploadMediaAssetData(KalturaBulkUploadAssetData):
    def __init__(self,
            typeId: int = NotImplemented): ...
        pass

class KalturaBulkUploadLiveAssetData(KalturaBulkUploadMediaAssetData):
    def __init__(self,
            typeId: int = NotImplemented): ...
        pass

class KalturaBulkUploadProgramAssetData(KalturaBulkUploadAssetData):
    def __init__(self,
            typeId: int = NotImplemented): ...
        pass

class KalturaCaptionUploadData(KalturaObjectBase):
    captionType: KalturaAssetEnrichCaptionType
    captionLanguage: str
    def __init__(self,
            captionType: KalturaAssetEnrichCaptionType = NotImplemented,
            captionLanguage: str = NotImplemented): ...

    def getCaptionType(self) -> KalturaAssetEnrichCaptionType: ...
    def setCaptionType(self, newCaptionType: KalturaAssetEnrichCaptionType) -> None: ...
    def getCaptionLanguage(self) -> str: ...

class KalturaCaptionUploadJob(KalturaObjectBase):
    id: int
    createDate: int
    updateDate: int
    fileName: str
    status: KalturaCaptionUploadStatus
    message: str
    def __init__(self,
            id: int = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented,
            fileName: str = NotImplemented,
            status: KalturaCaptionUploadStatus = NotImplemented,
            message: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...
    def getFileName(self) -> str: ...
    def getStatus(self) -> KalturaCaptionUploadStatus: ...
    def getMessage(self) -> str: ...

class KalturaEnrichedMetadataResult(KalturaObjectBase):
    enrichedMetadata: map
    def __init__(self,
            enrichedMetadata: map = NotImplemented): ...

    def getEnrichedMetadata(self) -> map: ...
    def setEnrichedMetadata(self, newEnrichedMetadata: map) -> None: ...

class KalturaMetaEnrichConfiguration(KalturaObjectBase):
    isEnabled: bool
    metaFieldNameMap: map
    vectorizedMetaIds: str
    def __init__(self,
            isEnabled: bool = NotImplemented,
            metaFieldNameMap: map = NotImplemented,
            vectorizedMetaIds: str = NotImplemented): ...

    def getIsEnabled(self) -> bool: ...
    def setIsEnabled(self, newIsEnabled: bool) -> None: ...
    def getMetaFieldNameMap(self) -> map: ...
    def setMetaFieldNameMap(self, newMetaFieldNameMap: map) -> None: ...
    def getVectorizedMetaIds(self) -> str: ...
    def setVectorizedMetaIds(self, newVectorizedMetaIds: str) -> None: ...

class KalturaAssetFileContext(KalturaObjectBase):
    viewLifeCycle: str
    fullLifeCycle: str
    isOfflinePlayBack: bool
    isLivePlayBack: bool
    def __init__(self,
            viewLifeCycle: str = NotImplemented,
            fullLifeCycle: str = NotImplemented,
            isOfflinePlayBack: bool = NotImplemented,
            isLivePlayBack: bool = NotImplemented): ...

    def getViewLifeCycle(self) -> str: ...
    def getFullLifeCycle(self) -> str: ...
    def getIsOfflinePlayBack(self) -> bool: ...
    def getIsLivePlayBack(self) -> bool: ...

class KalturaSeriesIdArguments(KalturaObjectBase):
    assetTypeIdIn: str
    seriesId: str
    seriesIdMetaName: str
    seasonNumberMetaName: str
    episodeNumberMetaName: str
    def __init__(self,
            assetTypeIdIn: str = NotImplemented,
            seriesId: str = NotImplemented,
            seriesIdMetaName: str = NotImplemented,
            seasonNumberMetaName: str = NotImplemented,
            episodeNumberMetaName: str = NotImplemented): ...

    def getAssetTypeIdIn(self) -> str: ...
    def setAssetTypeIdIn(self, newAssetTypeIdIn: str) -> None: ...
    def getSeriesId(self) -> str: ...
    def setSeriesId(self, newSeriesId: str) -> None: ...
    def getSeriesIdMetaName(self) -> str: ...
    def setSeriesIdMetaName(self, newSeriesIdMetaName: str) -> None: ...
    def getSeasonNumberMetaName(self) -> str: ...
    def setSeasonNumberMetaName(self, newSeasonNumberMetaName: str) -> None: ...
    def getEpisodeNumberMetaName(self) -> str: ...
    def setEpisodeNumberMetaName(self, newEpisodeNumberMetaName: str) -> None: ...

class KalturaAssetPersonalSelection(KalturaObjectBase):
    assetId: int
    assetType: KalturaAssetType
    updateDate: int
    def __init__(self,
            assetId: int = NotImplemented,
            assetType: KalturaAssetType = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getAssetId(self) -> int: ...
    def getAssetType(self) -> KalturaAssetType: ...
    def getUpdateDate(self) -> int: ...

class KalturaAssetStatisticsQuery(KalturaObjectBase):
    assetIdIn: str
    assetTypeEqual: KalturaAssetType
    startDateGreaterThanOrEqual: int
    endDateGreaterThanOrEqual: int
    def __init__(self,
            assetIdIn: str = NotImplemented,
            assetTypeEqual: KalturaAssetType = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented): ...

    def getAssetIdIn(self) -> str: ...
    def setAssetIdIn(self, newAssetIdIn: str) -> None: ...
    def getAssetTypeEqual(self) -> KalturaAssetType: ...
    def setAssetTypeEqual(self, newAssetTypeEqual: KalturaAssetType) -> None: ...
    def getStartDateGreaterThanOrEqual(self) -> int: ...
    def setStartDateGreaterThanOrEqual(self, newStartDateGreaterThanOrEqual: int) -> None: ...
    def getEndDateGreaterThanOrEqual(self) -> int: ...
    def setEndDateGreaterThanOrEqual(self, newEndDateGreaterThanOrEqual: int) -> None: ...

class KalturaBulkUploadStatistics(KalturaObjectBase):
    pending: int
    uploaded: int
    queued: int
    parsing: int
    processing: int
    processed: int
    success: int
    partial: int
    failed: int
    fatal: int
    def __init__(self,
            pending: int = NotImplemented,
            uploaded: int = NotImplemented,
            queued: int = NotImplemented,
            parsing: int = NotImplemented,
            processing: int = NotImplemented,
            processed: int = NotImplemented,
            success: int = NotImplemented,
            partial: int = NotImplemented,
            failed: int = NotImplemented,
            fatal: int = NotImplemented): ...

    def getPending(self) -> int: ...
    def setPending(self, newPending: int) -> None: ...
    def getUploaded(self) -> int: ...
    def setUploaded(self, newUploaded: int) -> None: ...
    def getQueued(self) -> int: ...
    def setQueued(self, newQueued: int) -> None: ...
    def getParsing(self) -> int: ...
    def setParsing(self, newParsing: int) -> None: ...
    def getProcessing(self) -> int: ...
    def setProcessing(self, newProcessing: int) -> None: ...
    def getProcessed(self) -> int: ...
    def setProcessed(self, newProcessed: int) -> None: ...
    def getSuccess(self) -> int: ...
    def setSuccess(self, newSuccess: int) -> None: ...
    def getPartial(self) -> int: ...
    def setPartial(self, newPartial: int) -> None: ...
    def getFailed(self) -> int: ...
    def setFailed(self, newFailed: int) -> None: ...
    def getFatal(self) -> int: ...
    def setFatal(self, newFatal: int) -> None: ...

class KalturaOTTCategory(KalturaObjectBase):
    id: int
    name: str
    parentCategoryId: int
    childCategories: List[KalturaOTTCategory]
    channels: List[KalturaChannel]
    images: List[KalturaMediaImage]
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            parentCategoryId: int = NotImplemented,
            childCategories: List[KalturaOTTCategory] = NotImplemented,
            channels: List[KalturaChannel] = NotImplemented,
            images: List[KalturaMediaImage] = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getParentCategoryId(self) -> int: ...
    def setParentCategoryId(self, newParentCategoryId: int) -> None: ...
    def getChildCategories(self) -> List[KalturaOTTCategory]: ...
    def setChildCategories(self, newChildCategories: List[KalturaOTTCategory]) -> None: ...
    def getChannels(self) -> List[KalturaChannel]: ...
    def setChannels(self, newChannels: List[KalturaChannel]) -> None: ...
    def getImages(self) -> List[KalturaMediaImage]: ...
    def setImages(self, newImages: List[KalturaMediaImage]) -> None: ...

class KalturaCategoryTree(KalturaObjectBase):
    id: int
    name: str
    multilingualName: List[KalturaTranslationToken]
    children: List[KalturaCategoryTree]
    unifiedChannels: List[KalturaUnifiedChannelInfo]
    dynamicData: map
    images: List[KalturaImage]
    isActive: bool
    startDateInSeconds: int
    endDateInSeconds: int
    type: str
    versionId: int
    virtualAssetId: int
    referenceId: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            multilingualName: List[KalturaTranslationToken] = NotImplemented,
            children: List[KalturaCategoryTree] = NotImplemented,
            unifiedChannels: List[KalturaUnifiedChannelInfo] = NotImplemented,
            dynamicData: map = NotImplemented,
            images: List[KalturaImage] = NotImplemented,
            isActive: bool = NotImplemented,
            startDateInSeconds: int = NotImplemented,
            endDateInSeconds: int = NotImplemented,
            type: str = NotImplemented,
            versionId: int = NotImplemented,
            virtualAssetId: int = NotImplemented,
            referenceId: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def getMultilingualName(self) -> List[KalturaTranslationToken]: ...
    def setMultilingualName(self, newMultilingualName: List[KalturaTranslationToken]) -> None: ...
    def getChildren(self) -> List[KalturaCategoryTree]: ...
    def getUnifiedChannels(self) -> List[KalturaUnifiedChannelInfo]: ...
    def setUnifiedChannels(self, newUnifiedChannels: List[KalturaUnifiedChannelInfo]) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...
    def getImages(self) -> List[KalturaImage]: ...
    def setImages(self, newImages: List[KalturaImage]) -> None: ...
    def getIsActive(self) -> bool: ...
    def setIsActive(self, newIsActive: bool) -> None: ...
    def getStartDateInSeconds(self) -> int: ...
    def setStartDateInSeconds(self, newStartDateInSeconds: int) -> None: ...
    def getEndDateInSeconds(self) -> int: ...
    def setEndDateInSeconds(self, newEndDateInSeconds: int) -> None: ...
    def getType(self) -> str: ...
    def setType(self, newType: str) -> None: ...
    def getVersionId(self) -> int: ...
    def getVirtualAssetId(self) -> int: ...
    def getReferenceId(self) -> str: ...

class KalturaCDNPartnerSettings(KalturaObjectBase):
    defaultAdapterId: int
    defaultRecordingAdapterId: int
    def __init__(self,
            defaultAdapterId: int = NotImplemented,
            defaultRecordingAdapterId: int = NotImplemented): ...

    def getDefaultAdapterId(self) -> int: ...
    def setDefaultAdapterId(self, newDefaultAdapterId: int) -> None: ...
    def getDefaultRecordingAdapterId(self) -> int: ...
    def setDefaultRecordingAdapterId(self, newDefaultRecordingAdapterId: int) -> None: ...

class KalturaCompensation(KalturaObjectBase):
    id: int
    subscriptionId: int
    compensationType: KalturaCompensationType
    amount: float
    totalRenewalIterations: int
    appliedRenewalIterations: int
    purchaseId: int
    def __init__(self,
            id: int = NotImplemented,
            subscriptionId: int = NotImplemented,
            compensationType: KalturaCompensationType = NotImplemented,
            amount: float = NotImplemented,
            totalRenewalIterations: int = NotImplemented,
            appliedRenewalIterations: int = NotImplemented,
            purchaseId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getSubscriptionId(self) -> int: ...
    def getCompensationType(self) -> KalturaCompensationType: ...
    def setCompensationType(self, newCompensationType: KalturaCompensationType) -> None: ...
    def getAmount(self) -> float: ...
    def setAmount(self, newAmount: float) -> None: ...
    def getTotalRenewalIterations(self) -> int: ...
    def setTotalRenewalIterations(self, newTotalRenewalIterations: int) -> None: ...
    def getAppliedRenewalIterations(self) -> int: ...
    def getPurchaseId(self) -> int: ...
    def setPurchaseId(self, newPurchaseId: int) -> None: ...

class KalturaCouponFilesLinks(KalturaObjectBase):
    totalCount: int
    objects: List[KalturaStringValue]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaStringValue] = NotImplemented): ...

    def getTotalCount(self) -> int: ...
    def setTotalCount(self, newTotalCount: int) -> None: ...
    def getObjects(self) -> List[KalturaStringValue]: ...
    def setObjects(self, newObjects: List[KalturaStringValue]) -> None: ...

class KalturaCouponGenerationOptions(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaPublicCouponGenerationOptions(KalturaCouponGenerationOptions):
    code: str
    def __init__(self,
            code: str = NotImplemented): ...

    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...

class KalturaRandomCouponGenerationOptions(KalturaCouponGenerationOptions):
    numberOfCoupons: int
    useLetters: bool
    useNumbers: bool
    useSpecialCharacters: bool
    def __init__(self,
            numberOfCoupons: int = NotImplemented,
            useLetters: bool = NotImplemented,
            useNumbers: bool = NotImplemented,
            useSpecialCharacters: bool = NotImplemented): ...

    def getNumberOfCoupons(self) -> int: ...
    def setNumberOfCoupons(self, newNumberOfCoupons: int) -> None: ...
    def getUseLetters(self) -> bool: ...
    def setUseLetters(self, newUseLetters: bool) -> None: ...
    def getUseNumbers(self) -> bool: ...
    def setUseNumbers(self, newUseNumbers: bool) -> None: ...
    def getUseSpecialCharacters(self) -> bool: ...
    def setUseSpecialCharacters(self, newUseSpecialCharacters: bool) -> None: ...

class KalturaKeyValue(KalturaObjectBase):
    key: str
    value: str
    def __init__(self,
            key: str = NotImplemented,
            value: str = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaEmailMessage(KalturaObjectBase):
    templateName: str
    subject: str
    firstName: str
    lastName: str
    senderName: str
    senderFrom: str
    senderTo: str
    bccAddress: str
    extraParameters: List[KalturaKeyValue]
    def __init__(self,
            templateName: str = NotImplemented,
            subject: str = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented,
            senderName: str = NotImplemented,
            senderFrom: str = NotImplemented,
            senderTo: str = NotImplemented,
            bccAddress: str = NotImplemented,
            extraParameters: List[KalturaKeyValue] = NotImplemented): ...

    def getTemplateName(self) -> str: ...
    def setTemplateName(self, newTemplateName: str) -> None: ...
    def getSubject(self) -> str: ...
    def setSubject(self, newSubject: str) -> None: ...
    def getFirstName(self) -> str: ...
    def setFirstName(self, newFirstName: str) -> None: ...
    def getLastName(self) -> str: ...
    def setLastName(self, newLastName: str) -> None: ...
    def getSenderName(self) -> str: ...
    def setSenderName(self, newSenderName: str) -> None: ...
    def getSenderFrom(self) -> str: ...
    def setSenderFrom(self, newSenderFrom: str) -> None: ...
    def getSenderTo(self) -> str: ...
    def setSenderTo(self, newSenderTo: str) -> None: ...
    def getBccAddress(self) -> str: ...
    def setBccAddress(self, newBccAddress: str) -> None: ...
    def getExtraParameters(self) -> List[KalturaKeyValue]: ...
    def setExtraParameters(self, newExtraParameters: List[KalturaKeyValue]) -> None: ...

class KalturaEntitlementRenewal(KalturaObjectBase):
    price: KalturaPrice
    date: int
    purchaseId: int
    subscriptionId: int
    userId: int
    def __init__(self,
            price: KalturaPrice = NotImplemented,
            date: int = NotImplemented,
            purchaseId: int = NotImplemented,
            subscriptionId: int = NotImplemented,
            userId: int = NotImplemented): ...

    def getPrice(self) -> KalturaPrice: ...
    def setPrice(self, newPrice: KalturaPrice) -> None: ...
    def getDate(self) -> int: ...
    def setDate(self, newDate: int) -> None: ...
    def getPurchaseId(self) -> int: ...
    def setPurchaseId(self, newPurchaseId: int) -> None: ...
    def getSubscriptionId(self) -> int: ...
    def setSubscriptionId(self, newSubscriptionId: int) -> None: ...
    def getUserId(self) -> int: ...
    def setUserId(self, newUserId: int) -> None: ...

class KalturaEpgServicePartnerConfiguration(KalturaObjectBase):
    numberOfSlots: int
    firstSlotOffset: int
    def __init__(self,
            numberOfSlots: int = NotImplemented,
            firstSlotOffset: int = NotImplemented): ...

    def getNumberOfSlots(self) -> int: ...
    def setNumberOfSlots(self, newNumberOfSlots: int) -> None: ...
    def getFirstSlotOffset(self) -> int: ...
    def setFirstSlotOffset(self, newFirstSlotOffset: int) -> None: ...

class KalturaEventNotificationScope(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaEventObject(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaEventNotificationObjectScope(KalturaEventNotificationScope):
    eventObject: KalturaEventObject
    def __init__(self,
            eventObject: KalturaEventObject = NotImplemented): ...

    def getEventObject(self) -> KalturaEventObject: ...
    def setEventObject(self, newEventObject: KalturaEventObject) -> None: ...

class KalturaAssetEvent(KalturaEventObject):
    userId: int
    assetId: int
    type: int
    externalId: str
    def __init__(self,
            userId: int = NotImplemented,
            assetId: int = NotImplemented,
            type: int = NotImplemented,
            externalId: str = NotImplemented): ...

    def getUserId(self) -> int: ...
    def getAssetId(self) -> int: ...
    def getType(self) -> int: ...
    def getExternalId(self) -> str: ...

class KalturaProgramAssetEvent(KalturaAssetEvent):
    liveAssetId: int
    def __init__(self,
            userId: int = NotImplemented,
            assetId: int = NotImplemented,
            type: int = NotImplemented,
            externalId: str = NotImplemented,
            liveAssetId: int = NotImplemented): ...

    def getLiveAssetId(self) -> int: ...

class KalturaBookmarkEvent(KalturaEventObject):
    userId: int
    householdId: int
    assetId: int
    fileId: int
    position: int
    action: KalturaBookmarkActionType
    productType: KalturaTransactionType
    productId: int
    def __init__(self,
            userId: int = NotImplemented,
            householdId: int = NotImplemented,
            assetId: int = NotImplemented,
            fileId: int = NotImplemented,
            position: int = NotImplemented,
            action: KalturaBookmarkActionType = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            productId: int = NotImplemented): ...

    def getUserId(self) -> int: ...
    def setUserId(self, newUserId: int) -> None: ...
    def getHouseholdId(self) -> int: ...
    def setHouseholdId(self, newHouseholdId: int) -> None: ...
    def getAssetId(self) -> int: ...
    def setAssetId(self, newAssetId: int) -> None: ...
    def getFileId(self) -> int: ...
    def setFileId(self, newFileId: int) -> None: ...
    def getPosition(self) -> int: ...
    def setPosition(self, newPosition: int) -> None: ...
    def getAction(self) -> KalturaBookmarkActionType: ...
    def setAction(self, newAction: KalturaBookmarkActionType) -> None: ...
    def getProductType(self) -> KalturaTransactionType: ...
    def setProductType(self, newProductType: KalturaTransactionType) -> None: ...
    def getProductId(self) -> int: ...
    def setProductId(self, newProductId: int) -> None: ...

class KalturaConcurrencyViolation(KalturaEventObject):
    timestamp: int
    udid: str
    assetId: str
    violationRule: str
    householdId: str
    userId: str
    def __init__(self,
            timestamp: int = NotImplemented,
            udid: str = NotImplemented,
            assetId: str = NotImplemented,
            violationRule: str = NotImplemented,
            householdId: str = NotImplemented,
            userId: str = NotImplemented): ...

    def getTimestamp(self) -> int: ...
    def setTimestamp(self, newTimestamp: int) -> None: ...
    def getUdid(self) -> str: ...
    def setUdid(self, newUdid: str) -> None: ...
    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...
    def getViolationRule(self) -> str: ...
    def setViolationRule(self, newViolationRule: str) -> None: ...
    def getHouseholdId(self) -> str: ...
    def setHouseholdId(self, newHouseholdId: str) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...

class KalturaTriggerCampaignEvent(KalturaEventObject):
    userId: int
    campaignId: int
    udid: str
    householdId: int
    def __init__(self,
            userId: int = NotImplemented,
            campaignId: int = NotImplemented,
            udid: str = NotImplemented,
            householdId: int = NotImplemented): ...

    def getUserId(self) -> int: ...
    def getCampaignId(self) -> int: ...
    def getUdid(self) -> str: ...
    def getHouseholdId(self) -> int: ...

class KalturaRetryDeleteRequest(KalturaObjectBase):
    startDate: int
    endDate: int
    def __init__(self,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented): ...

    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...

class KalturaHouseholdPartnerConfiguration(KalturaObjectBase):
    retentionPeriodDays: int
    def __init__(self,
            retentionPeriodDays: int = NotImplemented): ...

    def getRetentionPeriodDays(self) -> int: ...
    def setRetentionPeriodDays(self, newRetentionPeriodDays: int) -> None: ...

class KalturaDevicePin(KalturaObjectBase):
    pin: str
    def __init__(self,
            pin: str = NotImplemented): ...

    def getPin(self) -> str: ...
    def setPin(self, newPin: str) -> None: ...

class KalturaLoginSession(KalturaObjectBase):
    ks: str
    expiry: int
    def __init__(self,
            ks: str = NotImplemented,
            expiry: int = NotImplemented): ...

    def getKs(self) -> str: ...
    def setKs(self, newKs: str) -> None: ...
    def getExpiry(self) -> int: ...
    def setExpiry(self, newExpiry: int) -> None: ...

class KalturaLoginResponse(KalturaObjectBase):
    user: KalturaOTTUser
    loginSession: KalturaLoginSession
    def __init__(self,
            user: KalturaOTTUser = NotImplemented,
            loginSession: KalturaLoginSession = NotImplemented): ...

    def getUser(self) -> KalturaOTTUser: ...
    def setUser(self, newUser: KalturaOTTUser) -> None: ...
    def getLoginSession(self) -> KalturaLoginSession: ...
    def setLoginSession(self, newLoginSession: KalturaLoginSession) -> None: ...

class KalturaDynamicData(KalturaObjectBase):
    key: str
    value: KalturaValue
    def __init__(self,
            key: str = NotImplemented,
            value: KalturaValue = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValue(self) -> KalturaValue: ...
    def setValue(self, newValue: KalturaValue) -> None: ...

class KalturaPaymentGatewayConfiguration(KalturaObjectBase):
    paymentGatewayConfiguration: List[KalturaKeyValue]
    def __init__(self,
            paymentGatewayConfiguration: List[KalturaKeyValue] = NotImplemented): ...

    def getPaymentGatewayConfiguration(self) -> List[KalturaKeyValue]: ...
    def setPaymentGatewayConfiguration(self, newPaymentGatewayConfiguration: List[KalturaKeyValue]) -> None: ...

class KalturaHouseholdQuota(KalturaObjectBase):
    householdId: int
    totalQuota: int
    availableQuota: int
    def __init__(self,
            householdId: int = NotImplemented,
            totalQuota: int = NotImplemented,
            availableQuota: int = NotImplemented): ...

    def getHouseholdId(self) -> int: ...
    def getTotalQuota(self) -> int: ...
    def getAvailableQuota(self) -> int: ...

class KalturaContentResource(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaUploadedFileTokenResource(KalturaContentResource):
    token: str
    def __init__(self,
            token: str = NotImplemented): ...

    def getToken(self) -> str: ...
    def setToken(self, newToken: str) -> None: ...

class KalturaUrlResource(KalturaContentResource):
    url: str
    def __init__(self,
            url: str = NotImplemented): ...

    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...

class KalturaIngestStatusEpgConfiguration(KalturaObjectBase):
    isSupported: bool
    retainingPeriod: int
    def __init__(self,
            isSupported: bool = NotImplemented,
            retainingPeriod: int = NotImplemented): ...

    def getIsSupported(self) -> bool: ...
    def setIsSupported(self, newIsSupported: bool) -> None: ...
    def getRetainingPeriod(self) -> int: ...
    def setRetainingPeriod(self, newRetainingPeriod: int) -> None: ...

class KalturaIngestStatusVodConfiguration(KalturaObjectBase):
    isSupported: bool
    retainingPeriod: int
    def __init__(self,
            isSupported: bool = NotImplemented,
            retainingPeriod: int = NotImplemented): ...

    def getIsSupported(self) -> bool: ...
    def setIsSupported(self, newIsSupported: bool) -> None: ...
    def getRetainingPeriod(self) -> int: ...
    def setRetainingPeriod(self, newRetainingPeriod: int) -> None: ...

class KalturaIngestStatusPartnerConfiguration(KalturaObjectBase):
    epg: KalturaIngestStatusEpgConfiguration
    vod: KalturaIngestStatusVodConfiguration
    def __init__(self,
            epg: KalturaIngestStatusEpgConfiguration = NotImplemented,
            vod: KalturaIngestStatusVodConfiguration = NotImplemented): ...

    def getEpg(self) -> KalturaIngestStatusEpgConfiguration: ...
    def setEpg(self, newEpg: KalturaIngestStatusEpgConfiguration) -> None: ...
    def getVod(self) -> KalturaIngestStatusVodConfiguration: ...
    def setVod(self, newVod: KalturaIngestStatusVodConfiguration) -> None: ...

class KalturaVodIngestAssetResultErrorMessage(KalturaObjectBase):
    message: str
    code: str
    def __init__(self,
            message: str = NotImplemented,
            code: str = NotImplemented): ...

    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...

class KalturaVodIngestAssetResult(KalturaObjectBase):
    assetName: str
    shopAssetUserRuleId: int
    fileName: str
    ingestDate: int
    status: KalturaVodIngestAssetResultStatus
    vodTypeSystemName: str
    errors: List[KalturaVodIngestAssetResultErrorMessage]
    warnings: List[KalturaVodIngestAssetResultErrorMessage]
    def __init__(self,
            assetName: str = NotImplemented,
            shopAssetUserRuleId: int = NotImplemented,
            fileName: str = NotImplemented,
            ingestDate: int = NotImplemented,
            status: KalturaVodIngestAssetResultStatus = NotImplemented,
            vodTypeSystemName: str = NotImplemented,
            errors: List[KalturaVodIngestAssetResultErrorMessage] = NotImplemented,
            warnings: List[KalturaVodIngestAssetResultErrorMessage] = NotImplemented): ...

    def getAssetName(self) -> str: ...
    def setAssetName(self, newAssetName: str) -> None: ...
    def getShopAssetUserRuleId(self) -> int: ...
    def setShopAssetUserRuleId(self, newShopAssetUserRuleId: int) -> None: ...
    def getFileName(self) -> str: ...
    def setFileName(self, newFileName: str) -> None: ...
    def getIngestDate(self) -> int: ...
    def setIngestDate(self, newIngestDate: int) -> None: ...
    def getStatus(self) -> KalturaVodIngestAssetResultStatus: ...
    def setStatus(self, newStatus: KalturaVodIngestAssetResultStatus) -> None: ...
    def getVodTypeSystemName(self) -> str: ...
    def setVodTypeSystemName(self, newVodTypeSystemName: str) -> None: ...
    def getErrors(self) -> List[KalturaVodIngestAssetResultErrorMessage]: ...
    def setErrors(self, newErrors: List[KalturaVodIngestAssetResultErrorMessage]) -> None: ...
    def getWarnings(self) -> List[KalturaVodIngestAssetResultErrorMessage]: ...
    def setWarnings(self, newWarnings: List[KalturaVodIngestAssetResultErrorMessage]) -> None: ...

class KalturaVodIngestAssetResultList(KalturaObjectBase):
    objects: List[KalturaVodIngestAssetResult]
    totalCount: int
    def __init__(self,
            objects: List[KalturaVodIngestAssetResult] = NotImplemented,
            totalCount: int = NotImplemented): ...

    def getObjects(self) -> List[KalturaVodIngestAssetResult]: ...
    def setObjects(self, newObjects: List[KalturaVodIngestAssetResult]) -> None: ...
    def getTotalCount(self) -> int: ...
    def setTotalCount(self, newTotalCount: int) -> None: ...

class KalturaVodIngestAssetResultAggregation(KalturaObjectBase):
    ingestDateFrom: int
    ingestDateTo: int
    failureCount: int
    successCount: int
    externalFailureCount: int
    successWithWarningCount: int
    def __init__(self,
            ingestDateFrom: int = NotImplemented,
            ingestDateTo: int = NotImplemented,
            failureCount: int = NotImplemented,
            successCount: int = NotImplemented,
            externalFailureCount: int = NotImplemented,
            successWithWarningCount: int = NotImplemented): ...

    def getIngestDateFrom(self) -> int: ...
    def setIngestDateFrom(self, newIngestDateFrom: int) -> None: ...
    def getIngestDateTo(self) -> int: ...
    def setIngestDateTo(self, newIngestDateTo: int) -> None: ...
    def getFailureCount(self) -> int: ...
    def setFailureCount(self, newFailureCount: int) -> None: ...
    def getSuccessCount(self) -> int: ...
    def setSuccessCount(self, newSuccessCount: int) -> None: ...
    def getExternalFailureCount(self) -> int: ...
    def setExternalFailureCount(self, newExternalFailureCount: int) -> None: ...
    def getSuccessWithWarningCount(self) -> int: ...
    def setSuccessWithWarningCount(self, newSuccessWithWarningCount: int) -> None: ...

class KalturaVodIngestAssetResultResponse(KalturaObjectBase):
    result: KalturaVodIngestAssetResultList
    aggregations: KalturaVodIngestAssetResultAggregation
    def __init__(self,
            result: KalturaVodIngestAssetResultList = NotImplemented,
            aggregations: KalturaVodIngestAssetResultAggregation = NotImplemented): ...

    def getResult(self) -> KalturaVodIngestAssetResultList: ...
    def setResult(self, newResult: KalturaVodIngestAssetResultList) -> None: ...
    def getAggregations(self) -> KalturaVodIngestAssetResultAggregation: ...
    def setAggregations(self, newAggregations: KalturaVodIngestAssetResultAggregation) -> None: ...

class KalturaIotClientConfiguration(KalturaObjectBase):
    identityPoolId: str
    userPoolId: str
    awsRegion: str
    appClientId: str
    legacyEndPoint: str
    endPoint: str
    thingName: str
    thingArn: str
    thingId: str
    username: str
    password: str
    topics: List[KalturaKeyValue]
    status: str
    message: str
    def __init__(self,
            identityPoolId: str = NotImplemented,
            userPoolId: str = NotImplemented,
            awsRegion: str = NotImplemented,
            appClientId: str = NotImplemented,
            legacyEndPoint: str = NotImplemented,
            endPoint: str = NotImplemented,
            thingName: str = NotImplemented,
            thingArn: str = NotImplemented,
            thingId: str = NotImplemented,
            username: str = NotImplemented,
            password: str = NotImplemented,
            topics: List[KalturaKeyValue] = NotImplemented,
            status: str = NotImplemented,
            message: str = NotImplemented): ...

    def getIdentityPoolId(self) -> str: ...
    def setIdentityPoolId(self, newIdentityPoolId: str) -> None: ...
    def getUserPoolId(self) -> str: ...
    def setUserPoolId(self, newUserPoolId: str) -> None: ...
    def getAwsRegion(self) -> str: ...
    def setAwsRegion(self, newAwsRegion: str) -> None: ...
    def getAppClientId(self) -> str: ...
    def setAppClientId(self, newAppClientId: str) -> None: ...
    def getLegacyEndPoint(self) -> str: ...
    def setLegacyEndPoint(self, newLegacyEndPoint: str) -> None: ...
    def getEndPoint(self) -> str: ...
    def setEndPoint(self, newEndPoint: str) -> None: ...
    def getThingName(self) -> str: ...
    def setThingName(self, newThingName: str) -> None: ...
    def getThingArn(self) -> str: ...
    def setThingArn(self, newThingArn: str) -> None: ...
    def getThingId(self) -> str: ...
    def setThingId(self, newThingId: str) -> None: ...
    def getUsername(self) -> str: ...
    def setUsername(self, newUsername: str) -> None: ...
    def getPassword(self) -> str: ...
    def setPassword(self, newPassword: str) -> None: ...
    def getTopics(self) -> List[KalturaKeyValue]: ...
    def setTopics(self, newTopics: List[KalturaKeyValue]) -> None: ...
    def getStatus(self) -> str: ...
    def setStatus(self, newStatus: str) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...

class KalturaLicensedUrl(KalturaObjectBase):
    mainUrl: str
    altUrl: str
    def __init__(self,
            mainUrl: str = NotImplemented,
            altUrl: str = NotImplemented): ...

    def getMainUrl(self) -> str: ...
    def setMainUrl(self, newMainUrl: str) -> None: ...
    def getAltUrl(self) -> str: ...
    def setAltUrl(self, newAltUrl: str) -> None: ...

class KalturaLicensedUrlBaseRequest(KalturaObjectBase):
    assetId: str
    def __init__(self,
            assetId: str = NotImplemented): ...

    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...

class KalturaLicensedUrlMediaRequest(KalturaLicensedUrlBaseRequest):
    contentId: int
    baseUrl: str
    def __init__(self,
            assetId: str = NotImplemented,
            contentId: int = NotImplemented,
            baseUrl: str = NotImplemented): ...

    def getContentId(self) -> int: ...
    def setContentId(self, newContentId: int) -> None: ...
    def getBaseUrl(self) -> str: ...
    def setBaseUrl(self, newBaseUrl: str) -> None: ...

class KalturaLicensedUrlEpgRequest(KalturaLicensedUrlMediaRequest):
    streamType: KalturaStreamType
    startDate: int
    def __init__(self,
            assetId: str = NotImplemented,
            contentId: int = NotImplemented,
            baseUrl: str = NotImplemented,
            streamType: KalturaStreamType = NotImplemented,
            startDate: int = NotImplemented): ...

    def getStreamType(self) -> KalturaStreamType: ...
    def setStreamType(self, newStreamType: KalturaStreamType) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...

class KalturaLicensedUrlRecordingRequest(KalturaLicensedUrlBaseRequest):
    fileType: str
    def __init__(self,
            assetId: str = NotImplemented,
            fileType: str = NotImplemented): ...

    def getFileType(self) -> str: ...
    def setFileType(self, newFileType: str) -> None: ...

class KalturaLiveToVodLinearAssetConfiguration(KalturaObjectBase):
    linearAssetId: int
    isL2vEnabled: bool
    retentionPeriodDays: int
    def __init__(self,
            linearAssetId: int = NotImplemented,
            isL2vEnabled: bool = NotImplemented,
            retentionPeriodDays: int = NotImplemented): ...

    def getLinearAssetId(self) -> int: ...
    def setLinearAssetId(self, newLinearAssetId: int) -> None: ...
    def getIsL2vEnabled(self) -> bool: ...
    def setIsL2vEnabled(self, newIsL2vEnabled: bool) -> None: ...
    def getRetentionPeriodDays(self) -> int: ...
    def setRetentionPeriodDays(self, newRetentionPeriodDays: int) -> None: ...

class KalturaLiveToVodFullConfiguration(KalturaObjectBase):
    isL2vEnabled: bool
    retentionPeriodDays: int
    metadataClassifier: str
    linearAssets: List[KalturaLiveToVodLinearAssetConfiguration]
    def __init__(self,
            isL2vEnabled: bool = NotImplemented,
            retentionPeriodDays: int = NotImplemented,
            metadataClassifier: str = NotImplemented,
            linearAssets: List[KalturaLiveToVodLinearAssetConfiguration] = NotImplemented): ...

    def getIsL2vEnabled(self) -> bool: ...
    def setIsL2vEnabled(self, newIsL2vEnabled: bool) -> None: ...
    def getRetentionPeriodDays(self) -> int: ...
    def setRetentionPeriodDays(self, newRetentionPeriodDays: int) -> None: ...
    def getMetadataClassifier(self) -> str: ...
    def setMetadataClassifier(self, newMetadataClassifier: str) -> None: ...
    def getLinearAssets(self) -> List[KalturaLiveToVodLinearAssetConfiguration]: ...
    def setLinearAssets(self, newLinearAssets: List[KalturaLiveToVodLinearAssetConfiguration]) -> None: ...

class KalturaLiveToVodPartnerConfiguration(KalturaObjectBase):
    isL2vEnabled: bool
    retentionPeriodDays: int
    metadataClassifier: str
    def __init__(self,
            isL2vEnabled: bool = NotImplemented,
            retentionPeriodDays: int = NotImplemented,
            metadataClassifier: str = NotImplemented): ...

    def getIsL2vEnabled(self) -> bool: ...
    def setIsL2vEnabled(self, newIsL2vEnabled: bool) -> None: ...
    def getRetentionPeriodDays(self) -> int: ...
    def setRetentionPeriodDays(self, newRetentionPeriodDays: int) -> None: ...
    def getMetadataClassifier(self) -> str: ...
    def setMetadataClassifier(self, newMetadataClassifier: str) -> None: ...

class KalturaMessageTemplate(KalturaObjectBase):
    message: str
    dateFormat: str
    messageType: KalturaMessageTemplateType
    sound: str
    action: str
    url: str
    mailTemplate: str
    mailSubject: str
    ratioId: str
    def __init__(self,
            message: str = NotImplemented,
            dateFormat: str = NotImplemented,
            messageType: KalturaMessageTemplateType = NotImplemented,
            sound: str = NotImplemented,
            action: str = NotImplemented,
            url: str = NotImplemented,
            mailTemplate: str = NotImplemented,
            mailSubject: str = NotImplemented,
            ratioId: str = NotImplemented): ...

    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getDateFormat(self) -> str: ...
    def setDateFormat(self, newDateFormat: str) -> None: ...
    def getMessageType(self) -> KalturaMessageTemplateType: ...
    def setMessageType(self, newMessageType: KalturaMessageTemplateType) -> None: ...
    def getSound(self) -> str: ...
    def setSound(self, newSound: str) -> None: ...
    def getAction(self) -> str: ...
    def setAction(self, newAction: str) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getMailTemplate(self) -> str: ...
    def setMailTemplate(self, newMailTemplate: str) -> None: ...
    def getMailSubject(self) -> str: ...
    def setMailSubject(self, newMailSubject: str) -> None: ...
    def getRatioId(self) -> str: ...
    def setRatioId(self, newRatioId: str) -> None: ...

class KalturaMultifactorAuthenticationPartnerConfiguration(KalturaObjectBase):
    isEnabled: bool
    roles: str
    tokenExpirationInSeconds: int
    tokenDeliveryMethod: KalturaTokenDeliveryMethod
    def __init__(self,
            isEnabled: bool = NotImplemented,
            roles: str = NotImplemented,
            tokenExpirationInSeconds: int = NotImplemented,
            tokenDeliveryMethod: KalturaTokenDeliveryMethod = NotImplemented): ...

    def getIsEnabled(self) -> bool: ...
    def setIsEnabled(self, newIsEnabled: bool) -> None: ...
    def getRoles(self) -> str: ...
    def setRoles(self, newRoles: str) -> None: ...
    def getTokenExpirationInSeconds(self) -> int: ...
    def setTokenExpirationInSeconds(self, newTokenExpirationInSeconds: int) -> None: ...
    def getTokenDeliveryMethod(self) -> KalturaTokenDeliveryMethod: ...
    def setTokenDeliveryMethod(self, newTokenDeliveryMethod: KalturaTokenDeliveryMethod) -> None: ...

class KalturaRegistryResponse(KalturaObjectBase):
    announcementId: int
    key: str
    url: str
    def __init__(self,
            announcementId: int = NotImplemented,
            key: str = NotImplemented,
            url: str = NotImplemented): ...

    def getAnnouncementId(self) -> int: ...
    def setAnnouncementId(self, newAnnouncementId: int) -> None: ...
    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...

class KalturaPushMessage(KalturaObjectBase):
    message: str
    sound: str
    action: str
    url: str
    udid: str
    pushChannels: str
    def __init__(self,
            message: str = NotImplemented,
            sound: str = NotImplemented,
            action: str = NotImplemented,
            url: str = NotImplemented,
            udid: str = NotImplemented,
            pushChannels: str = NotImplemented): ...

    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getSound(self) -> str: ...
    def setSound(self, newSound: str) -> None: ...
    def getAction(self) -> str: ...
    def setAction(self, newAction: str) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getUdid(self) -> str: ...
    def setUdid(self, newUdid: str) -> None: ...
    def getPushChannels(self) -> str: ...
    def setPushChannels(self, newPushChannels: str) -> None: ...

class KalturaEpgNotificationSettings(KalturaObjectBase):
    enabled: bool
    deviceFamilyIds: str
    liveAssetIds: str
    backwardTimeRange: int
    forwardTimeRange: int
    def __init__(self,
            enabled: bool = NotImplemented,
            deviceFamilyIds: str = NotImplemented,
            liveAssetIds: str = NotImplemented,
            backwardTimeRange: int = NotImplemented,
            forwardTimeRange: int = NotImplemented): ...

    def getEnabled(self) -> bool: ...
    def setEnabled(self, newEnabled: bool) -> None: ...
    def getDeviceFamilyIds(self) -> str: ...
    def setDeviceFamilyIds(self, newDeviceFamilyIds: str) -> None: ...
    def getLiveAssetIds(self) -> str: ...
    def setLiveAssetIds(self, newLiveAssetIds: str) -> None: ...
    def getBackwardTimeRange(self) -> int: ...
    def setBackwardTimeRange(self, newBackwardTimeRange: int) -> None: ...
    def getForwardTimeRange(self) -> int: ...
    def setForwardTimeRange(self, newForwardTimeRange: int) -> None: ...

class KalturaLineupNotificationSettings(KalturaObjectBase):
    enabled: bool
    def __init__(self,
            enabled: bool = NotImplemented): ...

    def getEnabled(self) -> bool: ...
    def setEnabled(self, newEnabled: bool) -> None: ...

class KalturaNotificationsPartnerSettings(KalturaObjectBase):
    pushNotificationEnabled: bool
    pushSystemAnnouncementsEnabled: bool
    pushStartHour: int
    pushEndHour: int
    inboxEnabled: bool
    messageTTLDays: int
    automaticIssueFollowNotification: bool
    topicExpirationDurationDays: int
    reminderEnabled: bool
    reminderOffsetSec: int
    pushAdapterUrl: str
    churnMailTemplateName: str
    churnMailSubject: str
    senderEmail: str
    mailSenderName: str
    mailNotificationAdapterId: int
    smsEnabled: bool
    iotEnabled: bool
    epgNotification: KalturaEpgNotificationSettings
    lineupNotification: KalturaLineupNotificationSettings
    def __init__(self,
            pushNotificationEnabled: bool = NotImplemented,
            pushSystemAnnouncementsEnabled: bool = NotImplemented,
            pushStartHour: int = NotImplemented,
            pushEndHour: int = NotImplemented,
            inboxEnabled: bool = NotImplemented,
            messageTTLDays: int = NotImplemented,
            automaticIssueFollowNotification: bool = NotImplemented,
            topicExpirationDurationDays: int = NotImplemented,
            reminderEnabled: bool = NotImplemented,
            reminderOffsetSec: int = NotImplemented,
            pushAdapterUrl: str = NotImplemented,
            churnMailTemplateName: str = NotImplemented,
            churnMailSubject: str = NotImplemented,
            senderEmail: str = NotImplemented,
            mailSenderName: str = NotImplemented,
            mailNotificationAdapterId: int = NotImplemented,
            smsEnabled: bool = NotImplemented,
            iotEnabled: bool = NotImplemented,
            epgNotification: KalturaEpgNotificationSettings = NotImplemented,
            lineupNotification: KalturaLineupNotificationSettings = NotImplemented): ...

    def getPushNotificationEnabled(self) -> bool: ...
    def setPushNotificationEnabled(self, newPushNotificationEnabled: bool) -> None: ...
    def getPushSystemAnnouncementsEnabled(self) -> bool: ...
    def setPushSystemAnnouncementsEnabled(self, newPushSystemAnnouncementsEnabled: bool) -> None: ...
    def getPushStartHour(self) -> int: ...
    def setPushStartHour(self, newPushStartHour: int) -> None: ...
    def getPushEndHour(self) -> int: ...
    def setPushEndHour(self, newPushEndHour: int) -> None: ...
    def getInboxEnabled(self) -> bool: ...
    def setInboxEnabled(self, newInboxEnabled: bool) -> None: ...
    def getMessageTTLDays(self) -> int: ...
    def setMessageTTLDays(self, newMessageTTLDays: int) -> None: ...
    def getAutomaticIssueFollowNotification(self) -> bool: ...
    def setAutomaticIssueFollowNotification(self, newAutomaticIssueFollowNotification: bool) -> None: ...
    def getTopicExpirationDurationDays(self) -> int: ...
    def setTopicExpirationDurationDays(self, newTopicExpirationDurationDays: int) -> None: ...
    def getReminderEnabled(self) -> bool: ...
    def setReminderEnabled(self, newReminderEnabled: bool) -> None: ...
    def getReminderOffsetSec(self) -> int: ...
    def setReminderOffsetSec(self, newReminderOffsetSec: int) -> None: ...
    def getPushAdapterUrl(self) -> str: ...
    def setPushAdapterUrl(self, newPushAdapterUrl: str) -> None: ...
    def getChurnMailTemplateName(self) -> str: ...
    def setChurnMailTemplateName(self, newChurnMailTemplateName: str) -> None: ...
    def getChurnMailSubject(self) -> str: ...
    def setChurnMailSubject(self, newChurnMailSubject: str) -> None: ...
    def getSenderEmail(self) -> str: ...
    def setSenderEmail(self, newSenderEmail: str) -> None: ...
    def getMailSenderName(self) -> str: ...
    def setMailSenderName(self, newMailSenderName: str) -> None: ...
    def getMailNotificationAdapterId(self) -> int: ...
    def setMailNotificationAdapterId(self, newMailNotificationAdapterId: int) -> None: ...
    def getSmsEnabled(self) -> bool: ...
    def setSmsEnabled(self, newSmsEnabled: bool) -> None: ...
    def getIotEnabled(self) -> bool: ...
    def setIotEnabled(self, newIotEnabled: bool) -> None: ...
    def getEpgNotification(self) -> KalturaEpgNotificationSettings: ...
    def setEpgNotification(self, newEpgNotification: KalturaEpgNotificationSettings) -> None: ...
    def getLineupNotification(self) -> KalturaLineupNotificationSettings: ...
    def setLineupNotification(self, newLineupNotification: KalturaLineupNotificationSettings) -> None: ...

class KalturaNotificationsSettings(KalturaObjectBase):
    pushNotificationEnabled: bool
    pushFollowEnabled: bool
    mailEnabled: bool
    smsEnabled: bool
    def __init__(self,
            pushNotificationEnabled: bool = NotImplemented,
            pushFollowEnabled: bool = NotImplemented,
            mailEnabled: bool = NotImplemented,
            smsEnabled: bool = NotImplemented): ...

    def getPushNotificationEnabled(self) -> bool: ...
    def setPushNotificationEnabled(self, newPushNotificationEnabled: bool) -> None: ...
    def getPushFollowEnabled(self) -> bool: ...
    def setPushFollowEnabled(self, newPushFollowEnabled: bool) -> None: ...
    def getMailEnabled(self) -> bool: ...
    def setMailEnabled(self, newMailEnabled: bool) -> None: ...
    def getSmsEnabled(self) -> bool: ...
    def setSmsEnabled(self, newSmsEnabled: bool) -> None: ...

class KalturaOTTUserDynamicData(KalturaObjectBase):
    userId: str
    key: str
    value: KalturaStringValue
    def __init__(self,
            userId: str = NotImplemented,
            key: str = NotImplemented,
            value: KalturaStringValue = NotImplemented): ...

    def getUserId(self) -> str: ...
    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValue(self) -> KalturaStringValue: ...
    def setValue(self, newValue: KalturaStringValue) -> None: ...

class KalturaResendMfaTokenResponse(KalturaObjectBase):
    result: bool
    def __init__(self,
            result: bool = NotImplemented): ...

    def getResult(self) -> bool: ...
    def setResult(self, newResult: bool) -> None: ...

class KalturaPartnerSetup(KalturaObjectBase):
    adminUsername: str
    adminPassword: str
    basePartnerConfiguration: KalturaBasePartnerConfiguration
    def __init__(self,
            adminUsername: str = NotImplemented,
            adminPassword: str = NotImplemented,
            basePartnerConfiguration: KalturaBasePartnerConfiguration = NotImplemented): ...

    def getAdminUsername(self) -> str: ...
    def setAdminUsername(self, newAdminUsername: str) -> None: ...
    def getAdminPassword(self) -> str: ...
    def setAdminPassword(self, newAdminPassword: str) -> None: ...
    def getBasePartnerConfiguration(self) -> KalturaBasePartnerConfiguration: ...
    def setBasePartnerConfiguration(self, newBasePartnerConfiguration: KalturaBasePartnerConfiguration) -> None: ...

class KalturaPartnerPremiumService(KalturaObjectBase):
    id: int
    name: str
    isApplied: bool
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            isApplied: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getName(self) -> str: ...
    def getIsApplied(self) -> bool: ...
    def setIsApplied(self, newIsApplied: bool) -> None: ...

class KalturaPartnerPremiumServices(KalturaObjectBase):
    objects: List[KalturaPartnerPremiumService]
    def __init__(self,
            objects: List[KalturaPartnerPremiumService] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPartnerPremiumService]: ...
    def setObjects(self, newObjects: List[KalturaPartnerPremiumService]) -> None: ...

class KalturaPersonalActivityCleanupConfiguration(KalturaObjectBase):
    retentionPeriodDays: int
    def __init__(self,
            retentionPeriodDays: int = NotImplemented): ...

    def getRetentionPeriodDays(self) -> int: ...
    def setRetentionPeriodDays(self, newRetentionPeriodDays: int) -> None: ...

class KalturaPin(KalturaObjectBase):
    pin: str
    origin: KalturaRuleLevel
    type: KalturaPinType
    def __init__(self,
            pin: str = NotImplemented,
            origin: KalturaRuleLevel = NotImplemented,
            type: KalturaPinType = NotImplemented): ...

    def getPin(self) -> str: ...
    def setPin(self, newPin: str) -> None: ...
    def getOrigin(self) -> KalturaRuleLevel: ...
    def setOrigin(self, newOrigin: KalturaRuleLevel) -> None: ...
    def getType(self) -> KalturaPinType: ...
    def setType(self, newType: KalturaPinType) -> None: ...

class KalturaPurchaseSettings(KalturaPin):
    permission: KalturaPurchaseSettingsType
    def __init__(self,
            pin: str = NotImplemented,
            origin: KalturaRuleLevel = NotImplemented,
            type: KalturaPinType = NotImplemented,
            permission: KalturaPurchaseSettingsType = NotImplemented): ...

    def getPermission(self) -> KalturaPurchaseSettingsType: ...
    def setPermission(self, newPermission: KalturaPurchaseSettingsType) -> None: ...

class KalturaActionResult(KalturaObjectBase):
    id: int
    result: KalturaMessage
    def __init__(self,
            id: int = NotImplemented,
            result: KalturaMessage = NotImplemented): ...

    def getId(self) -> int: ...
    def getResult(self) -> KalturaMessage: ...

class KalturaRegionChannelNumber(KalturaObjectBase):
    regionId: int
    channelNumber: int
    dynamicData: map
    def __init__(self,
            regionId: int = NotImplemented,
            channelNumber: int = NotImplemented,
            dynamicData: map = NotImplemented): ...

    def getRegionId(self) -> int: ...
    def setRegionId(self, newRegionId: int) -> None: ...
    def getChannelNumber(self) -> int: ...
    def setChannelNumber(self, newChannelNumber: int) -> None: ...
    def getDynamicData(self) -> map: ...
    def setDynamicData(self, newDynamicData: map) -> None: ...

class KalturaRegionChannelNumberMultiLcns(KalturaRegionChannelNumber):
    lcns: str
    def __init__(self,
            regionId: int = NotImplemented,
            channelNumber: int = NotImplemented,
            dynamicData: map = NotImplemented,
            lcns: str = NotImplemented): ...

    def getLcns(self) -> str: ...
    def setLcns(self, newLcns: str) -> None: ...

class KalturaSearchPriorityGroupOrderedIdsSet(KalturaObjectBase):
    priorityGroupIds: str
    def __init__(self,
            priorityGroupIds: str = NotImplemented): ...

    def getPriorityGroupIds(self) -> str: ...
    def setPriorityGroupIds(self, newPriorityGroupIds: str) -> None: ...

class KalturaSegmentationPartnerConfiguration(KalturaObjectBase):
    maxCalculatedPeriod: int
    maxDynamicSegments: int
    def __init__(self,
            maxCalculatedPeriod: int = NotImplemented,
            maxDynamicSegments: int = NotImplemented): ...

    def getMaxCalculatedPeriod(self) -> int: ...
    def setMaxCalculatedPeriod(self, newMaxCalculatedPeriod: int) -> None: ...
    def getMaxDynamicSegments(self) -> int: ...
    def setMaxDynamicSegments(self, newMaxDynamicSegments: int) -> None: ...

class KalturaNetworkActionStatus(KalturaObjectBase):
    status: KalturaSocialStatus
    network: KalturaSocialNetwork
    def __init__(self,
            status: KalturaSocialStatus = NotImplemented,
            network: KalturaSocialNetwork = NotImplemented): ...

    def getStatus(self) -> KalturaSocialStatus: ...
    def setStatus(self, newStatus: KalturaSocialStatus) -> None: ...
    def getNetwork(self) -> KalturaSocialNetwork: ...
    def setNetwork(self, newNetwork: KalturaSocialNetwork) -> None: ...

class KalturaUserSocialActionResponse(KalturaObjectBase):
    socialAction: KalturaSocialAction
    failStatus: List[KalturaNetworkActionStatus]
    def __init__(self,
            socialAction: KalturaSocialAction = NotImplemented,
            failStatus: List[KalturaNetworkActionStatus] = NotImplemented): ...

    def getSocialAction(self) -> KalturaSocialAction: ...
    def setSocialAction(self, newSocialAction: KalturaSocialAction) -> None: ...
    def getFailStatus(self) -> List[KalturaNetworkActionStatus]: ...
    def setFailStatus(self, newFailStatus: List[KalturaNetworkActionStatus]) -> None: ...

class KalturaSocial(KalturaObjectBase):
    id: str
    name: str
    firstName: str
    lastName: str
    email: str
    gender: str
    userId: str
    birthday: str
    status: str
    pictureUrl: str
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented,
            email: str = NotImplemented,
            gender: str = NotImplemented,
            userId: str = NotImplemented,
            birthday: str = NotImplemented,
            status: str = NotImplemented,
            pictureUrl: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getFirstName(self) -> str: ...
    def setFirstName(self, newFirstName: str) -> None: ...
    def getLastName(self) -> str: ...
    def setLastName(self, newLastName: str) -> None: ...
    def getEmail(self) -> str: ...
    def setEmail(self, newEmail: str) -> None: ...
    def getGender(self) -> str: ...
    def setGender(self, newGender: str) -> None: ...
    def getUserId(self) -> str: ...
    def getBirthday(self) -> str: ...
    def setBirthday(self, newBirthday: str) -> None: ...
    def getStatus(self) -> str: ...
    def getPictureUrl(self) -> str: ...
    def setPictureUrl(self, newPictureUrl: str) -> None: ...

class KalturaFacebookSocial(KalturaSocial):
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented,
            email: str = NotImplemented,
            gender: str = NotImplemented,
            userId: str = NotImplemented,
            birthday: str = NotImplemented,
            status: str = NotImplemented,
            pictureUrl: str = NotImplemented): ...
        pass

class KalturaSocialConfig(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaSocialFacebookConfig(KalturaSocialConfig):
    appId: str
    permissions: str
    def __init__(self,
            appId: str = NotImplemented,
            permissions: str = NotImplemented): ...

    def getAppId(self) -> str: ...
    def setAppId(self, newAppId: str) -> None: ...
    def getPermissions(self) -> str: ...
    def setPermissions(self, newPermissions: str) -> None: ...

class KalturaActionPermissionItem(KalturaObjectBase):
    network: KalturaSocialNetwork
    actionPrivacy: KalturaSocialActionPrivacy
    privacy: KalturaSocialPrivacy
    action: str
    def __init__(self,
            network: KalturaSocialNetwork = NotImplemented,
            actionPrivacy: KalturaSocialActionPrivacy = NotImplemented,
            privacy: KalturaSocialPrivacy = NotImplemented,
            action: str = NotImplemented): ...

    def getNetwork(self) -> KalturaSocialNetwork: ...
    def setNetwork(self, newNetwork: KalturaSocialNetwork) -> None: ...
    def getActionPrivacy(self) -> KalturaSocialActionPrivacy: ...
    def setActionPrivacy(self, newActionPrivacy: KalturaSocialActionPrivacy) -> None: ...
    def getPrivacy(self) -> KalturaSocialPrivacy: ...
    def setPrivacy(self, newPrivacy: KalturaSocialPrivacy) -> None: ...
    def getAction(self) -> str: ...
    def setAction(self, newAction: str) -> None: ...

class KalturaSocialUserConfig(KalturaSocialConfig):
    actionPermissionItems: List[KalturaActionPermissionItem]
    def __init__(self,
            actionPermissionItems: List[KalturaActionPermissionItem] = NotImplemented): ...

    def getActionPermissionItems(self) -> List[KalturaActionPermissionItem]: ...
    def setActionPermissionItems(self, newActionPermissionItems: List[KalturaActionPermissionItem]) -> None: ...

class KalturaSSOAdapterProfileInvoke(KalturaObjectBase):
    adapterData: map
    code: str
    message: str
    def __init__(self,
            adapterData: map = NotImplemented,
            code: str = NotImplemented,
            message: str = NotImplemented): ...

    def getAdapterData(self) -> map: ...
    def setAdapterData(self, newAdapterData: map) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...

class KalturaTimeShiftedTvPartnerSettings(KalturaObjectBase):
    catchUpEnabled: bool
    cdvrEnabled: bool
    startOverEnabled: bool
    trickPlayEnabled: bool
    recordingScheduleWindowEnabled: bool
    protectionEnabled: bool
    catchUpBufferLength: int
    trickPlayBufferLength: int
    recordingScheduleWindow: int
    paddingBeforeProgramStarts: int
    paddingAfterProgramEnds: int
    protectionPeriod: int
    protectionQuotaPercentage: int
    recordingLifetimePeriod: int
    cleanupNoticePeriod: int
    seriesRecordingEnabled: bool
    nonEntitledChannelPlaybackEnabled: bool
    nonExistingChannelPlaybackEnabled: bool
    quotaOveragePolicy: KalturaQuotaOveragePolicy
    protectionPolicy: KalturaProtectionPolicy
    recoveryGracePeriod: int
    privateCopyEnabled: bool
    defaultQuota: int
    personalizedRecording: bool
    maxRecordingConcurrency: int
    maxConcurrencyMargin: int
    shouldRoundStopRecordingsBySeconds: bool
    def __init__(self,
            catchUpEnabled: bool = NotImplemented,
            cdvrEnabled: bool = NotImplemented,
            startOverEnabled: bool = NotImplemented,
            trickPlayEnabled: bool = NotImplemented,
            recordingScheduleWindowEnabled: bool = NotImplemented,
            protectionEnabled: bool = NotImplemented,
            catchUpBufferLength: int = NotImplemented,
            trickPlayBufferLength: int = NotImplemented,
            recordingScheduleWindow: int = NotImplemented,
            paddingBeforeProgramStarts: int = NotImplemented,
            paddingAfterProgramEnds: int = NotImplemented,
            protectionPeriod: int = NotImplemented,
            protectionQuotaPercentage: int = NotImplemented,
            recordingLifetimePeriod: int = NotImplemented,
            cleanupNoticePeriod: int = NotImplemented,
            seriesRecordingEnabled: bool = NotImplemented,
            nonEntitledChannelPlaybackEnabled: bool = NotImplemented,
            nonExistingChannelPlaybackEnabled: bool = NotImplemented,
            quotaOveragePolicy: KalturaQuotaOveragePolicy = NotImplemented,
            protectionPolicy: KalturaProtectionPolicy = NotImplemented,
            recoveryGracePeriod: int = NotImplemented,
            privateCopyEnabled: bool = NotImplemented,
            defaultQuota: int = NotImplemented,
            personalizedRecording: bool = NotImplemented,
            maxRecordingConcurrency: int = NotImplemented,
            maxConcurrencyMargin: int = NotImplemented,
            shouldRoundStopRecordingsBySeconds: bool = NotImplemented): ...

    def getCatchUpEnabled(self) -> bool: ...
    def setCatchUpEnabled(self, newCatchUpEnabled: bool) -> None: ...
    def getCdvrEnabled(self) -> bool: ...
    def setCdvrEnabled(self, newCdvrEnabled: bool) -> None: ...
    def getStartOverEnabled(self) -> bool: ...
    def setStartOverEnabled(self, newStartOverEnabled: bool) -> None: ...
    def getTrickPlayEnabled(self) -> bool: ...
    def setTrickPlayEnabled(self, newTrickPlayEnabled: bool) -> None: ...
    def getRecordingScheduleWindowEnabled(self) -> bool: ...
    def setRecordingScheduleWindowEnabled(self, newRecordingScheduleWindowEnabled: bool) -> None: ...
    def getProtectionEnabled(self) -> bool: ...
    def setProtectionEnabled(self, newProtectionEnabled: bool) -> None: ...
    def getCatchUpBufferLength(self) -> int: ...
    def setCatchUpBufferLength(self, newCatchUpBufferLength: int) -> None: ...
    def getTrickPlayBufferLength(self) -> int: ...
    def setTrickPlayBufferLength(self, newTrickPlayBufferLength: int) -> None: ...
    def getRecordingScheduleWindow(self) -> int: ...
    def setRecordingScheduleWindow(self, newRecordingScheduleWindow: int) -> None: ...
    def getPaddingBeforeProgramStarts(self) -> int: ...
    def setPaddingBeforeProgramStarts(self, newPaddingBeforeProgramStarts: int) -> None: ...
    def getPaddingAfterProgramEnds(self) -> int: ...
    def setPaddingAfterProgramEnds(self, newPaddingAfterProgramEnds: int) -> None: ...
    def getProtectionPeriod(self) -> int: ...
    def setProtectionPeriod(self, newProtectionPeriod: int) -> None: ...
    def getProtectionQuotaPercentage(self) -> int: ...
    def setProtectionQuotaPercentage(self, newProtectionQuotaPercentage: int) -> None: ...
    def getRecordingLifetimePeriod(self) -> int: ...
    def setRecordingLifetimePeriod(self, newRecordingLifetimePeriod: int) -> None: ...
    def getCleanupNoticePeriod(self) -> int: ...
    def setCleanupNoticePeriod(self, newCleanupNoticePeriod: int) -> None: ...
    def getSeriesRecordingEnabled(self) -> bool: ...
    def setSeriesRecordingEnabled(self, newSeriesRecordingEnabled: bool) -> None: ...
    def getNonEntitledChannelPlaybackEnabled(self) -> bool: ...
    def setNonEntitledChannelPlaybackEnabled(self, newNonEntitledChannelPlaybackEnabled: bool) -> None: ...
    def getNonExistingChannelPlaybackEnabled(self) -> bool: ...
    def setNonExistingChannelPlaybackEnabled(self, newNonExistingChannelPlaybackEnabled: bool) -> None: ...
    def getQuotaOveragePolicy(self) -> KalturaQuotaOveragePolicy: ...
    def setQuotaOveragePolicy(self, newQuotaOveragePolicy: KalturaQuotaOveragePolicy) -> None: ...
    def getProtectionPolicy(self) -> KalturaProtectionPolicy: ...
    def setProtectionPolicy(self, newProtectionPolicy: KalturaProtectionPolicy) -> None: ...
    def getRecoveryGracePeriod(self) -> int: ...
    def setRecoveryGracePeriod(self, newRecoveryGracePeriod: int) -> None: ...
    def getPrivateCopyEnabled(self) -> bool: ...
    def setPrivateCopyEnabled(self, newPrivateCopyEnabled: bool) -> None: ...
    def getDefaultQuota(self) -> int: ...
    def setDefaultQuota(self, newDefaultQuota: int) -> None: ...
    def getPersonalizedRecording(self) -> bool: ...
    def setPersonalizedRecording(self, newPersonalizedRecording: bool) -> None: ...
    def getMaxRecordingConcurrency(self) -> int: ...
    def setMaxRecordingConcurrency(self, newMaxRecordingConcurrency: int) -> None: ...
    def getMaxConcurrencyMargin(self) -> int: ...
    def setMaxConcurrencyMargin(self, newMaxConcurrencyMargin: int) -> None: ...
    def getShouldRoundStopRecordingsBySeconds(self) -> bool: ...
    def setShouldRoundStopRecordingsBySeconds(self, newShouldRoundStopRecordingsBySeconds: bool) -> None: ...

class KalturaPurchaseBase(KalturaObjectBase):
    productId: int
    contentId: int
    productType: KalturaTransactionType
    adapterData: str
    def __init__(self,
            productId: int = NotImplemented,
            contentId: int = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            adapterData: str = NotImplemented): ...

    def getProductId(self) -> int: ...
    def setProductId(self, newProductId: int) -> None: ...
    def getContentId(self) -> int: ...
    def setContentId(self, newContentId: int) -> None: ...
    def getProductType(self) -> KalturaTransactionType: ...
    def setProductType(self, newProductType: KalturaTransactionType) -> None: ...
    def getAdapterData(self) -> str: ...
    def setAdapterData(self, newAdapterData: str) -> None: ...

class KalturaPurchase(KalturaPurchaseBase):
    currency: str
    price: float
    paymentMethodId: int
    paymentGatewayId: int
    coupon: str
    def __init__(self,
            productId: int = NotImplemented,
            contentId: int = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            adapterData: str = NotImplemented,
            currency: str = NotImplemented,
            price: float = NotImplemented,
            paymentMethodId: int = NotImplemented,
            paymentGatewayId: int = NotImplemented,
            coupon: str = NotImplemented): ...

    def getCurrency(self) -> str: ...
    def setCurrency(self, newCurrency: str) -> None: ...
    def getPrice(self) -> float: ...
    def setPrice(self, newPrice: float) -> None: ...
    def getPaymentMethodId(self) -> int: ...
    def setPaymentMethodId(self, newPaymentMethodId: int) -> None: ...
    def getPaymentGatewayId(self) -> int: ...
    def setPaymentGatewayId(self, newPaymentGatewayId: int) -> None: ...
    def getCoupon(self) -> str: ...
    def setCoupon(self, newCoupon: str) -> None: ...

class KalturaExternalReceipt(KalturaPurchaseBase):
    receiptId: str
    paymentGatewayName: str
    def __init__(self,
            productId: int = NotImplemented,
            contentId: int = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            adapterData: str = NotImplemented,
            receiptId: str = NotImplemented,
            paymentGatewayName: str = NotImplemented): ...

    def getReceiptId(self) -> str: ...
    def setReceiptId(self, newReceiptId: str) -> None: ...
    def getPaymentGatewayName(self) -> str: ...
    def setPaymentGatewayName(self, newPaymentGatewayName: str) -> None: ...

class KalturaPurchaseSession(KalturaPurchase):
    previewModuleId: int
    def __init__(self,
            productId: int = NotImplemented,
            contentId: int = NotImplemented,
            productType: KalturaTransactionType = NotImplemented,
            adapterData: str = NotImplemented,
            currency: str = NotImplemented,
            price: float = NotImplemented,
            paymentMethodId: int = NotImplemented,
            paymentGatewayId: int = NotImplemented,
            coupon: str = NotImplemented,
            previewModuleId: int = NotImplemented): ...

    def getPreviewModuleId(self) -> int: ...
    def setPreviewModuleId(self, newPreviewModuleId: int) -> None: ...

class KalturaTransaction(KalturaObjectBase):
    id: str
    paymentGatewayReferenceId: str
    paymentGatewayResponseId: str
    state: str
    failReasonCode: int
    createdAt: int
    def __init__(self,
            id: str = NotImplemented,
            paymentGatewayReferenceId: str = NotImplemented,
            paymentGatewayResponseId: str = NotImplemented,
            state: str = NotImplemented,
            failReasonCode: int = NotImplemented,
            createdAt: int = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getPaymentGatewayReferenceId(self) -> str: ...
    def setPaymentGatewayReferenceId(self, newPaymentGatewayReferenceId: str) -> None: ...
    def getPaymentGatewayResponseId(self) -> str: ...
    def setPaymentGatewayResponseId(self, newPaymentGatewayResponseId: str) -> None: ...
    def getState(self) -> str: ...
    def setState(self, newState: str) -> None: ...
    def getFailReasonCode(self) -> int: ...
    def setFailReasonCode(self, newFailReasonCode: int) -> None: ...
    def getCreatedAt(self) -> int: ...
    def setCreatedAt(self, newCreatedAt: int) -> None: ...

class KalturaTransactionStatus(KalturaObjectBase):
    adapterTransactionStatus: KalturaTransactionAdapterStatus
    externalId: str
    externalStatus: str
    externalMessage: str
    failReason: int
    def __init__(self,
            adapterTransactionStatus: KalturaTransactionAdapterStatus = NotImplemented,
            externalId: str = NotImplemented,
            externalStatus: str = NotImplemented,
            externalMessage: str = NotImplemented,
            failReason: int = NotImplemented): ...

    def getAdapterTransactionStatus(self) -> KalturaTransactionAdapterStatus: ...
    def setAdapterTransactionStatus(self, newAdapterTransactionStatus: KalturaTransactionAdapterStatus) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getExternalStatus(self) -> str: ...
    def setExternalStatus(self, newExternalStatus: str) -> None: ...
    def getExternalMessage(self) -> str: ...
    def setExternalMessage(self, newExternalMessage: str) -> None: ...
    def getFailReason(self) -> int: ...
    def setFailReason(self, newFailReason: int) -> None: ...

class KalturaEntitlementRenewalBase(KalturaObjectBase):
    price: float
    purchaseId: int
    subscriptionId: int
    def __init__(self,
            price: float = NotImplemented,
            purchaseId: int = NotImplemented,
            subscriptionId: int = NotImplemented): ...

    def getPrice(self) -> float: ...
    def setPrice(self, newPrice: float) -> None: ...
    def getPurchaseId(self) -> int: ...
    def setPurchaseId(self, newPurchaseId: int) -> None: ...
    def getSubscriptionId(self) -> int: ...
    def setSubscriptionId(self, newSubscriptionId: int) -> None: ...

class KalturaUnifiedPaymentRenewal(KalturaObjectBase):
    price: KalturaPrice
    date: int
    unifiedPaymentId: int
    entitlements: List[KalturaEntitlementRenewalBase]
    userId: int
    def __init__(self,
            price: KalturaPrice = NotImplemented,
            date: int = NotImplemented,
            unifiedPaymentId: int = NotImplemented,
            entitlements: List[KalturaEntitlementRenewalBase] = NotImplemented,
            userId: int = NotImplemented): ...

    def getPrice(self) -> KalturaPrice: ...
    def setPrice(self, newPrice: KalturaPrice) -> None: ...
    def getDate(self) -> int: ...
    def setDate(self, newDate: int) -> None: ...
    def getUnifiedPaymentId(self) -> int: ...
    def setUnifiedPaymentId(self, newUnifiedPaymentId: int) -> None: ...
    def getEntitlements(self) -> List[KalturaEntitlementRenewalBase]: ...
    def setEntitlements(self, newEntitlements: List[KalturaEntitlementRenewalBase]) -> None: ...
    def getUserId(self) -> int: ...
    def setUserId(self, newUserId: int) -> None: ...

class KalturaUploadToken(KalturaObjectBase):
    id: str
    status: KalturaUploadTokenStatus
    fileSize: float
    createDate: int
    updateDate: int
    def __init__(self,
            id: str = NotImplemented,
            status: KalturaUploadTokenStatus = NotImplemented,
            fileSize: float = NotImplemented,
            createDate: int = NotImplemented,
            updateDate: int = NotImplemented): ...

    def getId(self) -> str: ...
    def getStatus(self) -> KalturaUploadTokenStatus: ...
    def getFileSize(self) -> float: ...
    def getCreateDate(self) -> int: ...
    def getUpdateDate(self) -> int: ...

class KalturaUserAssetsListItem(KalturaObjectBase):
    id: str
    orderIndex: int
    type: KalturaUserAssetsListItemType
    userId: str
    listType: KalturaUserAssetsListType
    def __init__(self,
            id: str = NotImplemented,
            orderIndex: int = NotImplemented,
            type: KalturaUserAssetsListItemType = NotImplemented,
            userId: str = NotImplemented,
            listType: KalturaUserAssetsListType = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getOrderIndex(self) -> int: ...
    def setOrderIndex(self, newOrderIndex: int) -> None: ...
    def getType(self) -> KalturaUserAssetsListItemType: ...
    def setType(self, newType: KalturaUserAssetsListItemType) -> None: ...
    def getUserId(self) -> str: ...
    def getListType(self) -> KalturaUserAssetsListType: ...
    def setListType(self, newListType: KalturaUserAssetsListType) -> None: ...

class KalturaUserLoginPin(KalturaObjectBase):
    pinCode: str
    expirationTime: int
    userId: str
    def __init__(self,
            pinCode: str = NotImplemented,
            expirationTime: int = NotImplemented,
            userId: str = NotImplemented): ...

    def getPinCode(self) -> str: ...
    def setPinCode(self, newPinCode: str) -> None: ...
    def getExpirationTime(self) -> int: ...
    def setExpirationTime(self, newExpirationTime: int) -> None: ...
    def getUserId(self) -> str: ...

class KalturaWatchBasedRecommendationsAdminConfiguration(KalturaObjectBase):
    maxProfiles: int
    activeUserDurationDays: int
    recommendationsCachingTimeDays: int
    def __init__(self,
            maxProfiles: int = NotImplemented,
            activeUserDurationDays: int = NotImplemented,
            recommendationsCachingTimeDays: int = NotImplemented): ...

    def getMaxProfiles(self) -> int: ...
    def setMaxProfiles(self, newMaxProfiles: int) -> None: ...
    def getActiveUserDurationDays(self) -> int: ...
    def setActiveUserDurationDays(self, newActiveUserDurationDays: int) -> None: ...
    def getRecommendationsCachingTimeDays(self) -> int: ...
    def setRecommendationsCachingTimeDays(self, newRecommendationsCachingTimeDays: int) -> None: ...

class KalturaAnnouncementService(KalturaServiceBase):
    def add(self, announcement: KalturaAnnouncement) -> KalturaAnnouncement: ...
    def delete(self, id: int) -> bool: ...
    def enableSystemAnnouncements(self) -> bool: ...
    def list(self, filter: KalturaAnnouncementFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaAnnouncementListResponse: ...
    def update(self, announcementId: int, announcement: KalturaAnnouncement) -> KalturaAnnouncement: ...
    def updateStatus(self, id: int, status: bool) -> bool: ...

class KalturaAppTokenService(KalturaServiceBase):
    def add(self, appToken: KalturaAppToken) -> KalturaAppToken: ...
    def delete(self, id: str) -> bool: ...
    def get(self, id: str) -> KalturaAppToken: ...
    def startSession(self, id: str, tokenHash: str, userId: str = NotImplemented, expiry: int = NotImplemented, udid: str = NotImplemented) -> KalturaSessionInfo: ...

class KalturaAssetCommentService(KalturaServiceBase):
    def add(self, comment: KalturaAssetComment) -> KalturaAssetComment: ...
    def list(self, filter: KalturaAssetCommentFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaAssetCommentListResponse: ...

class KalturaAssetService(KalturaServiceBase):
    def add(self, asset: KalturaAsset) -> KalturaAsset: ...
    def addFromBulkUpload(self, fileData: IO[Any], bulkUploadJobData: KalturaBulkUploadJobData, bulkUploadAssetData: KalturaBulkUploadAssetData) -> KalturaBulkUpload: ...
    def count(self, filter: KalturaSearchAssetFilter = NotImplemented) -> KalturaAssetCount: ...
    def delete(self, id: int, assetReferenceType: str) -> bool: ...
    def get(self, id: str, assetReferenceType: str) -> KalturaAsset: ...
    def getAdsContext(self, assetId: str, assetType: str, contextDataParams: KalturaPlaybackContextOptions) -> KalturaAdsContext: ...
    def getPlaybackContext(self, assetId: str, assetType: str, contextDataParams: KalturaPlaybackContextOptions, sourceType: str = NotImplemented) -> KalturaPlaybackContext: ...
    def getPlaybackManifest(self, assetId: str, assetType: str, contextDataParams: KalturaPlaybackContextOptions, sourceType: str = NotImplemented) -> KalturaPlaybackContext: ...
    def groupRepresentativeList(self, groupBy: KalturaAssetGroupBy, unmatchedItemsPolicy: str, orderBy: KalturaBaseAssetOrder = NotImplemented, filter: KalturaListGroupsRepresentativesFilter = NotImplemented, selectionPolicy: KalturaRepresentativeSelectionPolicy = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaAssetListResponse: ...
    def list(self, filter: KalturaAssetFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaAssetListResponse: ...
    def listPersonalSelection(self, filter: KalturaPersonalAssetSelectionFilter) -> KalturaAssetListResponse: ...
    def removeMetasAndTags(self, id: int, assetReferenceType: str, idIn: str) -> bool: ...
    def update(self, id: int, asset: KalturaAsset) -> KalturaAsset: ...
    def watchBasedRecommendationsList(self, profileId: int) -> KalturaAssetListResponse: ...

class KalturaAssetEnrichService(KalturaServiceBase):
    def generateMetadata(self, captionUploadJobId: int, externalAssetIds: List[None], targetDisplayLanguage: str) -> KalturaCaptionUploadJob: ...
    def getCaptionUploadJob(self, captionUploadJobId: int) -> KalturaCaptionUploadJob: ...
    def getGeneratedMetadata(self, captionUploadJobId: int) -> KalturaEnrichedMetadataResult: ...
    def getPartnerConfiguration(self) -> KalturaMetaEnrichConfiguration: ...
    def updatePartnerConfiguration(self, configuration: KalturaMetaEnrichConfiguration) -> KalturaMetaEnrichConfiguration: ...
    def uploadCaptionFile(self, json: KalturaCaptionUploadData, fileName: IO[Any]) -> KalturaCaptionUploadJob: ...

class KalturaAssetFileService(KalturaServiceBase):
    def getContext(self, id: str, contextType: str) -> KalturaAssetFileContext: ...
    def playManifest(self, partnerId: int, assetId: str, assetType: str, assetFileId: int, contextType: str, ks: str = NotImplemented, tokenizedUrl: str = NotImplemented, isAltUrl: bool = False) -> KalturaAssetFile: ...

class KalturaAssetFilePpvService(KalturaServiceBase):
    def add(self, assetFilePpv: KalturaAssetFilePpv) -> KalturaAssetFilePpv: ...
    def delete(self, assetFileId: int, ppvModuleId: int) -> bool: ...
    def list(self, filter: KalturaAssetFilePpvFilter) -> KalturaAssetFilePpvListResponse: ...
    def update(self, assetFileId: int, ppvModuleId: int, assetFilePpv: KalturaAssetFilePpv) -> KalturaAssetFilePpv: ...

class KalturaAssetHistoryService(KalturaServiceBase):
    def clean(self, filter: KalturaAssetHistoryFilter = NotImplemented) -> None: ...
    def getNextEpisode(self, assetId: int = NotImplemented, seriesIdArguments: KalturaSeriesIdArguments = NotImplemented, notWatchedReturnStrategy: str = NotImplemented, watchedAllReturnStrategy: str = NotImplemented) -> KalturaAssetHistory: ...
    def list(self, filter: KalturaAssetHistoryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaAssetHistoryListResponse: ...

class KalturaAssetPersonalMarkupService(KalturaServiceBase):
    def list(self, filter: KalturaAssetPersonalMarkupSearchFilter) -> KalturaAssetPersonalMarkupListResponse: ...

class KalturaAssetPersonalSelectionService(KalturaServiceBase):
    def delete(self, assetId: int, assetType: str, slotNumber: int) -> None: ...
    def deleteAll(self, slotNumber: int) -> None: ...
    def upsert(self, assetId: int, assetType: str, slotNumber: int) -> KalturaAssetPersonalSelection: ...

class KalturaAssetRuleService(KalturaServiceBase):
    def add(self, assetRule: KalturaAssetRule) -> KalturaAssetRule: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaAssetRuleFilter = NotImplemented) -> KalturaAssetRuleListResponse: ...
    def update(self, id: int, assetRule: KalturaAssetRule) -> KalturaAssetRule: ...

class KalturaAssetStatisticsService(KalturaServiceBase):
    def query(self, query: KalturaAssetStatisticsQuery) -> KalturaAssetStatisticsListResponse: ...

class KalturaAssetStructService(KalturaServiceBase):
    def add(self, assetStruct: KalturaAssetStruct) -> KalturaAssetStruct: ...
    def delete(self, id: int) -> bool: ...
    def get(self, id: int) -> KalturaAssetStruct: ...
    def list(self, filter: KalturaBaseAssetStructFilter = NotImplemented) -> KalturaAssetStructListResponse: ...
    def update(self, id: int, assetStruct: KalturaAssetStruct) -> KalturaAssetStruct: ...

class KalturaAssetStructMetaService(KalturaServiceBase):
    def list(self, filter: KalturaAssetStructMetaFilter) -> KalturaAssetStructMetaListResponse: ...
    def update(self, assetStructId: int, metaId: int, assetStructMeta: KalturaAssetStructMeta) -> KalturaAssetStructMeta: ...

class KalturaAssetUserRuleService(KalturaServiceBase):
    def add(self, assetUserRule: KalturaAssetUserRule) -> KalturaAssetUserRule: ...
    def attachUser(self, ruleId: int) -> None: ...
    def delete(self, id: int) -> None: ...
    def detachUser(self, ruleId: int) -> None: ...
    def list(self, filter: KalturaAssetUserRuleFilter = NotImplemented) -> KalturaAssetUserRuleListResponse: ...
    def update(self, id: int, assetUserRule: KalturaAssetUserRule) -> KalturaAssetUserRule: ...

class KalturaBookmarkService(KalturaServiceBase):
    def add(self, bookmark: KalturaBookmark) -> bool: ...
    def list(self, filter: KalturaBookmarkFilter) -> KalturaBookmarkListResponse: ...

class KalturaBulkUploadService(KalturaServiceBase):
    def get(self, id: int) -> KalturaBulkUpload: ...
    def list(self, filter: KalturaBulkUploadFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaBulkUploadListResponse: ...

class KalturaBulkUploadStatisticsService(KalturaServiceBase):
    def get(self, bulkObjectTypeEqual: str, createDateGreaterThanOrEqual: int) -> KalturaBulkUploadStatistics: ...

class KalturaBusinessModuleRuleService(KalturaServiceBase):
    def add(self, businessModuleRule: KalturaBusinessModuleRule) -> KalturaBusinessModuleRule: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaBusinessModuleRule: ...
    def list(self, filter: KalturaBusinessModuleRuleFilter = NotImplemented) -> KalturaBusinessModuleRuleListResponse: ...
    def update(self, id: int, businessModuleRule: KalturaBusinessModuleRule) -> KalturaBusinessModuleRule: ...

class KalturaCampaignService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaCampaign) -> KalturaCampaign: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaCampaignFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaCampaignListResponse: ...
    def setState(self, campaignId: int, newState: str) -> None: ...
    def update(self, id: int, objectToUpdate: KalturaCampaign) -> KalturaCampaign: ...

class KalturaCategoryItemService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaCategoryItem) -> KalturaCategoryItem: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaCategoryItemFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaCategoryItemListResponse: ...
    def update(self, id: int, objectToUpdate: KalturaCategoryItem) -> KalturaCategoryItem: ...

class KalturaCategoryTreeService(KalturaServiceBase):
    def duplicate(self, categoryItemId: int, name: str) -> KalturaCategoryTree: ...
    def get(self, categoryItemId: int, filter: bool = False) -> KalturaCategoryTree: ...
    def getByVersion(self, versionId: int = NotImplemented, deviceFamilyId: int = NotImplemented, filter: bool = False) -> KalturaCategoryTree: ...

class KalturaCategoryVersionService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaCategoryVersion) -> KalturaCategoryVersion: ...
    def createTree(self, categoryItemId: int, name: str, comment: str) -> KalturaCategoryVersion: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaCategoryVersionFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaCategoryVersionListResponse: ...
    def setDefault(self, id: int, force: bool = False) -> None: ...
    def update(self, id: int, objectToUpdate: KalturaCategoryVersion) -> KalturaCategoryVersion: ...

class KalturaCdnAdapterProfileService(KalturaServiceBase):
    def add(self, adapter: KalturaCDNAdapterProfile) -> KalturaCDNAdapterProfile: ...
    def delete(self, adapterId: int) -> bool: ...
    def generateSharedSecret(self, adapterId: int) -> KalturaCDNAdapterProfile: ...
    def list(self) -> KalturaCDNAdapterProfileListResponse: ...
    def update(self, adapterId: int, adapter: KalturaCDNAdapterProfile) -> KalturaCDNAdapterProfile: ...

class KalturaCdnPartnerSettingsService(KalturaServiceBase):
    def get(self) -> KalturaCDNPartnerSettings: ...
    def update(self, settings: KalturaCDNPartnerSettings) -> KalturaCDNPartnerSettings: ...

class KalturaCDVRAdapterProfileService(KalturaServiceBase):
    def add(self, adapter: KalturaCDVRAdapterProfile) -> KalturaCDVRAdapterProfile: ...
    def delete(self, adapterId: int) -> bool: ...
    def generateSharedSecret(self, adapterId: int) -> KalturaCDVRAdapterProfile: ...
    def list(self) -> KalturaCDVRAdapterProfileListResponse: ...
    def update(self, adapterId: int, adapter: KalturaCDVRAdapterProfile) -> KalturaCDVRAdapterProfile: ...

class KalturaChannelService(KalturaServiceBase):
    def add(self, channel: KalturaChannel) -> KalturaChannel: ...
    def delete(self, channelId: int) -> bool: ...
    def get(self, id: int) -> KalturaChannel: ...
    def list(self, filter: KalturaChannelsBaseFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaChannelListResponse: ...
    def update(self, id: int, channel: KalturaChannel) -> KalturaChannel: ...

class KalturaCollectionService(KalturaServiceBase):
    def add(self, collection: KalturaCollection) -> KalturaCollection: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaCollectionFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaCollectionListResponse: ...
    def update(self, id: int, collection: KalturaCollection) -> KalturaCollection: ...

class KalturaCompensationService(KalturaServiceBase):
    def add(self, compensation: KalturaCompensation) -> KalturaCompensation: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaCompensation: ...

class KalturaConfigurationGroupService(KalturaServiceBase):
    def add(self, configurationGroup: KalturaConfigurationGroup) -> KalturaConfigurationGroup: ...
    def delete(self, id: str) -> bool: ...
    def get(self, id: str) -> KalturaConfigurationGroup: ...
    def list(self) -> KalturaConfigurationGroupListResponse: ...
    def update(self, id: str, configurationGroup: KalturaConfigurationGroup) -> KalturaConfigurationGroup: ...

class KalturaConfigurationGroupDeviceService(KalturaServiceBase):
    def add(self, configurationGroupDevice: KalturaConfigurationGroupDevice) -> bool: ...
    def delete(self, udid: str) -> bool: ...
    def get(self, udid: str) -> KalturaConfigurationGroupDevice: ...
    def list(self, filter: KalturaConfigurationGroupDeviceFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaConfigurationGroupDeviceListResponse: ...

class KalturaConfigurationGroupTagService(KalturaServiceBase):
    def add(self, configurationGroupTag: KalturaConfigurationGroupTag) -> KalturaConfigurationGroupTag: ...
    def delete(self, tag: str) -> bool: ...
    def get(self, tag: str) -> KalturaConfigurationGroupTag: ...
    def list(self, filter: KalturaConfigurationGroupTagFilter) -> KalturaConfigurationGroupTagListResponse: ...

class KalturaConfigurationsService(KalturaServiceBase):
    def add(self, configurations: KalturaConfigurations) -> KalturaConfigurations: ...
    def delete(self, id: str) -> bool: ...
    def get(self, id: str) -> KalturaConfigurations: ...
    def list(self, filter: KalturaConfigurationsFilter) -> KalturaConfigurationsListResponse: ...
    def serveByDevice(self, applicationName: str, clientVersion: str, platform: str, udid: str, tag: str, partnerId: int = 0) -> IO[Any]: ...
    def update(self, id: str, configurations: KalturaConfigurations) -> KalturaConfigurations: ...

class KalturaCountryService(KalturaServiceBase):
    def list(self, filter: KalturaCountryFilter) -> KalturaCountryListResponse: ...

class KalturaCouponService(KalturaServiceBase):
    def get(self, code: str) -> KalturaCoupon: ...
    def getFilesLinks(self, couponsGroupId: int) -> KalturaCouponFilesLinks: ...

class KalturaCouponsGroupService(KalturaServiceBase):
    def add(self, couponsGroup: KalturaCouponsGroup) -> KalturaCouponsGroup: ...
    def delete(self, id: int) -> bool: ...
    def generate(self, id: int, couponGenerationOptions: KalturaCouponGenerationOptions) -> KalturaStringValueArray: ...
    def get(self, id: int) -> KalturaCouponsGroup: ...
    def list(self) -> KalturaCouponsGroupListResponse: ...
    def update(self, id: int, couponsGroup: KalturaCouponsGroup) -> KalturaCouponsGroup: ...

class KalturaCurrencyService(KalturaServiceBase):
    def list(self, filter: KalturaCurrencyFilter) -> KalturaCurrencyListResponse: ...

class KalturaDeviceBrandService(KalturaServiceBase):
    def add(self, deviceBrand: KalturaDeviceBrand) -> KalturaDeviceBrand: ...
    def list(self, filter: KalturaDeviceBrandFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDeviceBrandListResponse: ...
    def update(self, id: int, deviceBrand: KalturaDeviceBrand) -> KalturaDeviceBrand: ...

class KalturaDeviceFamilyService(KalturaServiceBase):
    def add(self, deviceFamily: KalturaDeviceFamily) -> KalturaDeviceFamily: ...
    def list(self, filter: KalturaDeviceFamilyFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDeviceFamilyListResponse: ...
    def update(self, id: int, deviceFamily: KalturaDeviceFamily) -> KalturaDeviceFamily: ...

class KalturaDeviceReferenceDataService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaDeviceReferenceData) -> KalturaDeviceReferenceData: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaDeviceReferenceDataFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaDeviceReferenceDataListResponse: ...
    def update(self, id: int, objectToUpdate: KalturaDeviceReferenceData) -> KalturaDeviceReferenceData: ...

class KalturaDiscountDetailsService(KalturaServiceBase):
    def add(self, discountDetails: KalturaDiscountDetails) -> KalturaDiscountDetails: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaDiscountDetailsFilter = NotImplemented) -> KalturaDiscountDetailsListResponse: ...
    def update(self, id: int, discountDetails: KalturaDiscountDetails) -> KalturaDiscountDetails: ...

class KalturaDrmProfileService(KalturaServiceBase):
    def add(self, drmProfile: KalturaDrmProfile) -> KalturaDrmProfile: ...
    def delete(self, id: int) -> bool: ...
    def list(self) -> KalturaDrmProfileListResponse: ...

class KalturaDurationService(KalturaServiceBase):
    def list(self) -> KalturaDurationListResponse: ...

class KalturaDynamicListService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaDynamicList) -> KalturaDynamicList: ...
    def addFromBulkUpload(self, fileData: IO[Any], jobData: KalturaBulkUploadExcelJobData, bulkUploadData: KalturaBulkUploadDynamicListData) -> KalturaBulkUpload: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaDynamicListFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaDynamicListListResponse: ...
    def update(self, id: int, objectToUpdate: KalturaDynamicList) -> KalturaDynamicList: ...

class KalturaEmailService(KalturaServiceBase):
    def send(self, emailMessage: KalturaEmailMessage) -> bool: ...

class KalturaEngagementAdapterService(KalturaServiceBase):
    def add(self, engagementAdapter: KalturaEngagementAdapter) -> KalturaEngagementAdapter: ...
    def delete(self, id: int) -> bool: ...
    def generateSharedSecret(self, id: int) -> KalturaEngagementAdapter: ...
    def get(self, id: int) -> KalturaEngagementAdapter: ...
    def list(self) -> KalturaEngagementAdapterListResponse: ...
    def update(self, id: int, engagementAdapter: KalturaEngagementAdapter) -> KalturaEngagementAdapter: ...

class KalturaEngagementService(KalturaServiceBase):
    def add(self, engagement: KalturaEngagement) -> KalturaEngagement: ...
    def delete(self, id: int) -> bool: ...
    def get(self, id: int) -> KalturaEngagement: ...
    def list(self, filter: KalturaEngagementFilter) -> KalturaEngagementListResponse: ...

class KalturaEntitlementService(KalturaServiceBase):
    def applyCoupon(self, purchaseId: int, couponCode: str) -> None: ...
    def cancel(self, assetId: int, productType: str) -> bool: ...
    def cancelRenewal(self, subscriptionId: str) -> None: ...
    def cancelScheduledSubscription(self, scheduledSubscriptionId: int) -> bool: ...
    def externalReconcile(self) -> bool: ...
    def forceCancel(self, assetId: int, productType: str) -> bool: ...
    def getNextRenewal(self, id: int) -> KalturaEntitlementRenewal: ...
    def grant(self, productId: int, productType: str, history: bool, contentId: int = 0) -> bool: ...
    def list(self, filter: KalturaEntitlementFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaEntitlementListResponse: ...
    def swap(self, currentProductId: int, newProductId: int, history: bool) -> bool: ...
    def update(self, id: int, entitlement: KalturaEntitlement) -> KalturaEntitlement: ...

class KalturaEpgService(KalturaServiceBase):
    def list(self, filter: KalturaEpgFilter = NotImplemented) -> KalturaEpgListResponse: ...

class KalturaEpgServicePartnerConfigurationService(KalturaServiceBase):
    def get(self) -> KalturaEpgServicePartnerConfiguration: ...
    def update(self, config: KalturaEpgServicePartnerConfiguration) -> None: ...

class KalturaEventNotificationActionService(KalturaServiceBase):
    def dispatch(self, scope: KalturaEventNotificationScope) -> bool: ...

class KalturaEventNotificationService(KalturaServiceBase):
    def list(self, filter: KalturaEventNotificationFilter) -> KalturaEventNotificationListResponse: ...
    def update(self, id: str, objectToUpdate: KalturaEventNotification) -> KalturaEventNotification: ...

class KalturaExportTaskService(KalturaServiceBase):
    def add(self, task: KalturaExportTask) -> KalturaExportTask: ...
    def delete(self, id: int) -> bool: ...
    def get(self, id: int) -> KalturaExportTask: ...
    def list(self, filter: KalturaExportTaskFilter = NotImplemented) -> KalturaExportTaskListResponse: ...
    def update(self, id: int, task: KalturaExportTask) -> KalturaExportTask: ...

class KalturaExternalChannelProfileService(KalturaServiceBase):
    def add(self, externalChannel: KalturaExternalChannelProfile) -> KalturaExternalChannelProfile: ...
    def delete(self, externalChannelId: int) -> bool: ...
    def list(self, filter: KalturaExternalChannelProfileFilter = NotImplemented) -> KalturaExternalChannelProfileListResponse: ...
    def update(self, externalChannelId: int, externalChannel: KalturaExternalChannelProfile) -> KalturaExternalChannelProfile: ...

class KalturaFavoriteService(KalturaServiceBase):
    def add(self, favorite: KalturaFavorite) -> KalturaFavorite: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaFavoriteFilter = NotImplemented) -> KalturaFavoriteListResponse: ...

class KalturaFollowTvSeriesService(KalturaServiceBase):
    def add(self, followTvSeries: KalturaFollowTvSeries) -> KalturaFollowTvSeries: ...
    def delete(self, assetId: int) -> bool: ...
    def deleteWithToken(self, assetId: int, token: str, partnerId: int) -> None: ...
    def list(self, filter: KalturaFollowTvSeriesFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaFollowTvSeriesListResponse: ...

class KalturaHomeNetworkService(KalturaServiceBase):
    def add(self, homeNetwork: KalturaHomeNetwork) -> KalturaHomeNetwork: ...
    def delete(self, externalId: str) -> bool: ...
    def list(self) -> KalturaHomeNetworkListResponse: ...
    def update(self, externalId: str, homeNetwork: KalturaHomeNetwork) -> KalturaHomeNetwork: ...

class KalturaHouseholdService(KalturaServiceBase):
    def add(self, household: KalturaHousehold) -> KalturaHousehold: ...
    def delete(self, id: int = NotImplemented) -> bool: ...
    def get(self, id: int = NotImplemented) -> KalturaHousehold: ...
    def getPartnerConfiguration(self) -> KalturaHouseholdPartnerConfiguration: ...
    def list(self, filter: KalturaHouseholdFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaHouseholdListResponse: ...
    def purge(self, id: int) -> bool: ...
    def resetFrequency(self, frequencyType: str) -> KalturaHousehold: ...
    def resume(self) -> bool: ...
    def retryDelete(self, request: KalturaRetryDeleteRequest) -> None: ...
    def suspend(self, roleId: int = NotImplemented) -> bool: ...
    def update(self, household: KalturaHousehold) -> KalturaHousehold: ...
    def updatePartnerConfiguration(self, configuration: KalturaHouseholdPartnerConfiguration) -> None: ...

class KalturaHouseholdCouponService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaHouseholdCoupon) -> KalturaHouseholdCoupon: ...
    def delete(self, id: str) -> None: ...
    def list(self, filter: KalturaHouseholdCouponFilter = NotImplemented) -> KalturaHouseholdCouponListResponse: ...

class KalturaHouseholdDeviceService(KalturaServiceBase):
    def add(self, device: KalturaHouseholdDevice) -> KalturaHouseholdDevice: ...
    def addByPin(self, deviceName: str, pin: str) -> KalturaHouseholdDevice: ...
    def delete(self, udid: str) -> bool: ...
    def deleteDynamicData(self, udid: str, key: str) -> bool: ...
    def generatePin(self, udid: str, brandId: int) -> KalturaDevicePin: ...
    def get(self, udid: str = NotImplemented) -> KalturaHouseholdDevice: ...
    def list(self, filter: KalturaHouseholdDeviceFilter = NotImplemented) -> KalturaHouseholdDeviceListResponse: ...
    def loginWithPin(self, partnerId: int, pin: str, udid: str = NotImplemented, extraParams: map = NotImplemented) -> KalturaLoginResponse: ...
    def retryDelete(self, request: KalturaRetryDeleteRequest) -> None: ...
    def update(self, udid: str, device: KalturaHouseholdDevice) -> KalturaHouseholdDevice: ...
    def updateStatus(self, udid: str, status: str) -> bool: ...
    def upsertDynamicData(self, udid: str, key: str, value: KalturaStringValue) -> KalturaDynamicData: ...

class KalturaHouseholdLimitationsService(KalturaServiceBase):
    def add(self, householdLimitations: KalturaHouseholdLimitations) -> KalturaHouseholdLimitations: ...
    def delete(self, householdLimitationsId: int) -> bool: ...
    def get(self, id: int) -> KalturaHouseholdLimitations: ...
    def isUsed(self, dlmId: int) -> bool: ...
    def list(self) -> KalturaHouseholdLimitationsListResponse: ...
    def update(self, dlmId: int, householdLimitation: KalturaHouseholdLimitations) -> KalturaHouseholdLimitations: ...

class KalturaHouseholdPaymentGatewayService(KalturaServiceBase):
    def disable(self, paymentGatewayId: int) -> bool: ...
    def enable(self, paymentGatewayId: int) -> bool: ...
    def getChargeID(self, paymentGatewayExternalId: str) -> str: ...
    def invoke(self, paymentGatewayId: int, intent: str, extraParameters: List[None]) -> KalturaPaymentGatewayConfiguration: ...
    def list(self) -> KalturaHouseholdPaymentGatewayListResponse: ...
    def resume(self, paymentGatewayId: int, adapterData: List[None] = NotImplemented) -> None: ...
    def setChargeID(self, paymentGatewayExternalId: str, chargeId: str) -> bool: ...
    def suspend(self, paymentGatewayId: int, suspendSettings: KalturaSuspendSettings = NotImplemented) -> None: ...

class KalturaHouseholdPaymentMethodService(KalturaServiceBase):
    def add(self, householdPaymentMethod: KalturaHouseholdPaymentMethod) -> KalturaHouseholdPaymentMethod: ...
    def forceRemove(self, paymentGatewayId: int, paymentMethodId: int) -> bool: ...
    def list(self) -> KalturaHouseholdPaymentMethodListResponse: ...
    def remove(self, paymentGatewayId: int, paymentMethodId: int) -> bool: ...
    def setAsDefault(self, paymentGatewayId: int, paymentMethodId: int) -> bool: ...

class KalturaHouseholdPremiumServiceService(KalturaServiceBase):
    def list(self) -> KalturaHouseholdPremiumServiceListResponse: ...

class KalturaHouseholdQuotaService(KalturaServiceBase):
    def get(self) -> KalturaHouseholdQuota: ...

class KalturaHouseholdSegmentService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaHouseholdSegment) -> KalturaHouseholdSegment: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaHouseholdSegmentFilter = NotImplemented) -> KalturaHouseholdSegmentListResponse: ...

class KalturaHouseholdUserService(KalturaServiceBase):
    def add(self, householdUser: KalturaHouseholdUser) -> KalturaHouseholdUser: ...
    def delete(self, id: str) -> bool: ...
    def list(self, filter: KalturaHouseholdUserFilter = NotImplemented) -> KalturaHouseholdUserListResponse: ...

class KalturaImageService(KalturaServiceBase):
    def add(self, image: KalturaImage) -> KalturaImage: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaImageFilter) -> KalturaImageListResponse: ...
    def setContent(self, id: int, content: KalturaContentResource) -> None: ...

class KalturaImageTypeService(KalturaServiceBase):
    def add(self, imageType: KalturaImageType) -> KalturaImageType: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaImageTypeFilter = NotImplemented) -> KalturaImageTypeListResponse: ...
    def update(self, id: int, imageType: KalturaImageType) -> KalturaImageType: ...

class KalturaInboxMessageService(KalturaServiceBase):
    def get(self, id: str) -> KalturaInboxMessage: ...
    def list(self, filter: KalturaInboxMessageFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaInboxMessageListResponse: ...
    def updateStatus(self, id: str, status: str) -> bool: ...

class KalturaIngestProfileService(KalturaServiceBase):
    def add(self, ingestProfile: KalturaIngestProfile) -> KalturaIngestProfile: ...
    def delete(self, ingestProfileId: int) -> bool: ...
    def list(self) -> KalturaIngestProfileListResponse: ...
    def update(self, ingestProfileId: int, ingestProfile: KalturaIngestProfile) -> KalturaIngestProfile: ...

class KalturaIngestStatusService(KalturaServiceBase):
    def getEpgDetails(self, ingestId: int) -> KalturaIngestEpgDetails: ...
    def getEpgList(self, idsFilter: KalturaIngestByIdsFilter = NotImplemented, filter: KalturaIngestByCompoundFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaIngestStatusEpgListResponse: ...
    def getEpgProgramResultList(self, ingestId: int, filter: KalturaIngestEpgProgramResultFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaIngestStatusEpgProgramResultListResponse: ...
    def getPartnerConfiguration(self) -> KalturaIngestStatusPartnerConfiguration: ...
    def getVodAssetResult(self, filter: KalturaVodIngestAssetResultFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaVodIngestAssetResultResponse: ...
    def updatePartnerConfiguration(self, config: KalturaIngestStatusPartnerConfiguration) -> None: ...

class KalturaIotService(KalturaServiceBase):
    def getClientConfiguration(self) -> KalturaIotClientConfiguration: ...
    def register(self) -> bool: ...

class KalturaIotProfileService(KalturaServiceBase):
    def add(self) -> bool: ...

class KalturaLabelService(KalturaServiceBase):
    def add(self, label: KalturaLabel) -> KalturaLabel: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaLabelFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaLabelListResponse: ...
    def update(self, id: int, label: KalturaLabel) -> KalturaLabel: ...

class KalturaLanguageService(KalturaServiceBase):
    def list(self, filter: KalturaLanguageFilter) -> KalturaLanguageListResponse: ...

class KalturaLicensedUrlService(KalturaServiceBase):
    def get(self, request: KalturaLicensedUrlBaseRequest) -> KalturaLicensedUrl: ...

class KalturaLineupService(KalturaServiceBase):
    def get(self, pageIndex: int, pageSize: int) -> KalturaLineupChannelAssetListResponse: ...
    def invalidate(self) -> bool: ...
    def list(self, filter: KalturaLineupRegionalChannelFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaLineupChannelAssetListResponse: ...
    def sendUpdatedNotification(self, regionIds: str) -> bool: ...

class KalturaLiveToVodService(KalturaServiceBase):
    def getConfiguration(self) -> KalturaLiveToVodFullConfiguration: ...
    def getLinearAssetConfiguration(self, linearAssetId: int) -> KalturaLiveToVodLinearAssetConfiguration: ...
    def getPartnerConfiguration(self) -> KalturaLiveToVodPartnerConfiguration: ...
    def updateLinearAssetConfiguration(self, configuration: KalturaLiveToVodLinearAssetConfiguration) -> KalturaLiveToVodLinearAssetConfiguration: ...
    def updatePartnerConfiguration(self, configuration: KalturaLiveToVodPartnerConfiguration) -> KalturaLiveToVodPartnerConfiguration: ...

class KalturaMediaConcurrencyRuleService(KalturaServiceBase):
    def list(self) -> KalturaMediaConcurrencyRuleListResponse: ...

class KalturaMediaFileService(KalturaServiceBase):
    def add(self, mediaFile: KalturaMediaFile) -> KalturaMediaFile: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaMediaFileFilter = NotImplemented) -> KalturaMediaFileListResponse: ...
    def update(self, id: int, mediaFile: KalturaMediaFile) -> KalturaMediaFile: ...

class KalturaMediaFileDynamicDataService(KalturaServiceBase):
    def add(self, dynamicData: KalturaMediaFileDynamicData) -> KalturaMediaFileDynamicData: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaMediaFileDynamicDataFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaMediaFileDynamicDataListResponse: ...

class KalturaMediaFileTypeService(KalturaServiceBase):
    def add(self, mediaFileType: KalturaMediaFileType) -> KalturaMediaFileType: ...
    def delete(self, id: int) -> bool: ...
    def list(self) -> KalturaMediaFileTypeListResponse: ...
    def update(self, id: int, mediaFileType: KalturaMediaFileType) -> KalturaMediaFileType: ...

class KalturaMessageTemplateService(KalturaServiceBase):
    def get(self, messageType: str) -> KalturaMessageTemplate: ...
    def update(self, messageType: str, template: KalturaMessageTemplate) -> KalturaMessageTemplate: ...

class KalturaMetaService(KalturaServiceBase):
    def add(self, meta: KalturaMeta) -> KalturaMeta: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaMetaFilter = NotImplemented) -> KalturaMetaListResponse: ...
    def update(self, id: int, meta: KalturaMeta) -> KalturaMeta: ...

class KalturaMfaPartnerConfigurationService(KalturaServiceBase):
    def get(self) -> KalturaMultifactorAuthenticationPartnerConfiguration: ...
    def update(self, configuration: KalturaMultifactorAuthenticationPartnerConfiguration) -> KalturaMultifactorAuthenticationPartnerConfiguration: ...

class KalturaNotificationService(KalturaServiceBase):
    def register(self, identifier: str, type: str) -> KalturaRegistryResponse: ...
    def sendPush(self, userId: int, pushMessage: KalturaPushMessage) -> bool: ...
    def sendSms(self, message: str, phoneNumber: str = NotImplemented, adapterData: map = NotImplemented) -> bool: ...
    def setDevicePushToken(self, pushToken: str) -> bool: ...

class KalturaNotificationsPartnerSettingsService(KalturaServiceBase):
    def get(self) -> KalturaNotificationsPartnerSettings: ...
    def update(self, settings: KalturaNotificationsPartnerSettings) -> bool: ...

class KalturaNotificationsSettingsService(KalturaServiceBase):
    def get(self) -> KalturaNotificationsSettings: ...
    def update(self, settings: KalturaNotificationsSettings) -> bool: ...
    def updateWithToken(self, settings: KalturaNotificationsSettings, token: str, partnerId: int) -> bool: ...

class KalturaOssAdapterProfileService(KalturaServiceBase):
    def add(self, ossAdapter: KalturaOSSAdapterProfile) -> KalturaOSSAdapterProfile: ...
    def delete(self, ossAdapterId: int) -> bool: ...
    def generateSharedSecret(self, ossAdapterId: int) -> KalturaOSSAdapterProfile: ...
    def get(self, id: int) -> KalturaOSSAdapterProfile: ...
    def list(self) -> KalturaOSSAdapterProfileListResponse: ...
    def update(self, ossAdapterId: int, ossAdapter: KalturaOSSAdapterProfile) -> KalturaOSSAdapterProfile: ...

class KalturaOttCategoryService(KalturaServiceBase):
    def get(self, id: int) -> KalturaOTTCategory: ...

class KalturaOttUserService(KalturaServiceBase):
    def activate(self, partnerId: int, username: str, activationToken: str) -> KalturaOTTUser: ...
    def addRole(self, roleId: int) -> bool: ...
    def anonymousLogin(self, partnerId: int, udid: str = NotImplemented) -> KalturaLoginSession: ...
    def delete(self) -> bool: ...
    def deleteDynamicData(self, key: str) -> bool: ...
    def get(self) -> KalturaOTTUser: ...
    def getEncryptedUserId(self) -> KalturaStringValue: ...
    def list(self, filter: KalturaOTTUserFilter = NotImplemented) -> KalturaOTTUserListResponse: ...
    def login(self, partnerId: int, username: str = NotImplemented, password: str = NotImplemented, extraParams: map = NotImplemented, udid: str = NotImplemented) -> KalturaLoginResponse: ...
    def loginWithPin(self, partnerId: int, pin: str, udid: str = NotImplemented, secret: str = NotImplemented, extraParams: map = NotImplemented) -> KalturaLoginResponse: ...
    def logout(self, adapterData: map = NotImplemented) -> bool: ...
    def mfaLogin(self, partnerId: int, token: str, username: str = NotImplemented, password: str = NotImplemented, extraParams: map = NotImplemented, udid: str = NotImplemented) -> KalturaLoginResponse: ...
    def register(self, partnerId: int, user: KalturaOTTUser, password: str) -> KalturaOTTUser: ...
    def resendActivationToken(self, partnerId: int, username: str) -> bool: ...
    def resendMfaToken(self, partnerId: int, username: str = NotImplemented, password: str = NotImplemented, extraParams: map = NotImplemented) -> KalturaResendMfaTokenResponse: ...
    def resetPassword(self, partnerId: int, username: str, templateName: str = NotImplemented) -> bool: ...
    def retryDelete(self, request: KalturaRetryDeleteRequest) -> None: ...
    def setInitialPassword(self, partnerId: int, token: str, password: str) -> KalturaOTTUser: ...
    def update(self, user: KalturaOTTUser, id: str = NotImplemented) -> KalturaOTTUser: ...
    def updateDynamicData(self, key: str, value: KalturaStringValue) -> KalturaOTTUserDynamicData: ...
    def updateLoginData(self, username: str, oldPassword: str, newPassword: str) -> bool: ...
    def updatePassword(self, userId: int, password: str) -> None: ...
    def upsertDynamicData(self, key: str, value: KalturaStringValue) -> KalturaDynamicData: ...

class KalturaParentalRuleService(KalturaServiceBase):
    def add(self, parentalRule: KalturaParentalRule) -> KalturaParentalRule: ...
    def delete(self, id: int) -> bool: ...
    def disable(self, ruleId: int, entityReference: str) -> bool: ...
    def disableDefault(self, entityReference: str) -> bool: ...
    def enable(self, ruleId: int, entityReference: str) -> bool: ...
    def get(self, id: int) -> KalturaParentalRule: ...
    def list(self, filter: KalturaParentalRuleFilter) -> KalturaParentalRuleListResponse: ...
    def update(self, id: int, parentalRule: KalturaParentalRule) -> KalturaParentalRule: ...

class KalturaPartnerConfigurationService(KalturaServiceBase):
    def list(self, filter: KalturaPartnerConfigurationFilter) -> KalturaPartnerConfigurationListResponse: ...
    def update(self, configuration: KalturaPartnerConfiguration) -> bool: ...

class KalturaPartnerService(KalturaServiceBase):
    def add(self, partner: KalturaPartner, partnerSetup: KalturaPartnerSetup) -> KalturaPartner: ...
    def createIndexes(self) -> bool: ...
    def delete(self, id: int) -> bool: ...
    def externalLogin(self) -> KalturaLoginSession: ...
    def list(self, filter: KalturaPartnerFilter = NotImplemented) -> KalturaPartnerListResponse: ...

class KalturaPartnerPremiumServicesService(KalturaServiceBase):
    def get(self) -> KalturaPartnerPremiumServices: ...
    def update(self, partnerPremiumServices: KalturaPartnerPremiumServices) -> KalturaPartnerPremiumServices: ...

class KalturaPasswordPolicyService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaPasswordPolicy) -> KalturaPasswordPolicy: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaPasswordPolicyFilter = NotImplemented) -> KalturaPasswordPolicyListResponse: ...
    def update(self, id: int, objectToUpdate: KalturaPasswordPolicy) -> KalturaPasswordPolicy: ...

class KalturaPaymentGatewayProfileService(KalturaServiceBase):
    def add(self, paymentGateway: KalturaPaymentGatewayProfile) -> KalturaPaymentGatewayProfile: ...
    def delete(self, paymentGatewayId: int) -> bool: ...
    def generateSharedSecret(self, paymentGatewayId: int) -> KalturaPaymentGatewayProfile: ...
    def getConfiguration(self, alias: str, intent: str, extraParameters: List[None]) -> KalturaPaymentGatewayConfiguration: ...
    def list(self) -> KalturaPaymentGatewayProfileListResponse: ...
    def update(self, paymentGatewayId: int, paymentGateway: KalturaPaymentGatewayProfile) -> KalturaPaymentGatewayProfile: ...

class KalturaPaymentMethodProfileService(KalturaServiceBase):
    def add(self, paymentMethod: KalturaPaymentMethodProfile) -> KalturaPaymentMethodProfile: ...
    def delete(self, paymentMethodId: int) -> bool: ...
    def list(self, filter: KalturaPaymentMethodProfileFilter) -> KalturaPaymentMethodProfileListResponse: ...
    def update(self, paymentMethodId: int, paymentMethod: KalturaPaymentMethodProfile) -> KalturaPaymentMethodProfile: ...

class KalturaPermissionService(KalturaServiceBase):
    def add(self, permission: KalturaPermission) -> KalturaPermission: ...
    def addPermissionItem(self, permissionId: int, permissionItemId: int) -> None: ...
    def delete(self, id: int) -> None: ...
    def getCurrentPermissions(self) -> str: ...
    def list(self, filter: KalturaBasePermissionFilter = NotImplemented) -> KalturaPermissionListResponse: ...
    def removePermissionItem(self, permissionId: int, permissionItemId: int) -> None: ...
    def update(self, id: int, permission: KalturaPermission) -> KalturaPermission: ...

class KalturaPermissionItemService(KalturaServiceBase):
    def list(self, filter: KalturaPermissionItemFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaPermissionItemListResponse: ...

class KalturaPersonalActivityCleanupService(KalturaServiceBase):
    def getPartnerConfiguration(self) -> KalturaPersonalActivityCleanupConfiguration: ...
    def updatePartnerConfiguration(self, personalActivityCleanupConfiguration: KalturaPersonalActivityCleanupConfiguration) -> KalturaPersonalActivityCleanupConfiguration: ...

class KalturaPersonalFeedService(KalturaServiceBase):
    def list(self, filter: KalturaPersonalFeedFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaPersonalFeedListResponse: ...

class KalturaPersonalListService(KalturaServiceBase):
    def add(self, personalList: KalturaPersonalList) -> KalturaPersonalList: ...
    def delete(self, personalListId: int) -> None: ...
    def list(self, filter: KalturaPersonalListFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaPersonalListListResponse: ...

class KalturaPinService(KalturaServiceBase):
    def get(self, by: str, type: str, ruleId: int = NotImplemented) -> KalturaPin: ...
    def update(self, by: str, type: str, pin: KalturaPin, ruleId: int = NotImplemented) -> KalturaPin: ...
    def validate(self, pin: str, type: str, ruleId: int = NotImplemented) -> bool: ...

class KalturaPlaybackProfileService(KalturaServiceBase):
    def add(self, playbackProfile: KalturaPlaybackProfile) -> KalturaPlaybackProfile: ...
    def delete(self, id: int) -> bool: ...
    def generateSharedSecret(self, id: int) -> KalturaPlaybackProfile: ...
    def list(self, filter: KalturaPlaybackProfileFilter = NotImplemented) -> KalturaPlaybackProfileListResponse: ...
    def update(self, id: int, playbackProfile: KalturaPlaybackProfile) -> KalturaPlaybackProfile: ...

class KalturaPpvService(KalturaServiceBase):
    def add(self, ppv: KalturaPpv) -> KalturaPpv: ...
    def delete(self, id: int) -> bool: ...
    def get(self, id: int) -> KalturaPpv: ...
    def list(self, filter: KalturaPpvFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaPpvListResponse: ...
    def update(self, id: int, ppv: KalturaPpv) -> KalturaPpv: ...

class KalturaPreviewModuleService(KalturaServiceBase):
    def add(self, previewModule: KalturaPreviewModule) -> KalturaPreviewModule: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaPreviewModuleFilter = NotImplemented) -> KalturaPreviewModuleListResponse: ...
    def update(self, id: int, previewModule: KalturaPreviewModule) -> KalturaPreviewModule: ...

class KalturaPriceDetailsService(KalturaServiceBase):
    def add(self, priceDetails: KalturaPriceDetails) -> KalturaPriceDetails: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaPriceDetailsFilter = NotImplemented) -> KalturaPriceDetailsListResponse: ...
    def update(self, id: int, priceDetails: KalturaPriceDetails) -> KalturaPriceDetails: ...

class KalturaPricePlanService(KalturaServiceBase):
    def add(self, pricePlan: KalturaPricePlan) -> KalturaPricePlan: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaPricePlanFilter = NotImplemented) -> KalturaPricePlanListResponse: ...
    def update(self, id: int, pricePlan: KalturaPricePlan) -> KalturaPricePlan: ...

class KalturaProductPriceService(KalturaServiceBase):
    def list(self, filter: KalturaProductPriceFilter) -> KalturaProductPriceListResponse: ...

class KalturaProgramAssetGroupOfferService(KalturaServiceBase):
    def add(self, programAssetGroupOffer: KalturaProgramAssetGroupOffer) -> KalturaProgramAssetGroupOffer: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaProgramAssetGroupOfferFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaProgramAssetGroupOfferListResponse: ...
    def update(self, id: int, programAssetGroupOffer: KalturaProgramAssetGroupOffer) -> KalturaProgramAssetGroupOffer: ...

class KalturaPurchaseSettingsService(KalturaServiceBase):
    def get(self, by: str) -> KalturaPurchaseSettings: ...
    def update(self, entityReference: str, settings: KalturaPurchaseSettings) -> KalturaPurchaseSettings: ...

class KalturaRatioService(KalturaServiceBase):
    def add(self, ratio: KalturaRatio) -> KalturaRatio: ...
    def list(self) -> KalturaRatioListResponse: ...
    def update(self, id: int, ratio: KalturaRatio) -> KalturaRatio: ...

class KalturaRecommendationProfileService(KalturaServiceBase):
    def add(self, recommendationEngine: KalturaRecommendationProfile) -> KalturaRecommendationProfile: ...
    def delete(self, id: int) -> bool: ...
    def generateSharedSecret(self, recommendationEngineId: int) -> KalturaRecommendationProfile: ...
    def list(self) -> KalturaRecommendationProfileListResponse: ...
    def update(self, recommendationEngineId: int, recommendationEngine: KalturaRecommendationProfile) -> KalturaRecommendationProfile: ...

class KalturaRecordingService(KalturaServiceBase):
    def add(self, recording: KalturaRecording) -> KalturaRecording: ...
    def bulkdelete(self, recordingIds: str) -> List[KalturaActionResult]: ...
    def cancel(self, id: int) -> KalturaRecording: ...
    def delete(self, id: int) -> KalturaRecording: ...
    def get(self, id: int) -> KalturaRecording: ...
    def immediateRecord(self, assetId: int, endPadding: int = NotImplemented) -> KalturaImmediateRecording: ...
    def list(self, filter: KalturaRecordingFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaRecordingListResponse: ...
    def protect(self, id: int) -> KalturaRecording: ...
    def stop(self, assetId: int, id: int) -> KalturaRecording: ...
    def update(self, id: int, recording: KalturaRecording) -> KalturaRecording: ...

class KalturaRegionService(KalturaServiceBase):
    def add(self, region: KalturaRegion) -> KalturaRegion: ...
    def linearchannelbulkadd(self, linearChannelId: int, regionChannelNumbers: List[None]) -> bool: ...
    def linearchannelbulkdelete(self, linearChannelId: int, regionIds: str) -> bool: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaBaseRegionFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaRegionListResponse: ...
    def update(self, id: int, region: KalturaRegion) -> KalturaRegion: ...

class KalturaRegistrySettingsService(KalturaServiceBase):
    def list(self) -> KalturaRegistrySettingsListResponse: ...

class KalturaReminderService(KalturaServiceBase):
    def add(self, reminder: KalturaReminder) -> KalturaReminder: ...
    def delete(self, id: int, type: str) -> bool: ...
    def deleteWithToken(self, id: int, type: str, token: str, partnerId: int) -> None: ...
    def list(self, filter: KalturaReminderFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaReminderListResponse: ...

class KalturaReportService(KalturaServiceBase):
    def get(self, udid: str) -> KalturaReport: ...
    def list(self, filter: KalturaReportFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaReportListResponse: ...

class KalturaSearchHistoryService(KalturaServiceBase):
    def clean(self, filter: KalturaSearchHistoryFilter = NotImplemented) -> bool: ...
    def delete(self, id: str) -> bool: ...
    def list(self, filter: KalturaSearchHistoryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaSearchHistoryListResponse: ...

class KalturaSearchPriorityGroupService(KalturaServiceBase):
    def add(self, searchPriorityGroup: KalturaSearchPriorityGroup) -> KalturaSearchPriorityGroup: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaSearchPriorityGroupFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaSearchPriorityGroupListResponse: ...
    def update(self, id: int, searchPriorityGroup: KalturaSearchPriorityGroup) -> KalturaSearchPriorityGroup: ...

class KalturaSearchPriorityGroupOrderedIdsSetService(KalturaServiceBase):
    def get(self) -> KalturaSearchPriorityGroupOrderedIdsSet: ...
    def set(self, orderedList: KalturaSearchPriorityGroupOrderedIdsSet) -> KalturaSearchPriorityGroupOrderedIdsSet: ...

class KalturaSegmentationTypeService(KalturaServiceBase):
    def add(self, segmentationType: KalturaSegmentationType) -> KalturaSegmentationType: ...
    def delete(self, id: int) -> bool: ...
    def getPartnerConfiguration(self) -> KalturaSegmentationPartnerConfiguration: ...
    def list(self, filter: KalturaBaseSegmentationTypeFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaSegmentationTypeListResponse: ...
    def update(self, segmentationTypeId: int, segmentationType: KalturaSegmentationType) -> KalturaSegmentationType: ...
    def updatePartnerConfiguration(self, configuration: KalturaSegmentationPartnerConfiguration) -> bool: ...

class KalturaSeriesRecordingService(KalturaServiceBase):
    def add(self, recording: KalturaSeriesRecording) -> KalturaSeriesRecording: ...
    def cancel(self, id: int) -> KalturaSeriesRecording: ...
    def cancelByEpgId(self, id: int, epgId: int) -> KalturaSeriesRecording: ...
    def cancelBySeasonNumber(self, id: int, seasonNumber: int) -> KalturaSeriesRecording: ...
    def delete(self, id: int) -> KalturaSeriesRecording: ...
    def deleteBySeasonNumber(self, id: int, seasonNumber: int) -> KalturaSeriesRecording: ...
    def list(self, filter: KalturaSeriesRecordingFilter = NotImplemented) -> KalturaSeriesRecordingListResponse: ...
    def rebookCanceledByEpgId(self, epgId: int) -> KalturaSeriesRecording: ...

class KalturaSessionService(KalturaServiceBase):
    def get(self, session: str = NotImplemented) -> KalturaSession: ...
    def revoke(self) -> bool: ...
    def switchUser(self, userIdToSwitch: str) -> KalturaLoginSession: ...

class KalturaSmsAdapterProfileService(KalturaServiceBase):
    def add(self, objectToAdd: KalturaSmsAdapterProfile) -> KalturaSmsAdapterProfile: ...
    def delete(self, id: int) -> None: ...
    def generateSharedSecret(self, smsAdapterId: int) -> KalturaSmsAdapterProfile: ...
    def get(self, id: int) -> KalturaSmsAdapterProfile: ...
    def list(self, filter: KalturaSmsAdapterProfileFilter = NotImplemented) -> KalturaSmsAdapterProfileListResponse: ...
    def update(self, id: int, objectToUpdate: KalturaSmsAdapterProfile) -> KalturaSmsAdapterProfile: ...

class KalturaSocialActionService(KalturaServiceBase):
    def add(self, socialAction: KalturaSocialAction) -> KalturaUserSocialActionResponse: ...
    def delete(self, id: str) -> List[KalturaNetworkActionStatus]: ...
    def list(self, filter: KalturaSocialActionFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaSocialActionListResponse: ...

class KalturaSocialCommentService(KalturaServiceBase):
    def list(self, filter: KalturaSocialCommentFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaSocialCommentListResponse: ...

class KalturaSocialService(KalturaServiceBase):
    def get(self, type: str) -> KalturaSocial: ...
    def getByToken(self, partnerId: int, token: str, type: str) -> KalturaSocial: ...
    def getConfiguration(self, type: str, partnerId: int = NotImplemented) -> KalturaSocialConfig: ...
    def login(self, partnerId: int, token: str, type: str, udid: str = NotImplemented) -> KalturaLoginResponse: ...
    def merge(self, token: str, type: str) -> KalturaSocial: ...
    def register(self, partnerId: int, token: str, type: str, email: str = NotImplemented) -> KalturaSocial: ...
    def unmerge(self, type: str) -> KalturaSocial: ...
    def UpdateConfiguration(self, configuration: KalturaSocialConfig) -> KalturaSocialConfig: ...

class KalturaSocialFriendActivityService(KalturaServiceBase):
    def list(self, filter: KalturaSocialFriendActivityFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaSocialFriendActivityListResponse: ...

class KalturaSsoAdapterProfileService(KalturaServiceBase):
    def add(self, ssoAdapter: KalturaSSOAdapterProfile) -> KalturaSSOAdapterProfile: ...
    def delete(self, ssoAdapterId: int) -> bool: ...
    def generateSharedSecret(self, ssoAdapterId: int) -> KalturaSSOAdapterProfile: ...
    def invoke(self, intent: str, adapterData: List[None]) -> KalturaSSOAdapterProfileInvoke: ...
    def list(self) -> KalturaSSOAdapterProfileListResponse: ...
    def update(self, ssoAdapterId: int, ssoAdapter: KalturaSSOAdapterProfile) -> KalturaSSOAdapterProfile: ...

class KalturaStreamingDeviceService(KalturaServiceBase):
    def bookPlaybackSession(self, fileId: str, assetId: str, assetType: str) -> bool: ...
    def list(self, filter: KalturaStreamingDeviceFilter = NotImplemented) -> KalturaStreamingDeviceListResponse: ...

class KalturaSubscriptionService(KalturaServiceBase):
    def add(self, subscription: KalturaSubscription) -> KalturaSubscription: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaSubscriptionFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaSubscriptionListResponse: ...
    def update(self, id: int, subscription: KalturaSubscription) -> KalturaSubscription: ...
    def validateCoupon(self, id: int, code: str) -> KalturaCoupon: ...

class KalturaSubscriptionSetService(KalturaServiceBase):
    def add(self, subscriptionSet: KalturaSubscriptionSet) -> KalturaSubscriptionSet: ...
    def delete(self, id: int) -> bool: ...
    def get(self, id: int) -> KalturaSubscriptionSet: ...
    def list(self, filter: KalturaSubscriptionSetFilter = NotImplemented) -> KalturaSubscriptionSetListResponse: ...
    def update(self, id: int, subscriptionSet: KalturaSubscriptionSet) -> KalturaSubscriptionSet: ...

class KalturaSystemService(KalturaServiceBase):
    def clearLocalServerCache(self, clearCacheAction: str = NotImplemented, key: str = NotImplemented) -> bool: ...
    def getInvalidationKeyValue(self, invalidationKey: str, layeredCacheConfigName: str = NotImplemented, groupId: int = 0) -> KalturaLongValue: ...
    def getLayeredCacheGroupConfig(self, groupId: int = 0) -> KalturaStringValue: ...
    def getTime(self) -> int: ...
    def getVersion(self) -> str: ...
    def incrementLayeredCacheGroupConfigVersion(self, groupId: int = 0) -> bool: ...
    def invalidateLayeredCacheInvalidationKey(self, key: str) -> bool: ...
    def ping(self) -> bool: ...

class KalturaTagService(KalturaServiceBase):
    def add(self, tag: KalturaTag) -> KalturaTag: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaTagFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaTagListResponse: ...
    def update(self, id: int, tag: KalturaTag) -> KalturaTag: ...

class KalturaTimeShiftedTvPartnerSettingsService(KalturaServiceBase):
    def get(self) -> KalturaTimeShiftedTvPartnerSettings: ...
    def update(self, settings: KalturaTimeShiftedTvPartnerSettings) -> bool: ...

class KalturaTopicService(KalturaServiceBase):
    def delete(self, id: int) -> bool: ...
    def get(self, id: int) -> KalturaTopic: ...
    def list(self, filter: KalturaTopicFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaTopicListResponse: ...
    def updateStatus(self, id: int, automaticIssueNotification: str) -> bool: ...

class KalturaTopicNotificationService(KalturaServiceBase):
    def add(self, topicNotification: KalturaTopicNotification) -> KalturaTopicNotification: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaTopicNotificationFilter) -> KalturaTopicNotificationListResponse: ...
    def subscribe(self, topicNotificationId: int) -> None: ...
    def unsubscribe(self, topicNotificationId: int) -> None: ...
    def update(self, id: int, topicNotification: KalturaTopicNotification) -> KalturaTopicNotification: ...

class KalturaTopicNotificationMessageService(KalturaServiceBase):
    def add(self, topicNotificationMessage: KalturaTopicNotificationMessage) -> KalturaTopicNotificationMessage: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaTopicNotificationMessageFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaTopicNotificationMessageListResponse: ...
    def update(self, id: int, topicNotificationMessage: KalturaTopicNotificationMessage) -> KalturaTopicNotificationMessage: ...

class KalturaTransactionService(KalturaServiceBase):
    def downgrade(self, purchase: KalturaPurchase) -> None: ...
    def getPurchaseSessionId(self, purchaseSession: KalturaPurchaseSession) -> int: ...
    def purchase(self, purchase: KalturaPurchase) -> KalturaTransaction: ...
    def setWaiver(self, assetId: int, transactionType: str) -> bool: ...
    def updateStatus(self, paymentGatewayId: str, externalTransactionId: str, signature: str, status: KalturaTransactionStatus) -> None: ...
    def upgrade(self, purchase: KalturaPurchase) -> KalturaTransaction: ...
    def validateReceipt(self, externalReceipt: KalturaExternalReceipt) -> KalturaTransaction: ...

class KalturaTransactionHistoryService(KalturaServiceBase):
    def list(self, filter: KalturaTransactionHistoryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaBillingTransactionListResponse: ...

class KalturaTvmRuleService(KalturaServiceBase):
    def list(self, filter: KalturaTvmRuleFilter = NotImplemented) -> KalturaTvmRuleListResponse: ...

class KalturaUnifiedPaymentService(KalturaServiceBase):
    def getNextRenewal(self, id: int) -> KalturaUnifiedPaymentRenewal: ...

class KalturaUploadTokenService(KalturaServiceBase):
    def add(self, uploadToken: KalturaUploadToken = NotImplemented) -> KalturaUploadToken: ...
    def upload(self, uploadTokenId: str, fileData: IO[Any]) -> KalturaUploadToken: ...

class KalturaUsageModuleService(KalturaServiceBase):
    def add(self, usageModule: KalturaUsageModule) -> KalturaUsageModule: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaUsageModuleFilter = NotImplemented) -> KalturaUsageModuleListResponse: ...
    def update(self, id: int, usageModule: KalturaUsageModule) -> KalturaUsageModule: ...

class KalturaUserAssetRuleService(KalturaServiceBase):
    def list(self, filter: KalturaUserAssetRuleFilter) -> KalturaUserAssetRuleListResponse: ...

class KalturaUserAssetsListItemService(KalturaServiceBase):
    def add(self, userAssetsListItem: KalturaUserAssetsListItem) -> KalturaUserAssetsListItem: ...
    def delete(self, assetId: str, listType: str) -> bool: ...
    def get(self, assetId: str, listType: str, itemType: str) -> KalturaUserAssetsListItem: ...

class KalturaUserInterestService(KalturaServiceBase):
    def add(self, userInterest: KalturaUserInterest) -> KalturaUserInterest: ...
    def delete(self, id: str) -> bool: ...
    def deleteWithToken(self, id: str, token: str, partnerId: int) -> None: ...
    def list(self) -> KalturaUserInterestListResponse: ...

class KalturaUserLoginPinService(KalturaServiceBase):
    def add(self, secret: str = NotImplemented, pinUsages: int = NotImplemented, pinDuration: int = NotImplemented) -> KalturaUserLoginPin: ...
    def delete(self, pinCode: str) -> bool: ...
    def deleteAll(self) -> bool: ...
    def update(self, pinCode: str, secret: str = NotImplemented, pinUsages: int = NotImplemented, pinDuration: int = NotImplemented) -> KalturaUserLoginPin: ...

class KalturaUserRoleService(KalturaServiceBase):
    def add(self, role: KalturaUserRole) -> KalturaUserRole: ...
    def delete(self, id: int) -> bool: ...
    def list(self, filter: KalturaUserRoleFilter = NotImplemented) -> KalturaUserRoleListResponse: ...
    def update(self, id: int, role: KalturaUserRole) -> KalturaUserRole: ...

class KalturaUserSegmentService(KalturaServiceBase):
    def add(self, userSegment: KalturaUserSegment) -> KalturaUserSegment: ...
    def delete(self, userId: str, segmentId: int) -> bool: ...
    def list(self, filter: KalturaUserSegmentFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaUserSegmentListResponse: ...

class KalturaUserSessionProfileService(KalturaServiceBase):
    def add(self, userSessionProfile: KalturaUserSessionProfile) -> KalturaUserSessionProfile: ...
    def delete(self, id: int) -> None: ...
    def list(self, filter: KalturaUserSessionProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaUserSessionProfileListResponse: ...
    def update(self, id: int, userSessionProfile: KalturaUserSessionProfile) -> KalturaUserSessionProfile: ...

class KalturaWatchBasedRecommendationsAdminConfigurationService(KalturaServiceBase):
    def get(self) -> KalturaWatchBasedRecommendationsAdminConfiguration: ...
    def update(self, configuration: KalturaWatchBasedRecommendationsAdminConfiguration) -> KalturaWatchBasedRecommendationsAdminConfiguration: ...

class KalturaWatchBasedRecommendationsProfileService(KalturaServiceBase):
    def add(self, profile: KalturaWatchBasedRecommendationsProfile) -> KalturaWatchBasedRecommendationsProfile: ...
    def delete(self, id: int) -> None: ...
    def deleteWatchBasedRecommendationsOfProfile(self, id: int) -> None: ...
    def list(self, filter: KalturaWatchBasedRecommendationsProfileFilter = NotImplemented) -> KalturaWatchBasedRecommendationsProfileListResponse: ...
    def update(self, id: int, profile: KalturaWatchBasedRecommendationsProfile) -> KalturaWatchBasedRecommendationsProfile: ...
